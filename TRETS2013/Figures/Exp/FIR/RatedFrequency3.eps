%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.12.0.635 (R2011a). Operating System: Microsoft Windows 7.
%%Title: G:\LOG\Overclocking FPGA Implementation\Matlab Data Processing\FIR\RatedFrequency3.eps
%%CreationDate: 01/10/2013  16:22:31
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    -5    31   426   284
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    -5    31   426   284
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0060 3408 csm

    0     0  5175  3033 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5176 3034 rf
6 w
0 2472 4010 0 0 -2472 673 2699 4 MP
PP
-4010 0 0 2472 4010 0 0 -2472 673 2699 5 MP stroke
4 w
DO
0 sg
 673 2699 mt  673  227 L
 673  227 mt  673  227 L
1245 2699 mt 1245  227 L
1245  227 mt 1245  227 L
1818 2699 mt 1818  227 L
1818  227 mt 1818  227 L
2391 2699 mt 2391  227 L
2391  227 mt 2391  227 L
2964 2699 mt 2964  227 L
2964  227 mt 2964  227 L
3537 2699 mt 3537  227 L
3537  227 mt 3537  227 L
4110 2699 mt 4110  227 L
4110  227 mt 4110  227 L
4683 2699 mt 4683  227 L
4683  227 mt 4683  227 L
 673 2699 mt 4683 2699 L
4683 2699 mt 4683 2699 L
 673 2287 mt 4683 2287 L
4683 2287 mt 4683 2287 L
 673 1875 mt 4683 1875 L
4683 1875 mt 4683 1875 L
 673 1463 mt 4683 1463 L
4683 1463 mt 4683 1463 L
 673 1051 mt 4683 1051 L
4683 1051 mt 4683 1051 L
 673  639 mt 4683  639 L
4683  639 mt 4683  639 L
 673  227 mt 4683  227 L
4683  227 mt 4683  227 L
SO
6 w
 673  227 mt 4683  227 L
 673 2699 mt 4683 2699 L
4683 2699 mt 4683  227 L
 673 2699 mt  673  227 L
 673 2699 mt 4683 2699 L
 673 2699 mt  673  227 L
 673 2699 mt  673 2658 L
 673  227 mt  673  267 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 640 2844 mt 
(1) s
1245 2699 mt 1245 2658 L
1245  227 mt 1245  267 L
1212 2844 mt 
(2) s
1818 2699 mt 1818 2658 L
1818  227 mt 1818  267 L
1785 2844 mt 
(3) s
2391 2699 mt 2391 2658 L
2391  227 mt 2391  267 L
2358 2844 mt 
(4) s
2964 2699 mt 2964 2658 L
2964  227 mt 2964  267 L
2931 2844 mt 
(5) s
3537 2699 mt 3537 2658 L
3537  227 mt 3537  267 L
3504 2844 mt 
(6) s
4110 2699 mt 4110 2658 L
4110  227 mt 4110  267 L
4077 2844 mt 
(7) s
4683 2699 mt 4683 2658 L
4683  227 mt 4683  267 L
4650 2844 mt 
(8) s
 673 2699 mt  713 2699 L
4683 2699 mt 4642 2699 L
 572 2743 mt 
(0) s
 673 2287 mt  713 2287 L
4683 2287 mt 4642 2287 L
 438 2331 mt 
(100) s
 673 1875 mt  713 1875 L
4683 1875 mt 4642 1875 L
 438 1919 mt 
(200) s
 673 1463 mt  713 1463 L
4683 1463 mt 4642 1463 L
 438 1507 mt 
(300) s
 673 1051 mt  713 1051 L
4683 1051 mt 4642 1051 L
 438 1095 mt 
(400) s
 673  639 mt  713  639 L
4683  639 mt 4642  639 L
 438  683 mt 
(500) s
 673  227 mt  713  227 L
4683  227 mt 4642  227 L
 438  271 mt 
(600) s
 673  227 mt 4683  227 L
 673 2699 mt 4683 2699 L
4683 2699 mt 4683  227 L
 673 2699 mt  673  227 L
gs 673 227 4011 2473 rc
DO
24 w
573 5 573 36 573 5 573 14 573 142 573 97 572 481 673 1354 8 MP stroke
gr

24 w
DO
SO
0 j
30 39 -30 39 -30 -39 30 -39 673 1393 5 MP
DP
30 39 -30 39 -30 -39 30 -39 1245 1874 5 MP
DP
30 39 -30 39 -30 -39 30 -39 1818 1971 5 MP
DP
30 39 -30 39 -30 -39 30 -39 2391 2113 5 MP
DP
30 39 -30 39 -30 -39 30 -39 2964 2127 5 MP
DP
30 39 -30 39 -30 -39 30 -39 3537 2132 5 MP
DP
30 39 -30 39 -30 -39 30 -39 4110 2168 5 MP
DP
30 39 -30 39 -30 -39 30 -39 4683 2173 5 MP
DP
DO
gs 673 227 4011 2473 rc
SO
573 16 573 13 573 189 573 13 573 4 573 156 572 215 673 358 8 MP stroke
gr

SO
0 -48 -48 0 0 48 48 0 649 334 5 MP
DP
0 -48 -48 0 0 48 48 0 1221 549 5 MP
DP
0 -48 -48 0 0 48 48 0 1794 705 5 MP
DP
0 -48 -48 0 0 48 48 0 2367 709 5 MP
DP
0 -48 -48 0 0 48 48 0 2940 722 5 MP
DP
0 -48 -48 0 0 48 48 0 3513 911 5 MP
DP
0 -48 -48 0 0 48 48 0 4086 924 5 MP
DP
0 -48 -48 0 0 48 48 0 4659 940 5 MP
DP
gs 673 227 4011 2473 rc
gr

2120 2987 mt 
(Word-length of Input) s
 356 1925 mt  -90 rotate
(Frequency \(MHz\)) s
90 rotate
 656 2742 mt 
( ) s
4667  269 mt 
( ) s
6 w
1 sg
0 334 1364 0 0 -334 3260 2640 4 MP
PP
-1364 0 0 334 1364 0 0 -334 3260 2640 5 MP stroke
4 w
DO
SO
6 w
0 sg
3260 2306 mt 4624 2306 L
3260 2640 mt 4624 2640 L
4624 2640 mt 4624 2306 L
3260 2640 mt 3260 2306 L
3260 2640 mt 4624 2640 L
3260 2640 mt 3260 2306 L
3260 2306 mt 4624 2306 L
3260 2640 mt 4624 2640 L
4624 2640 mt 4624 2306 L
3260 2640 mt 3260 2306 L
3730 2441 mt 
(Timing Analyzer) s
gs 3260 2306 1365 335 rc
DO
24 w
361 0 3332 2398 2 MP stroke
SO
gs 3426 2312 173 173 rc
30 39 -30 39 -30 -39 30 -39 3512 2437 5 MP
DP
gr

gr

24 w
3730 2590 mt 
(FPGA) s
gs 3260 2306 1365 335 rc
361 0 3332 2547 2 MP stroke
gs 3426 2461 173 173 rc
0 -48 -48 0 0 48 48 0 3488 2523 5 MP
DP
gr

6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
