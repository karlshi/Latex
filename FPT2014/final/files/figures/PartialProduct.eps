%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: PartialProduct.pdf
%%Creator: Adobe Acrobat 11.0.0
%%For: ks10
%%CreationDate: 15/10/2014, 23:10:28
%%BoundingBox: 14 17 399 236
%%HiResBoundingBox: 0 0 419.2500 251.2500
%%CropBox: 0 0 419.2500 251.2500
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 948 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2014-05-14T20:49:47+01:00"
   xmp:CreatorTool="Microsoft® Visio® 2010"
   xmp:ModifyDate="2014-05-14T20:49:47+01:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2010">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Shi, Kan</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -251.25 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 251.25 li
419.25 251.25 li
419.25 0 li
cp
clp
gsave
0 251.25 mo
420 251.25 li
420 -.75 li
0 -.75 li
cp
clp
74.836 182.742 mo
149.954 182.742 li
149.954 131.361 li
74.836 131.361 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
1.5 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.836 182.742 mo
149.954 182.742 li
149.954 131.361 li
74.836 131.361 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YEKBAA+CALIBRI Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /YEKBAA+CALIBRI
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e4d8e8000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966af2f4ba00000867c00000a0468656164e625fe3d00000f640000
0036686865610dad073500000f9c00000024686d74782ea705ba00000fc0
0000262c6c6f63615e095da1000035ec00001e466d617870213024da0000
5434000000206e616d65267651f40000545400000e16707265706baf02fe
0000626c00002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e10002ff4000acff00000009000000004d53202000400000
20100600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d00000001000000059eb82652c7f45f0f3cf500190800
00000000bbeb7ccc00000000c522987afbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
0000000000000000000003f4040e00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000035d00ac000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000003e6000f00000000
0000000000000000052200aa000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
043400600000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
027300450000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000040e006b00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000040e006b000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100ef00ef00ef00ef00ef00ef019c019c019c019c
019c019c019c019c019c019c019c019c019c019c019c019c019c019c019c
019c019c019c019c019c019c019c019c019c019c019c019c019c02030203
02030203028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
028e028e028e028e028e028e028e028e028e028e028e028e028e028e028e
032503250325032503250325032503250325032503250325032503250325
032503250325032503250325032503250325032503250325032503250325
032503250325032503250325032503250325032503250325032503250325
032503250325032503250325032503250325032503250325032503250325
032503250325032503250325032503250325032503250325032503250325
032503250325032503250325032503250325032503250325032503250325
032503250325032503250325032503250325032503250325032503250325
032503250325032503250325032503250325039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e03e303e303e303e303e303e303e303e303e303e3
03e303e303e303e303e303e303e303e303e303e303e303e303e303e303e3
03e303e303e303e303e303e303e303e303e303e303e303e303e303e303e3
040604060406040604060406040604060406040604060406040604060406
040604060406040604060406040604060406040604060406040604060406
0406040604060406040604060406044c044c044c044c044c044c044c044c
044c044c044c044c044c044c044c044c044c044c044c044c044c044c044c
044c044c044c044c044c044c044c044c044c044c044c044c044c044c044c
044c044c044c044c044c044c044c044c044c044c044c044c044c04fa04fa
04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa
04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa04fa
04fa04fa04fa04fa04fa04fa04fa04fa0502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
050205020502050205020502050205020502050205020502050205020502
05020502050205020502050205020000000100000f22004f000500490002
00020010002f0065000011902410000100010000002d0222000000030000
0000006400000000000300000001000e00640000000300000002000e0304
0000000300000003003003120000000300000004000e0064000000030000
0005001803420000000300000006000e0064000000030000000700fa035a
0000000300000008002a03d0000000030000000900200454000000030000
000a02a00064000000030000000b00560474000000030000000c002a04ca
000000030000000d029804f4000000030000000e006c078c000100000000
0000003207f800010000000000010007082a00010000000000020007097a
00010000000000030018098100010000000000040007082a000100000000
0005000c099900010000000000060007082a0001000000000007007d09a5
0001000000000008001509e0000100000000000900100a22000100000000
000a0150082a000100000000000b002b0a32000100000000000c00150a5d
000100000000000d014c0a72000100000000000e00360bbe000300010409
0000006400000003000104090001000e00640003000104090002000e0304
0003000104090003003003120003000104090004000e0064000300010409
0005001803420003000104090006000e0064000300010409000700fa035a
0003000104090008002a03d0000300010409000900200454000300010409
000a02a00064000300010409000b00560474000300010409000c002a04ca
000300010409000d029804f4000300010409000e006c078c00a900200032
0030003000380020004d006900630072006f0073006f0066007400200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e00430061006c0069006200720069002000690073002000610020
006d006f006400650072006e002000730061006e00730020007300650072
00690066002000660061006d0069006c0079002000770069007400680020
0073007500620074006c006500200072006f0075006e00640069006e0067
00730020006f006e0020007300740065006d007300200061006e00640020
0063006f0072006e006500720073002e0020004900740020006600650061
007400750072006500730020007200650061006c0020006900740061006c
006900630073002c00200073006d0061006c006c00200063006100700073
002c00200061006e00640020006d0075006c007400690070006c00650020
006e0075006d006500720061006c00200073006500740073002e00200049
00740073002000700072006f0070006f007200740069006f006e00730020
0061006c006c006f00770020006800690067006800200069006d00700061
0063007400200069006e002000740069006700680074006c007900200073
006500740020006c0069006e006500730020006f00660020006200690067
00200061006e006400200073006d0061006c006c00200074006500780074
00200061006c0069006b0065002e002000430061006c0069006200720069
002700730020006d0061006e007900200063007500720076006500730020
0061006e006400200074006800650020006e006500770020007200610073
00740065007200690073006500720020007400650061006d002000750070
00200069006e0020006200690067006700650072002000730069007a0065
007300200074006f002000720065007600650061006c0020006100200077
00610072006d00200061006e006400200073006f00660074002000630068
0061007200610063007400650072002e0052006500670075006c00610072
004d006900630072006f0073006f00660074003a002000430061006c0069
006200720069003a0020003200300030003500560065007200730069006f
006e00200035002e0036003200430061006c006900620072006900200069
007300200065006900740068006500720020006100200072006500670069
007300740065007200650064002000740072006100640065006d00610072
006b0020006f007200200061002000740072006100640065006d00610072
006b0020006f00660020004d006900630072006f0073006f006600740020
0043006f00720070006f0072006100740069006f006e00200069006e0020
00740068006500200055006e006900740065006400200053007400610074
0065007300200061006e0064002f006f00720020006f0074006800650072
00200063006f0075006e00740072006900650073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
0070003a002f002f007700770077002e006d006900630072006f0073006f
00660074002e0063006f006d002f007400790070006f0067007200610070
00680079002f006300740066006f006e007400730068007400740070003a
002f002f0066006f006e007400660061006200720069006b002e0063006f
006d0059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e00200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e0068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f0066006f006e00740073002f
00640065006600610075006c0074002e0061007300700078a92032303038
204d6963726f736f667420436f72706f726174696f6e2e20416c6c205269
676874732052657365727665642e43616c696272692069732061206d6f64
65726e2073616e732073657269662066616d696c79207769746820737562
746c6520726f756e64696e6773206f6e207374656d7320616e6420636f72
6e6572732e204974206665617475726573207265616c206974616c696373
2c20736d616c6c20636170732c20616e64206d756c7469706c65206e756d
6572616c20736574732e204974732070726f706f7274696f6e7320616c6c
6f77206869676820696d7061637420696e2074696768746c792073657420
6c696e6573206f662062696720616e6420736d616c6c207465787420616c
696b652e2043616c696272692773206d616e792063757276657320616e64
20746865206e65772072617374657269736572207465616d20757020696e
206269676765722073697a657320746f2072657665616c2061207761726d
20616e6420736f6674206368617261637465722e526567756c61724d6963
726f736f66743a2043616c696272693a203230303556657273696f6e2035
2e363243616c696272692069732065697468657220612072656769737465
7265642074726164656d61726b206f7220612074726164656d61726b206f
66204d6963726f736f667420436f72706f726174696f6e20696e20746865
20556e697465642053746174657320616e642f6f72206f7468657220636f
756e74726965732e4c7563286173292064652047726f6f74687474703a2f
2f7777772e6d6963726f736f66742e636f6d2f7479706f6772617068792f
6374666f6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f
75206d617920757365207468697320666f6e74206173207065726d697474
6564206279207468652045554c4120666f72207468652070726f64756374
20696e207768696368207468697320666f6e7420697320696e636c756465
6420746f20646973706c617920616e64207072696e7420636f6e74656e74
2e20596f75206d6179206f6e6c792028692920656d626564207468697320
666f6e7420696e20636f6e74656e74206173207065726d69747465642062
792074686520656d62656464696e67207265737472696374696f6e732069
6e636c7564656420696e207468697320666f6e743b20616e642028696929
2074656d706f726172696c7920646f776e6c6f6164207468697320666f6e
7420746f2061207072696e746572206f72206f74686572206f7574707574
2064657669636520746f2068656c70207072696e7420636f6e74656e742e
687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67
72617068792f666f6e74732f64656661756c742e61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[2565 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 1990 882 <0001004501b4022e023d000f000eb400070bed04002fed012fcd31300114
06232122263534363321321e02022e1211fe5e1212121201a2080d090501
f9271e1f26261e06111a>YEKBAA+CALIBRI AddT42Char 
2 2200 970 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>YEKBAA+CALIBRI AddT42Char 
2 2548 1010 <ffff006bffed03bd0520020603ca0000>YEKBAA+CALIBRI AddT42Char 
2 322 62 <000100ac0000034b0514001a0048b90015ffe8b310014d15b8fff0b30f01
4d15b8fff0b30d014d15b8fff6b30c014d15b8ffe8b30b014d15b80211b4
00090f5215b8012bb10654003fed3f012fcde12b2b2b2b2b313025140e02
232122263511343e0233321e02151121321e02034b04090d09fdc4172908
1422181921140801d0090d09044b141b13091f2704ae080c070505070c08
fba109111c00>YEKBAA+CALIBRI AddT42Char 
2 824 100 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>YEKBAA+CALIBRI AddT42Char 
2 1030 104 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c0800>YEKBAA+CALIBRI AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>YEKBAA+CALIBRI AddT42Char 
YEKBAA+CALIBRI /CharStrings get begin
/hyphen 882 def
/six 1010 def
/L 62 def
/T 100 def
/U 104 def
end
YEKBAA+CALIBRI /Encoding get
dup 45 /hyphen put
dup 54 /six put
dup 76 /L put
dup 84 /T put
dup 85 /U put
pop
end
%ADOEndSubsetFont
/FPLHWL+CALIBRI /YEKBAA+CALIBRI findfont ct_VMDictPut
/FPLHWL+CALIBRI*1 
[45{/.notdef}rp /hyphen 8{/.notdef}rp /six 21{/.notdef}rp /L 7{/.notdef}rp /T 
/U 170{/.notdef}rp]
FPLHWL+CALIBRI nf
FPLHWL+CALIBRI*1 [18 0 0 -18 0 0 ]msf
91.134 162.452 mo
(6)sh
100.26 162.452 mo
(-)sh
105.77 162.452 mo
(L)sh
113.337 162.452 mo
(U)sh
124.886 162.452 mo
(T)sh
1 lw
69.507 149.32 mo
46.948 149.32 li
1 /0 /CSD get_res sepcs
.749 sep
@
74.836 149.32 mo
67.796 152.842 li
68.904 150.63 68.904 148.02 67.796 145.8 cv
74.836 149.32 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LLIAAA+CALIBRI,Italic Initial
ct_T42Dict begin
-0.723 -0.273 1.258 1.012
 256 array 0 1 255 {1 index exch /.notdef put} for  /LLIAAA+CALIBRI,Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e7d8b6000000cc000000606376
7420ba7ecec70000012c000005146670676da1ea42ac0000064000000913
676c796648af68270000749800001e5a68656164e489fed900000f540000
0036686865610da90e9b00000f8c00000024686d74786c0906d400000fb0
000026b06c6f6361386231930000366000001ed26d61787019cb118f0000
5534000000206e616d65c2443dcf0000555400000e40707265705fc3ffe0
0000639400001102676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
0202040a0204e10002ff4000acff00000009000000004d53202000010000
20100600fe0001c4079e02262000019f0000000003bd0511000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
00000000000000000000004a004c00540055005600570059004f004e004f
00500051004d005d005f00610063006400650066006700680069006a006b
006c006d006e006d0066006f007000710072007300740075007600710074
00700071007200740075007600780079007a007d00780079007a007b007c
007d0079007c007a007c007d007e007f00800081007e007f008000810082
007f008000810082007e007f008000810082008300850083008400850086
008700880089008600880089008300840085008600870088008900830084
00850086008700880089008a008b008c008d008e008f008a008b008c008d
008f008a008b008c008d008e008f008a008b008c008d008e008f00900095
00900091009200930094009500980099009a009b009c0090009100930096
0097009b009c009f00a20094009600900091009200930094009500960097
00980099009a009b009c009d009e009f00a000a100a200a300a600a70090
00910092009300940095009600980099009f00bc00bd00c100c600be00bf
00bf00c100c200b900be00c200df00e000e400e700e800e9012b01360147
00f200f400cf00640066006a006c006d0070006c006d0069006c00670073
00740075007600770078007a007b007c007d007e00810084008500860087
00880089008a0076007a007b007c007e007f008000820083008400870088
0089008a0077008500870079008200840085008600870088008a0079007a
007c007d007e0081008300840086008700880089008b008c008d008e008f
00900091009200940095008b008c008d008e008f0093009400950093008b
008c008d008e00900091009200930094008c008d008e008f009000910092
009300940095009700980099009a009b009c0096009700980099009a009b
009c009a009c009600980099009a009b009c00960097009b009c009d009e
009f00a000a100a2009d009e009f00a000a100a200a1009d009e009f00a0
00a100a2009d009e009f00a000a100a200a300a500a300a400a500a600a7
00a300a500a300a400a500a600a700a300a400a500a600a700a800a900a8
00a900aa00ab00ac00a800ab00ac00a800a900aa00ab00ac00a800a900aa
00ab00ac00ad00ae00af00b000b100b300b500b600b700b800af00b000b1
00b300b400b700ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700ba00bb00bc00bd
00bf00c000c100c200c300c400ba00bb00bf00c300b900ba00bb00bc00bf
00c100c200c300ba00bc00bf00c200c700c900cb00cc00cd00c500c600c7
00c600c700cb00ce00cf00d100d200db00dc00de00df00e000e400d600e8
00e90123012b00d000d1042600d8050e010503c000c2024e0078042600d7
02990092000005e4000e40465f5e5d5c5b5a59585554535251504f4e4d4c
4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c282625
2423221f181411100f0d0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045b0
0325456164b050515845441b2121592d2c2045b0004360442d2c01b00643
b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c6423
64615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c
4565b02c234445b02b23442d2c4b525845441b2121592d2c01b005251023
208af500b0016023edec2d2c01b005251023208af500b0016123edec2d2c
01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161011020
3c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b0
8051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c
6423648bb81555621bb200802f2b59b002602d2c0c6423648bb840006260
23212d2c4523456023456023456023766818b08062202d2cb00426b00426
b00425b0042545234520b003266062636820b0032661658a2344442d2c20
45b0005458b040442045b04061441b2121592d2c45b1302f4523456160b0
016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b00325
45695358441b2121591b2121592d2c45b01443b0006063b0016069442d2c
b02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033ff
e0b134201bb3330034005944442d2cb0164358b00326458a586466b01f60
1b64b020606620581b21b04059b001615923586559b02923442310b029e0
1b2121212121592d2cb0164358b004254564b020606620581b21b04059b0
016123586559b0292344b00425b00725082058021b0359b0052510b00425
2046b0042523423cb0072510b006252046b00425b0016023423c2058011b
0059b0052510b00425b029e0b0072510b00625b029e0b00425b007250820
58021b0359b00425b003254348b00625b00325b0016043481b2159212121
212121212d2cb0164358b004254564b020606620581b21b04059b0016123
581b6559b0292344b00525b00825082058021b0359b0042510b005252046
b0042523423cb00425b0072508b0072510b006252046b00425b001602342
3c2058011b0059b0042510b00525b029e0b02920456544b0072510b00625
b029e0b00525b00825082058021b0359b00525b003254348b00425b00725
08b00625b00325b0016043481b2159212121212121212d2c02b004252020
46b004252342b0052508b003254548212121212d2c02b0032520b0042508
b0022543482121212d2c452320451820b00050205823652359236820b040
505821b04059235865598a60442d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d2c
b002435458b0472b1b212121592d2cb002435458b0482b1b21212121592d
2cb002435458b0492b1b212121592d2c208a08234b538a4b515a5823381b
2121592d2c0020b200400325b0062649618b3812342d2c01462346602346
6123201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a
2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b94000020063b80400885458b20240
0243604259595959592d2c451868234b51582320452064b04050587c5968
8a6059442d2cb00016b00225b0022501b001233e00b002233eb10102060c
b00a236542b00b234201b001233f00b002233fb10102060cb006236542b0
072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b004
2510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58b0
092b5920b005254ab0042547b004254760b0062547b0806361b00225b000
5558b00325b00725496359b0082558001b0159b00425b0062549b009255c
b009255a58b0092b59b0072546b0806361b0032520b0005558631b215961
2320b0005558b080631b21b08059b0592bb006255c586959b00425202010
b00048233ab0062658001b0159b0052658b003252f598a12233221212d2c
b00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b007
2559b00225b00225070cb005256323b00625636020b94000040063535821
b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1bb0
0426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b
2eb00525b0052507595920b0005558b00525b0052587b00725b007250bb0
092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b00825
b00b254923b00625b0062587b00a2510b00b25c15920b00051b800522378
b00161b00225b00725b0072507b00a25b00d254961b08062b00525b00525
0bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b006
25b0062507b00925b00c2549b0032554b8ffa72379212121212121212121
2121212d2c23b0005458b9400000001bb900004000598ab0005458b94000
00001bb90000400059b05b2b2d2c08b0005458b9400000001bb900004000
590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b
2b2d2cb00426b00426080db00426b00426080db05b2b2d00000100000005
9eb8b322fbfa5f0f3cf50019080000000000bbeb7ccc00000000c5229870
fa34fdcb0a14081c000200090002000000000000000100000600fe0001c4
0aa0fa34fa0b0a140800019a00000000000000000000000003f0040e0000
000000000000000001cf0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000006d7
0052000000000000000000000000000000000000000000000000053c0072
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000004220052000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0427ffd103e600bf00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000041d0051000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000041d0051000000000000000000000000
03d2004d0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000041d0042000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000001d6003f0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
01eaff3b000000000000000000000000000000000000000001d6003f0000
0000000000000000000000000000000000000654003f041d003f00000000
0000000000000000000000000000000000000000041b004e000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000041dfff8000000000000000002be003f000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002ae007100000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000394001500000000000000000000
000000000000032900050000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000029b00bb00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000002730048000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000274002b0274ffc5000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000033500f70000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000040e004d040e005f
040e00200000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a8015901590159015901590159
015901c701c701c701c701c701c701c701c701c701c701c701c7024f024f
024f024f024f024f024f024f024f024f024f024f024f024f024f024f024f
024f024f024f024f024f024f024f024f024f024f024f024f024f024f024f
024f024f02da035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603f103f103f103f103f103f103f103f103f103f103f1
03f103f103f103f103f103f103f103f103f103f103f103f103f1048e048e
048e048e0525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505ee05ee05ee05ee05ee05ee05ee05ee
05ee05ee05ee05ee05ee0663066306630663066306630663066306630663
0663066306f606f606f606f606f606f6073e073e073e073e073e073e0811
08a408a408a408a408a408a408a409120912091209120912091209120912
091209120912091209b609b609b60a370a370a370a370a370a370a370a37
0a370a370a370a370a370a370adb0adb0adb0adb0adb0adb0adb0adb0adb
0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb
0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb
0adb0adb0adb0adb0adb0adb0b590b590b590b590b590bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e
0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e
0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c6c0c6c
0c6c0c6c0c6c0c6c0c6c0c6c0c6c0c6c0c6c0c6c0c6c0c6c0cb70d020d02
0d020d020d020d020d020d020d020d020d020d020d020d020d020d020d02
0d020d020d020d020d020d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0df20e7e0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0000000100000f68005c00050000000000020010002f0060000009ed1102
000000000000002d02220000000300000000006400000000000300000001
000e00640000000300000002000c032a0000000300000003003e03040000
000300000004001c031a0000000300000005001803420000000300000006
001c035a000000030000000700fa03760000000300000008002a03ec0000
00030000000900200470000000030000000a02a00064000000030000000b
00560490000000030000000c002a04e6000000030000000d029805100000
00030000000e006c07a80001000000000000003208140001000000000001
000708460001000000000002000609a90001000000000003001f09960001
000000000004000e09a10001000000000005000c09b50001000000000006
000e09c10001000000000007007d09cf000100000000000800150a0a0001
00000000000900100a4c000100000000000a01500846000100000000000b
002b0a5c000100000000000c00150a87000100000000000d014c0a9c0001
00000000000e00360be80003000104090000006400000003000104090001
000e00640003000104090002000c032a0003000104090003003e03040003
000104090004001c031a0003000104090005001803420003000104090006
001c035a000300010409000700fa03760003000104090008002a03ec0003
00010409000900200470000300010409000a02a00064000300010409000b
00560490000300010409000c002a04e6000300010409000d029805100003
00010409000e006c07a800a9002000320030003000380020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e002e00200041006c006c0020005200690067006800740073
002000520065007300650072007600650064002e00430061006c00690062
00720069002000690073002000610020006d006f006400650072006e0020
00730061006e0073002000730065007200690066002000660061006d0069
006c00790020007700690074006800200073007500620074006c00650020
0072006f0075006e00640069006e006700730020006f006e002000730074
0065006d007300200061006e006400200063006f0072006e006500720073
002e00200049007400200066006500610074007500720065007300200072
00650061006c0020006900740061006c006900630073002c00200073006d
0061006c006c00200063006100700073002c00200061006e00640020006d
0075006c007400690070006c00650020006e0075006d006500720061006c
00200073006500740073002e0020004900740073002000700072006f0070
006f007200740069006f006e007300200061006c006c006f007700200068
00690067006800200069006d007000610063007400200069006e00200074
0069006700680074006c007900200073006500740020006c0069006e0065
00730020006f0066002000620069006700200061006e006400200073006d
0061006c006c0020007400650078007400200061006c0069006b0065002e
002000430061006c0069006200720069002700730020006d0061006e0079
002000630075007200760065007300200061006e00640020007400680065
0020006e0065007700200072006100730074006500720069007300650072
0020007400650061006d00200075007000200069006e0020006200690067
006700650072002000730069007a0065007300200074006f002000720065
007600650061006c002000610020007700610072006d00200061006e0064
00200073006f006600740020006300680061007200610063007400650072
002e004d006900630072006f0073006f00660074003a002000430061006c
00690062007200690020004900740061006c00690063003a002000320030
0030003500560065007200730069006f006e00200035002e003600320043
0061006c0069006200720069002d004900740061006c0069006300430061
006c00690062007200690020006900730020006500690074006800650072
002000610020007200650067006900730074006500720065006400200074
0072006100640065006d00610072006b0020006f00720020006100200074
0072006100640065006d00610072006b0020006f00660020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002e004c00750063002800610073002900200064006500200047
0072006f006f00740068007400740070003a002f002f007700770077002e
006d006900630072006f0073006f00660074002e0063006f006d002f0074
00790070006f006700720061007000680079002f006300740066006f006e
007400730068007400740070003a002f002f0066006f006e007400660061
006200720069006b002e0063006f006d0059006f00750020006d00610079
00200075007300650020007400680069007300200066006f006e00740020
006100730020007000650072006d00690074007400650064002000620079
0020007400680065002000450055004c004100200066006f007200200074
00680065002000700072006f006400750063007400200069006e00200077
00680069006300680020007400680069007300200066006f006e00740020
0069007300200069006e0063006c007500640065006400200074006f0020
0064006900730070006c0061007900200061006e00640020007000720069
006e007400200063006f006e00740065006e0074002e00200059006f0075
0020006d006100790020006f006e006c0079002000280069002900200065
006d0062006500640020007400680069007300200066006f006e00740020
0069006e00200063006f006e00740065006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
00200065006d00620065006400640069006e006700200072006500730074
00720069006300740069006f006e007300200069006e0063006c00750064
0065006400200069006e0020007400680069007300200066006f006e0074
003b00200061006e006400200028006900690029002000740065006d0070
006f0072006100720069006c007900200064006f0077006e006c006f0061
00640020007400680069007300200066006f006e007400200074006f0020
00610020007000720069006e0074006500720020006f00720020006f0074
0068006500720020006f0075007400700075007400200064006500760069
0063006500200074006f002000680065006c00700020007000720069006e
007400200063006f006e00740065006e0074002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e00740073002f00640065006600610075006c0074002e
0061007300700078a92032303038204d6963726f736f667420436f72706f
726174696f6e2e20416c6c205269676874732052657365727665642e4361
6c696272692069732061206d6f6465726e2073616e732073657269662066
616d696c79207769746820737562746c6520726f756e64696e6773206f6e
207374656d7320616e6420636f726e6572732e2049742066656174757265
73207265616c206974616c6963732c20736d616c6c20636170732c20616e
64206d756c7469706c65206e756d6572616c20736574732e204974732070
726f706f7274696f6e7320616c6c6f77206869676820696d706163742069
6e2074696768746c7920736574206c696e6573206f662062696720616e64
20736d616c6c207465787420616c696b652e2043616c696272692773206d
616e792063757276657320616e6420746865206e65772072617374657269
736572207465616d20757020696e206269676765722073697a657320746f
2072657665616c2061207761726d20616e6420736f667420636861726163
7465722e4d6963726f736f66743a2043616c69627269204974616c69633a
203230303556657273696f6e20352e363243616c696272692d4974616c69
6343616c6962726920697320656974686572206120726567697374657265
642074726164656d61726b206f7220612074726164656d61726b206f6620
4d6963726f736f667420436f72706f726174696f6e20696e207468652055
6e697465642053746174657320616e642f6f72206f7468657220636f756e
74726965732e4c7563286173292064652047726f6f74687474703a2f2f77
77772e6d6963726f736f66742e636f6d2f7479706f6772617068792f6374
666f6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f7520
6d617920757365207468697320666f6e74206173207065726d6974746564
206279207468652045554c4120666f72207468652070726f647563742069
6e207768696368207468697320666f6e7420697320696e636c7564656420
746f20646973706c617920616e64207072696e7420636f6e74656e742e20
596f75206d6179206f6e6c792028692920656d626564207468697320666f
6e7420696e20636f6e74656e74206173207065726d697474656420627920
74686520656d62656464696e67207265737472696374696f6e7320696e63
6c7564656420696e207468697320666f6e743b20616e6420286969292074
656d706f726172696c7920646f776e6c6f6164207468697320666f6e7420
746f2061207072696e746572206f72206f74686572206f75747075742064
657669636520746f2068656c70207072696e7420636f6e74656e742e6874
74703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f677261
7068792f666f6e74732f64656661756c742e61737078b10903b8027ab21e
3e1fb80279b21e3e1fb80278b21e0b1fb80277b21e0b1fb80276b21e3a1f
b80275b21e3a1fb80274b21e3e1fb80273b21e3b1fb80272b21e3c1fb802
71b21e3c1fb80270b21e3c1fb8026fb21e3d1fb8026eb21e3d1fb8026db2
1e3e1fb8026cb21e3e1fb8026bb21d411fb8026ab21d411fb80269b21d42
1fb80268b21d431fb80267b21d431fb80266b21d431fb80265b21d431fb8
0264b21d431fb80263b21d411fb80262b21d421fb80261b21d421fb80260
b21d431fb8025fb21d431fb8025eb21c451fb8025db21c451fb8025cb21c
451fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c451f
b80257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb802
52b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb2
1c441fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21c45
1fb80249b21c451fb80248b21c451fb80247b21c451fb80246b21c451fb8
0245b21c451fb80244b21b491fb80243b21b4a1fb80242b21b4a1fb80241
b21b4a1fb80240b21b4b1fb8023fb21b4b1fb8023eb21b4c1fb8023db21b
4c1fb8023cb21b4c1fb8023bb21b4c1fb8023ab21b4c1fb80253b21b4c1f
b80239b21b491fb80238b21b491fb80237b21b4a1fb80236b21b4a1fb802
35b21b4a1fb80234b21b4b1fb80233b21b4b1fb80232b21b4c1fb80231b2
1b4c1fb80230b21b4c1fb8022fb21b4c1fb8022eb21b4c1fb8022db21b49
1fb8022cb21b4a1fb8022bb21b4b1fb8022ab21b4c1fb80229b21b4c1fb8
0228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb80224
b21b4a1fb80223b21b4b1fb80222b21b4c1fb80221b21b4c1fb80220b21b
4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21a4e1fb8021cb21a4e1f
b8021bb21a4f1fb8021ab21a4f1fb80219b21a4f1fb80218b21a4e1fb802
17b21a4e1fb80216b21a4f1fb80215b21a4f1fb80214b21a4f1fb80213b2
1a4e1fb80212b21a4e1fb80211b21a4f1fb80210b21a4e1fb8020fb21a4e
1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4f1fb8020bb21a4f1fb8
020ab21a4f1fb80209b219501fb80208b219511fb80207b219511fb80206
b219511fb80205b219511fb80204b219501fb80203b219511fb80202b219
511fb80201b219511fb80200b219511fb801ffb219511fb801feb219511f
b801fdb219501fb801fcb219511fb801fbb219511fb801fab219511fb801
f9b219511fb801f8b219511fb801f7b219511fb801f6b218531fb801f5b2
18531fb801f4b218541fb801f3b218541fb801f2b218541fb801f1b21854
1fb801f0b218531fb801efb218531fb801eeb218541fb801edb218541fb8
01ecb218541fb801ebb218541fb801eab218531fb801e9b218531fb801e8
b218531fb801e7b218541fb801e6b218541fb801e5b218541fb801e4b218
541fb801e3b218531fb801e2b218531fb801e1b218541fb801e0b218541f
b801dfb218541fb801deb218541fb801ddb217561fb801dcb217561fb801
dbb217571fb801dab217571fb801d9b217561fb801d8b217561fb801d7b2
17571fb801d6b217571fb801d5b217571fb801d4b217571fb801d3b21756
1fb801d2b217571fb801d1b217561fb801d0b217561fb801cfb217571fb8
01ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801ca
b217561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b217
571fb801c5b217571fb801c4b2163e1fb801c3b2163f1fb801c2b2163f1f
b801c1b2165b1fb801c0b2165b1fb801bfb2165b1fb801beb2165b1fb801
bdb2165b1fb801bcb2165b1fb801bbb2165b1fb801bab2163f1fb801b9b2
163f1fb801b8b2165b1fb801b7b2165b1fb801b6b2165b1fb801b5b2165b
1fb801b4b2165b1fb801b3b2165b1fb801b2b2165b1fb801b1b2163f1fb8
01b0b2163e1fb801afb2163f1fb801aeb2163f1fb801adb2165b1fb801ac
b2165b1fb801abb2165b1fb801aab2165b1fb801a9b2165b1fb801a8b216
3e1fb801a7b2163f1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1f
b801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb801
9fb2165b1fb8019eb215621fb8019db215621fb8019cb215631fb8019bb2
15641fb8019ab215651fb80199b215661fb80198b215661fb80197b21566
1fb80196b215661fb80195b215661fb80194b215661fb80193b215661fb8
0192b215611fb80191b215621fb80190b215631fb8018fb215641fb8018e
b215641fb8018db215651fb8018cb215661fb8018bb215661fb8018ab215
631fb80189b215641fb80188b215551fb80187b215611fb80186b215621f
b80185b215621fb80184b215631fb80183b215651fb80182b215661fb801
81b215661fb80180b215661fb8017fb215661fb8017eb215661fb8017db2
15661fb8017cb215661fb8017bb215661fb8017ab215451fb80179b21561
1fb80178b215621fb80177b215621fb80176b215631fb80175b215641fb8
0174b215641fb80173b215651fb80172b215661fb80171b215661fb80170
b215661fb8016fb215661fb8016eb215661fb8016db215661fb8016cb215
661fb8016bb215551fb8016ab215451fb80169b215451fb80168b215361f
b80167b215361fb80166b214821fb80165b214561fb80164b2147f1fb801
63b214551fb80162b214561fb80161b214401fb80160b214551fb8015fb2
14561fb8015eb2147e1fb8015db214831fb8015cb214851fb8015bb2133d
1fb8015ab2131e1fb80159b2131e1fb80158b2130a1fb80157b2130a1fb8
0156b2130b1fb80155b2133a1fb80154b2133a1fb80153b2133a1fb80152
b2133b1fb80151b2133c1fb80150b2133c1fb8014fb212451fb8014eb212
461fb8014db212461fb8014cb212451fb8014bb212451fb8014ab212461f
b80149b212461fb80148b212461fb80147b212441fb80146b212451fb801
45b212461fb80144b212461fb80143b211471fb80142b211571fb80141b2
11581fb80140b211591fb8013fb2115a1fb8013eb2115a1fb8013db2115b
1fb8013cb2115b1fb8013bb2115b1fb8013ab2115b1fb80139b2112b1fb8
0138b2112c1fb80137b211391fb80136b211391fb80135b211461fb80134
b211471fb80133b211471fb80132b211551fb80131b211551fb80130b211
561fb8012fb211561fb8012eb211571fb8012db211571fb8012cb211581f
b8012bb211591fb8012ab211591fb80129b2115a1fb80128b2115a1fb801
27b2115b1fb80126b2115b1fb80125b2115b1fb80124b2115b1fb80123b2
11591fb80122b2115a1fb80121b211391fb80120b211471fb8011fb21156
1fb8011eb211561fb8011db211591fb8011cb211591fb8011bb2115b1fb8
011ab2115b1fb80119b2115b1fb80118b211561fb80117b211561fb80116
b211571fb80115b211571fb80114b211581fb80113b2115a1fb80112b211
5a1fb80111b2115b1fb80110b2115b1fb8010fb2115b1fb8010eb2115b1f
b8010db2115a1fb8010cb2115b1fb8010bb2105d1fb8010ab2105e1fb801
09b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105f1fb80105b2
105d1fb80104b2105e1fb80103b2105f1fb80102b2105f1fb80101b2105f
1fb8010040ff105f1fff105d1ffe105f1ffd105f1ffc105f1ffb105f1ffa
105d1ff9105e1ff8105f1ff7105f1ff6105f1ff5105f1ff40f621ff30f62
1ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621feb
0f631fea0f641fe90f641fe80f641fe70f641fe60f621fe50f621fe40f64
1fe30f621fe20f621fe10f631fe00f641fdf0f641fde0f641fdd0f641fdc
0f641fdb0f641fda0e671fd90e681fd80e681fd70e681fd60e681fd50e67
1fd40e681fd30e681fd20e681fd10e671fd00e681fcf0e681fce0e681fcd
0e681fcc0e681fcb0e681fca0e681fc90e681fc80d6b1fc70d6c1fc60d2a
1fc50d6c1fc40d2c1fc30d6b1fc20d6c1fc10d6d1f40ffc00d6a1fbf0d69
1fbe0d681fbd0d6b1fbc0d311fbb0d311fba0d311fb90c711fb80c721fb7
0c731fb60c741fb50c741fb40c741fb30c731fb20c741fb10d311fb00d31
1faf0d311fae0d311fad0d311fac0d311fab0d311faa0d311fa90b7e1fa8
0b7a1fa70b791fa60b7a1fa50b7c1fa40b7d1fa30b7e1fa20b7e1fa10b7e
1fa00b7e1f9f0b7e1f9e0b7e1f9d0b7e1f9c0b7e1f9b0b7e1f9a0b2d1f99
0b2d1f980aa71f970aa51f960aa71f950aa71f940aa71f930aa71f920a68
1f910a821f900a9b1f8f0a9d1f8e0a9f1f8d0aa71f8c0aa71f8503251f84
03381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b7d
4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578ab7755ba02
8900660288403c5576ab755504751475747503f47501ab75014475013075
0102007510752075030c7455725573ab7255007250728072b072043bb072
e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab
6f556e666d556a03251f6938675568ab67556638645565ab645563386255
613860555f385d555eab5d555c385a555bab5a55593858555703251f5638
545555ab54555338515552ab51554f384e554e03251f4d384b554cab4b55
4a38485549ab4855473846554503381f001c101c201c0310b8ffc0404e1c
1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f1a1f1a0229
0f1901434f19016f197f198f19030f18cf18024018292c460f17cf17df17
ef1704134017292e460016101620160315b8ffc0b3164d5446b8ffc0b316
3f4446b8ffc0b316313546b8ffc0404d162326460f15010f151f1502451f
15010011e011f0110315bf10cf10020f0f010f0fff0f02400f3135460f0e
1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d
313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b
2d30460003012001010001100120010308b8ffc0b301151f46b80100b316
010501b80190b154532b2b4bb807ff524bb008505bb00188b02553b00188
b040515ab00688b000555a5b58b101018e59b101024354b0144b515a58b1
01018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0401d594bb0
ff5358b0001db1160042592b5e7375732b2b745e732b2b5e73742b73742b
7374745e7301755e73742b2b2b2b5e732b5e732b7374755e735e735e7375
5e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e7374
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e000000>
[7771 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> LLIAAA+CALIBRI,Italic AddT42Char 
1 6844 1004 <0002004dffed04090521001f00390087ba027d027e00582bb10102435558
b9003bffc040090f024d003b010f0300ba02300020ffe8b40f024d202db8
0230b40f202d0a23b80103b21b5330b80103b3400a56282b183f1a4ded3f
ed123939012fedd42bed31305f5e5d2b1b4009003b010f03202d0a23b801
03b21b5330b80103b3400a56282b183f1a4ded3fed1239393130015f5e5d
5901140e0407060623222e0235343e04373e0333321e0207342623220607
0e05151416333236373e0504090b19283a4f333ba7705e8656280b19283b
4e331f495560365f865527af5f683b5f28283e3020150a60673c5f27273f
30211509039d2c7f939e9688323c483363915d2c7f939d9787331f322112
3463915e7f7a292728768991876f237f7a292727778991867000>LLIAAA+CALIBRI,Italic AddT42Char 
1 7140 1005 <0001005f000003530517002e008dba027d027e00582bb10102435558b900
30ffc040180f024d0030010f032a142b1320141314001a0b2a25081514b8
014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd111239012f
c4cd393911331133113331305f5e5d2b1b400a0030010f032a25081514b8
014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd1112393130
015f5e5d5925140e042321222635343e04332113050606262635343e0237
253e0333321e02070333321603530305080c0f09fd5b0c0f0305090c100a
010ec3fee710140d05050b120e0151050d121911191f110301e2ea0e0b66
06151716130b141105131618120d03ce94080506100c0b21211e08bf0304
040104070b06fb8f1300>LLIAAA+CALIBRI,Italic AddT42Char 
1 0 0 <00050000fe7303da050e00030007003b00550056004fb52d162d16083c41
0a01ed00490007016400020020018c000800010164401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103dafc5b03
4ffd06027b1f456e4e24021f1b0e140c050120051f17083d4f2e130f2135
2828402f1f070a060205080608293a4422445e3a1afeb503070b070a2016
161a0e0504070c0809201913190e04fe46050efaf2050efb43046cfb9403
313467523605980a0802040606bc1b17253b4621192b20130f13100c0e05
131612060713120b263d4afd8b08171a17070a0a070c100a091818160809
0a060c10fd38>LLIAAA+CALIBRI,Italic AddT42Char 
LLIAAA+CALIBRI,Italic /CharStrings get begin
/space 3 def
/zero 1004 def
/one 1005 def
end
LLIAAA+CALIBRI,Italic /Encoding get
dup 32 /space put
dup 48 /zero put
dup 49 /one put
pop
end
%ADOEndSubsetFont
/FPLHWM+CALIBRI,Italic /LLIAAA+CALIBRI,Italic findfont ct_VMDictPut
/FPLHWM+CALIBRI,Italic*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 206{/.notdef}rp]
FPLHWM+CALIBRI,Italic nf
FPLHWM+CALIBRI,Italic*1 [23.9998 0 0 -23.9998 0 0 ]msf
27.298 43.87 mo
(1)sh
39.4624 43.87 mo
( )sh
44.8883 43.87 mo
(1)sh
57.0527 43.87 mo
( )sh
62.4785 43.87 mo
(0)sh
74.6429 43.87 mo
( )sh
80.0688 43.87 mo
(1)sh
126.3 43.64 mo
(1)sh
138.464 43.64 mo
( )sh
143.89 43.64 mo
(0)sh
156.055 43.64 mo
( )sh
161.48 43.64 mo
(1)sh
173.645 43.64 mo
( )sh
179.071 43.64 mo
(1)sh
1.5 lw
[4.5 4.5 ] 0 dsh
124.51 50.04 mo
141.52 50.04 li
141.52 21.7 li
124.51 21.7 li
124.51 50.04 li
1 /0 /CSD get_res sepcs
.749 sep
@
[1.5 3 ] 0 dsh
92.019 51.76 mo
27.531 51.76 li
1 /0 /CSD get_res sepcs
1 sep
@
[] 0 dsh
92.479 26.8 mo
82.842 26.8 li
@
173.27 26.8 mo
163.63 26.8 li
@
FPLHWM+CALIBRI,Italic*1 [23.9998 0 0 -23.9998 0 0 ]msf
74.885 107.51 mo
(1)sh
87.0494 107.51 mo
( )sh
92.4753 107.51 mo
(1)sh
104.64 107.51 mo
( )sh
110.065 107.51 mo
(0)sh
122.23 107.51 mo
( )sh
127.656 107.51 mo
(1)sh
141.06 90.44 mo
131.42 90.44 li
@
[4.5 4.5 ] 0 dsh
72.885 114.53 mo
89.893 114.53 li
89.893 86.19 li
72.885 86.19 li
72.885 114.53 li
1 /0 /CSD get_res sepcs
.749 sep
@
1 lw
[] 0 dsh
84.933 80.11 mo
85.177 72.1 li
82.451 74.66 li
62.065 52.99 li
59.258 55.63 li
79.644 77.3 li
76.919 79.87 li
84.933 80.11 li
1 /0 /CSD get_res sepcs
1 sep
@
292.82 181.559 mo
367.938 181.559 li
367.938 130.178 li
292.82 130.178 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1.5 lw
292.82 181.559 mo
367.938 181.559 li
367.938 130.178 li
292.82 130.178 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
FPLHWL+CALIBRI*1 [18 0 0 -18 0 0 ]msf
309.12 161.268 mo
(6)sh
318.24 161.268 mo
(-)sh
323.75 161.268 mo
(L)sh
331.317 161.268 mo
(U)sh
342.866 161.268 mo
(T)sh
%ADOBeginSubsetFont: LLIAAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LLIAAA+CALIBRI,Italic gcheck setglobal} if
1 6268 882 <0001004801b40239023d00150017b5000b12e30828ba027f028000582b2b
2fed012fcd313001140e042321222635343e043321321602390106080b11
0afe5d0d0c0205080c0f0b01a30e0b021c06141717140c12120513171813
0b12>LLIAAA+CALIBRI,Italic AddT42Char 
1 910 87 <00020052fffa0428050e001f002f0082ba027d027e00582bb10102435558
b900000237400c201328080927092709141328b80103b71417130908080e
27b80104b54017510e55282b183f3f1a4ded12392f39391239ed012fcd33
32107d87c4c4011810d4ed31301bb900280103b71417130908080e27b801
04b54017510e55282b183f3f1a4ded12392f39391239ed31305901140e04
2323030e0323222e023713363633333216171e0307342627262623230333
323e040428193653769968b25d020a1721191720130702ee083221ff324d
2436573c20b63d40183a21a266a347624a33200f03de35746f634c2bfe2d
070c070504070c0804ab282207080c3249604c3e59120704fdf92034464b
4d00>LLIAAA+CALIBRI,Italic AddT42Char 
1 1182 121 <0001ffd1fffa04870514002f007aba027d027e00582bb10102435558bc00
2302370019000b0235400d0100240c180401190119011725bb0230002f00
0d0231400e40172a52240c121e5212550655282b183f3f3f1239393f012f
1a4deddded1239392f2f12173910ed10ed31301b400c2a52240c121e5212
550655282b183f3f3f1239393f31305901131616060623222e022703010e
032322262636370103263e0233321e021713013e0333321616060702a9f2
07011329231d22130803c4fe78070f18261d21290f0a1001dfdd0801142a
221b21130a04b0016d070e18241d21290f090f0295fdaa161b0f0503080b
090207fdf9090c0703050f1a16025c0236161a0f05030a0f0cfe2701e208
0d0703050f1a1600>LLIAAA+CALIBRI,Italic AddT42Char 
1 1460 122 <000100bffffa04690514002a006fba027d027e00582bb10102435558400a
1b00000c010c0b0b0d20bb0217002a0017022e4010400d25520c001b030b
010612520655282b183f3f12393917393f012f1a4ded2fed12392f333311
33123931301b400e25520c001b030b010612520655282b183f3f12393917
393f31305901030e0323222e023713032626363633321e02171316161733
363637133e0333321616060702505f020b162218192012060160dc060310
25231b2214090467121c0d02244a29f5060f18241e24260b0c0d01f7fe22
070c070505070c0701de02da161a0e05030a0f0dfe9d3e733e3c763c0169
0a0e090307101a12>LLIAAA+CALIBRI,Italic AddT42Char 
1 6360 896 <0001002bfec002cd0577002000314014081b091a001b0d1a1b1a1508c01e
4709bf154e28ba027f028000582b2b3fed3fed123939012fcd2fcd113311
33313001140e0423230133321615140e042321222e023701363633333202
cd0304070a0d08a3fed9a30a0a0205070a0d08ff000c140f0605013b082f
18ff14055b06121416110bfa3c0f0d07121515110907101b14062b271f00
>LLIAAA+CALIBRI,Italic AddT42Char 
1 6510 897 <0001ffc5fec00266057700210033401514210700000f21100f00210410c0
1c470fbf044e28ba027f028000582b2b3fed3fed123939012f2f33113310
cd10cd31300506062321222635343e0433330123222635343e043333321e
02070126072f17ff00090b0303080a0d08a20127a20b0a0204070a0d0aff
0c150f0503fa281e0f0e06121415110a05c40e0d06131516100b07111b13
>LLIAAA+CALIBRI,Italic AddT42Char 
1 3270 361 <0002ff3bfe930202052f0013003b007aba027f028000582bb10102435558
b414303b3100b80261400c0a311f3030143d3b31363c0fb8014740090536
492bf840194f282b183f1a4ded3fdeed11123939113333012fc4ddd4ed11
33113331301bb730143d3b31363c0fb8014740090536492bf840194f282b
183f1a4ded3fdeed11123939113333313059010e0323222e02373e033332
1e02010e0323222627262635343e0433321e0233323e0237133e0333321e
020701fc06111b291e1d2514010506101d281e1e261202fee90f304c6c4a
29370704040304060a0c07070a0c130f2134271c0bbf020a152118172011
050104cc1c26170a0a17261c1c251909091925faf64e7b552d0c06050c0a
05131618130c020102132e4a3603bc070c080404080c0700>LLIAAA+CALIBRI,Italic AddT42Char 
1 5558 455 <00010015fe9403a303bc00300068ba027f028000582bb10102435558b323
141329bb02100000002201fdb318180009b80223400e40132e492308141d
49144b0e4f282b183f3f3f1239393f012f1a4dedc4392fed10ed11393931
301b400c2e492308141d49144b0e4f282b183f3f3f1239393f3130590114
06070e0307010e032322262636371303262635343e0233321e021713333e
03373e0333321603a30405214e688b60fefd06121a25191b2312020bf495
0202071421181b1f11070175023e6454471f020b15241b2d1e03a40b170a
5bc5d7ea81fe9f080c0904050c140e0139036f0c14070b0f090303070e0a
fd2257b4b9bd61080b08030c>LLIAAA+CALIBRI,Italic AddT42Char 
LLIAAA+CALIBRI,Italic /CharStrings get begin
/hyphen 882 def
/P 87 def
/X 121 def
/Y 122 def
/bracketleft 896 def
/bracketright 897 def
/j 361 def
/y 455 def
end
LLIAAA+CALIBRI,Italic /Encoding get
dup 45 /hyphen put
dup 80 /P put
dup 88 /X put
dup 89 /Y put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 106 /j put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FPLHWM+CALIBRI,Italic*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one 30{/.notdef}rp 
/P 7{/.notdef}rp /X /Y /.notdef /bracketleft /.notdef /bracketright 
12{/.notdef}rp /j 14{/.notdef}rp /y 134{/.notdef}rp]
FPLHWM+CALIBRI,Italic nf
FPLHWM+CALIBRI,Italic*1 [18 0 0 -18 0 0 ]msf
32.248 103.95 mo
(X)sh
41.5907 103.95 mo
(y)sh
FPLHWM+CALIBRI,Italic*1 [11.6986 0 0 -11.6986 0 0 ]msf
49.642 106.47 mo
(j)sh
FPLHWM+CALIBRI,Italic*1 [18 0 0 -18 0 0 ]msf
20.094 151.755 mo
(X)sh
29.4367 151.755 mo
(y)sh
FPLHWM+CALIBRI,Italic*1 [11.6986 0 0 -11.6986 0 0 ]msf
37.488 154.268 mo
(j)sh
FPLHWM+CALIBRI,Italic*1 [18 0 0 -18 0 0 ]msf
14.382 174.113 mo
(P)sh
FPLHWM+CALIBRI,Italic*1 [11.6986 0 0 -11.6986 0 0 ]msf
23.681 176.627 mo
([)sh
27.268 176.627 mo
(j)sh
30.067 176.627 mo
(-)sh
33.648 176.627 mo
(1)sh
39.577 176.627 mo
(])sh
FPLHWM+CALIBRI,Italic*1 [13.9997 0 0 -13.9997 0 0 ]msf
245.22 136.43 mo
(X)sh
FPLHWM+CALIBRI,Italic*1 [9.09864 0 0 -9.09864 0 0 ]msf
252.49 138.38 mo
(j)sh
FPLHWM+CALIBRI,Italic*1 [13.9997 0 0 -13.9997 0 0 ]msf
244.03 154.079 mo
(Y)sh
FPLHWM+CALIBRI,Italic*1 [9.09864 0 0 -9.09864 0 0 ]msf
250.85 156.034 mo
(j)sh
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210325d73000000cc000000606376
7420a11cd7eb0000012c000006546670676dcc79599a000007800000066e
676c7966cf0197f400008f5000082fde68656164dd56458f00000df00000
0036686865611233162100000e2800000024686d74785ac2fc0600000e4c
000035606c6f63613726f31a000043ac000035646d61787012b305df0000
7910000000206e616d65e8b3cdc60000793000000a607072657025d64dbf
0000839000000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259b12401885158b92000
0040885458b2020202436042b12401885458b2022002436042004b014b52
58b2020802436042591bb940000080885458b202040243604259b9400000
8063b80100885458b202080243604259b94000010063b80200885458b202
100243604259b94000020063b80400885458b20240024360425959595959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00000001
000000050f5c1289de375f0f3cf5081b080000000000a2e3272a00000000
c891c497faaffd671000080c00000009000100010000000000010000073e
fe4e00431000faaffa7a1000000100000000000000000000000000000d58
06000100000000000239000002390000023900b002d7005e047300150473
0049071d0077055600580187005a02aa007c02aa007c031d004004ac0072
023900aa02aa0041023900ba0239000004730055047300df0473003c0473
00560473001a047300550473004d047300610473005304730055023900b9
023900aa04ac007004ac007204ac00700473005a081f006f0556fffd0556
009605c7006605c7009e055600a204e300a80639006d05c700a4023900bf
04000037055600960473009606aa009805c7009c063900630556009e0639
005805c700a10556005c04e3003005c700a105560009078d001905560009
0556000604e300290239008b023900000239002703c100360473ffe102aa
00590473004a0473008604000050047300460473004b0239001304730042
0473008701c7008801c7ffa20400008801c7008306aa0087047300870473
0044047300870473004802aa00850400003f02390024047300830400001a
05c700060400000f040000210400002802ac0039021400bc02ac002f04ac
00570556fffd0556fffd05c70068055600a205c7009c0639006305c700a1
0473004a0473004a0473004a0473004a0473004a0473004a040000500473
004b0473004b0473004b0473004b023900bd023900230239ffe502390009
047300870473004404730044047300440473004404730044047300830473
0083047300830473008304730049033300800473006b0473001b04730051
02cd006d044c000104e3009905e5000305e50003080000e102aa00de02aa
003d0464004e080000010639005305b4009a0464004e0464004d0464004d
0473fffd049c00a003f4003805b4007a069600a1046400000231000002f6
002f02ec002d0625007f071d004404e3008104e3009e02aa00e804ac0072
046400540473002e0464003304e5001a047300860473008c080000ef0556
fffd0556fffd0639006308000081078d00520473fffc0800000002aa0053
02aa004701c7008001c7006c0464004e03f4002f04000021055600060156
fe390473ffe402aa005c02aa005c040000170400001704730049023900b9
01c7006c02aa0047080000250556fffd055600a20556fffd055600a20556
00a20239008d0239ffe00239000402390015063900630639006306390063
05c700a105c700a105c700a1023900c602aa001902aa000602aa001d02aa
002e02aa00e502aa00a202aa006b02aa003a02aa004b02aa002804730000
01c700030556005c0400003f04e3002904000028021400bc05c7fffd0473
004905560006040000210556009e0473008704ac007204ac00a102aa006b
02aa001902aa002106ac006b06ac006b06ac0021047300000639006d0473
0042023900b10556005c0400003f05c700660400005005c7006604000050
04730046046bffe102aa00ee0556fffd0473004a0556fffd0473004a05c7
009e04eb004705c7fffd055600a20473004b055600a20473004b04730096
01c7004204730096025500880473009a02ac008305c7009c0473008705c7
009c04730087063900630473004405c700a102aa008505c700a102aa003c
0556005c0400003f04e300300239002404e300300300002305c700a10473
008305c700a10473008304e300290400002804e3002904000028046800a4
063900600662005504a00048047400480391006204f000440329002e0530
0048046bffe1040000b002eb005208c000330800004f040000990800004f
040000990800004f040000980400009807d5016a05c0009e04ab007204d5
009d04ac007104d5022204d5010505abffe9050001c905ab027e05abffe9
05ab027e05abffe905ab027e05abffe905abffe905abffe905abffe905ab
ffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905abffe9
05ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab
01c005ab01c005abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d50092
0800000007eb013007eb012007eb013007eb012004d500b204d5008004d5
002a082b0198086b01b807550010060000f40600006f0440003a05400037
04c0003f04150040040000250600005505e100bf038d008904d5ffd90180
008002d50086071500610296000f04d5009202d6008302d6008304d500b2
02d600700556fffd0473004a05c700660400005005c70066040000500556
00a20473004b055600a20473004b055600a20473004b0639006d04730042
0639006d047300420639006d0473004205c700a40473008705c7001f0473
00060239ffce0239ffce0239ffe40239ffe40239fff60239fff50239004b
01c700190400003701c7ffa20556009604000088040000860473009601c7
fffa05c7009c0473008705c900a50473008b063900630473004406390063
0473004405c700a102aa006b0556005c0400003f04e300300239000c05c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
078d001905c70006055600060400002101c700890556fffd0473004a0800
0001071d00440639005304e30081023900b9078d001905c70006078d0019
05c70006078d001905c70006055600060400002101c7008a02aaffe10473
001b04cd005a06ac006b06ac002206ac002206ac004a02aa00e202aa006b
02aa00de02aaffea0557ffff0646ffa706b4ffa80312ffa80632ffa706d8
ffa70605ffa701c7ff780556fffd055600960558fffe055600a204e30029
05c700a4023900bf055600960558000b06aa009805c7009c0533006d0639
006305c700a40556009e04f2009404e30030055600060556000906af007f
05fb0061023900040556000604a00048039100620473008b01c7006b0460
0088049a008c04000019038700480473008b0473005c01c7008904000086
04000018049c00a00400001a0395005c04730044048d008303db00560460
00880433001105b4007a063f005701c7ffc9046000880473004804600088
063f0057055700a206eb0032045500a105c000640556005c023900bf0239
0004040000370875000d081500a406d5003104a900a10515000a05c000a0
0556fffd054000a705560096045500a1056b0000055600a20763000704d5
004e05c000a105c000a104a900a10540001206aa009805c700a406390063
05c000a00556009e05c7006604e300300515000a061500520556000905eb
009f05550057075500a1078000a106550000071500a8054000a505c00055
081500a405c7001a0473004a0495005b0440008802eb008804ab00000473
004b055afffb03ab003204780087047800870380008604ab00180580008c
046b00880473004404550088047300870400005003aa0026040000210695
004b0400000f0495008a042b0045066b008d0695008d0500002805c0008b
042b008404150030060000890455001f0473004b0473000002eb00890415
004b0400003f01c700880239000901c7ffa2074000130680008304730000
0380008604000021046b008803e900a1034a008808000041089500a00585
002d000001010000001e0000003100000031000001010000007e0000007e
0000008c0000008c000001010000001000000101000001210310007d0000
008c023300d20000030b0000ff04023900b9048100690456003203310019
0411002d04d1009601f9009b030f005f04ca009b04b8008c01f9009b0413
002803b0005003b4003c04ca009b04cf005001f9009b02d2003c0498005a
043c00190488006e045f007303b1001903d4000a0466009604130028058e
00640524002803f2009b03f2009b03f2009b01e3005a0356005a0686009b
01f9ffac041300280413002803b4ff5703b4ff570448002d058e0064058e
0064058e0064058e00640481006904810069048100690456003203310019
0411002d04d10096024b0000034a000004b8008c024b00000413002803b0
005003b4003c04cf005002d2003c0498005a0488006e045f007303d4000a
0466009604130028058e00640524002801f9009b0456003203b00050045f
0073049b003c0000ffdc0000ff250000ffdc0000fe51028d00ab028d00a0
02da0043034d007901a8ffba000000460000004600000046000000460000
00480000004600000046000000460435017c0435012e043500b704350081
0435012c043500be043500af043500810435009a043500db04350085028d
00c1043500b3060001000600010002420036060001000435009e04350098
043500cb0600010006000100060001000600010006000100000000460600
010006000100060001000600010006000100060001000600010006000100
051bffba06000100060001000600010005b5003a05b5003a01f4ffba01f4
ffba060001000600010006000100060001000481003604350036043dffba
043dffba03e9004a03e9004a067f0014077600140327ffba041effba067f
0014077600140327ffba041effba051b003204b500240300fff706000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010000000030
0000004600000046000000400000004606000100060001000000ffdc0000
fe510000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ffdc0000ff160000ffdc0000ff200000ffdc0473
004a08000000060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000600010006000100028d
007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a80056
01d60010037500320375003201a8002d01d60013051b003204b5002401f4
ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4ffba
024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba02b3
005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba
06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a0036
0435ffba0327ffba064f0027064f00270224ffba021affba04a7004604a7
00460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d0047
040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba0435
00450435004501f4ffba01f4ffba024200360300fff7039affba0327ffba
0375003203750032051b003204b50024051b003204b5002401f4ffba01f4
ffba045a004004ce0049045a002604ce0039045a005304ce004a045a0053
04ce004a0600010006000100000000460000004606000100060001000600
010000000046000000460600010006000100000000480000004606000100
060001000600010000000046000000460000004600000046000000400000
003006000100000000460000004606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d00ca028d00c7028d
00c606000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000100ffba0800ffba1000ffba06dc0063053f004406d5
00a1055b00830000fddc0000fc2f0000fca60000fe540000fcd70000fd73
0000fe290000fe0d0000fd110000fc670000fd9d0000fbf50000fc720000
fed50000fed50000ff02041b00a006ac006b06ac00190000feb60000fd73
0000fe080000fca60000fe530000fd110000fbc80000faf40000faaf0000
fc720000fbaa0000fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb98
0000fdea0000fe840000fdc20000fcf10000fd5f0000fe760000febc0000
fceb0000fd6c0000fd580000fc900000fd150000fc2c0000fc130000fc12
0000fb960000fb9601c700880556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b0239006301c7001f
023900ba01c7007c06390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406390063
0473004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004406dc0063053f004405c700a10473008305c700a104730083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
008306d500a1055b00830556000604000021055600060400002105560006
040000210556fffd0473004a0239ffe201c7ffb0063900630473004405c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
05c700a1047300830000fefe0000fefe0000fefe0000fefe0455fffd02eb
000c07630007055afffb04a900a10380008604a900a10380008605c700a4
046b00880473fffd040000140473fffd04000014055600090400000f0555
0057042b0045055500a10473008706050063047300550639006004730044
05b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4001001f4
001b01f4001001f4006b01f4fff90227ffce0000000f0000fff502aa00a4
02aa00a40000000e00000056000000560000ffcf01a8000f01d6ffbf01a8
fff501d6ffcd01a8001d01d6fff501a8009301d600130375003203750032
0375003203750032051b003204b5002405b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3003202b3003202b3005f02b3005f
02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f02b3
005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba064f0027064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba04a7004604a7004604a7004604a70046093e0032093e
00320740ffba0740ffba067f0014077600140327ffba041effba04cf002d
04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba040d0047040d004701a8ffba01a8ffba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba043500450435004501f4ffba01f4ffba043500450435
00450435004504350045043500450435004501f4ffba01f4ffba04350045
043500450481003604350036043dffba043dffba024200360300fff7031a
001a031a001a031a001a0375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
0032037500320375003203750032051bffba04b5ffba051b003204b50024
01f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba01f4
ffba051b003204b50024067f0045067f0045067f0045067f004501a80028
0000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e08fc
003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000ff9f
018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff580000
ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba045a002a039a00360435ffba0327ffba034d007902b400230242
003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4006d
067f00140776001401f9009b0000fed902bc000003f2009b045afff504ce
fff5045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a04350071043500ad045a
000f04ce000f0473001406110014054000a7047300860540000a0473000a
05c7005105c700660400005005c7fffd067a00140540004a047300460474
00480556006e04d5005304e3ffc40639006d04fe000f070c008701c70083
0239001f055600960400008801c7001504000018072000a405c7ffb80473
008b0639006006f200630557004406090014047300860556009e0556006b
0400004f04f20094030b00440239002404e300140239002404e3003005fb
006105c700a1062e00100400002104e300290400002804e3002904e30031
045c0044045c003f0473003c0473005503ab003203e50024047300870214
00bc034e00bc04ac0072023900b00aaa009e09c7009e08640046087f0096
06aa0096039c008309c7009c078e009c062b0087047300550556fffd0473
004a0000fefe0556fffd0473004a08000001071d00440639006d0473001a
0639006d0473004205560096040000880639006304730044063900630473
004404e30029045c004c01c7ffa20aaa009e09c7009e086400460639006d
04730042084600a404f2009e05c7009c047300870556fffd0473004a0556
fffd0473004a055600a20473004b055600a20473004b0239ff8a0239ff64
023900040239fff60639006304730044063900630473004405c700a102aa
ffcc05c700a102aa006805c700a10473007605c700a1047300830556005c
0400003f04e3003002390024045c0051037e001305c700a40473008705a6
00a404d6005e0486005e04e30029040000280556fffd0473004a055600a2
0473004b06390063047300440000fefd0639006304730044063900630473
004406390063047300440556000604000021047300570473004804730086
04730086040000130400005004730046047300460473005505e9005503ab
004903ab0032050d0032040f00440239ffb9047300420473004204780050
0402001904ef00190473008b047300870473008701c7001901c7005702d9
0044029e0000026e001401c700830493008306aa008406aa008406aa0087
0473ffa60473008b046c00870473004406530044063f00570466004402aa
ffe402aaffe402aaffe402aa008502aa008502aa008502aaffe40455008a
0455008a0400003f01c7ffa20214ffb901c7ff7202cb00000239000f0239
002404730019048c0054046000880400001a05c700060400001804280019
0400002804540028045c004c045c00790400002404000050040000240400
00500639006304400088040f004904780050046b0088032e000004000008
033b008804730048040000240400005007b7004607400046080b004605b3
0024036f002405c00024061c0013054a0083050f008303e2001e04380063
03110064031100640146ffce01eb006401eb000001eb000002ea006403d9
0000029100000187005a02d7005e01c7008001c7006c01c7008a02aa00fb
02aa00fb02ca003202ca003204ac007004ac007004ac006504ac006502aa
012102aa00de02aa005902aa012102aa001d02aa005902aa00de023900b6
023900b602aa00fb02aa00fb02aa00a602aa00a602aa00a602aa001d02aa
ffe202aafffb029400000142006402b8003202a0000002ca003203100096
0310009603100096031000960310009602aa006202aa006202aa002802aa
001d02aa0047045700960457009604570096045700960457004304570043
045700430457004304570043031000430457002f0457002f0457002f0457
002f0457002f0310002f0457002504570025045700250457002504570025
0310002f0457001a0457001a0457001a0457001a0457001a0310001a0457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
00420457002f0457002f0457002f0457002f0457002f0310002f0457002f
0457002f0457002f0457002f0457002f0310002f04570026045700260457
002604570026045700260310002604570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
004204570042045700420457004203100042045700260457002604570026
045700260457002603100026045700230457002304570023045700230457
0023031000230457002f0457002f0457002f0457002f0457002f0310002f
0457004b0457004b0457004b0457004b0457004b0310004b045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457001a0457001a0457001a0457001a0457001a0310001a0457
002404570024045700240457002404570024031000240457002f0457002f
0457002f0457002f0457002f0310002f0457004e0457004e0457004e0457
004e0457004e0310004e045700960457009604570096045700960000fec1
0000fec60000fdac0000fed80000ff920000fee90000ff4c0000fea00000
fec40000ffce0000ff660000fea00000fed80000fed80000ff970000ff98
0000ff990000fff40000ff420000ff420000ff440000ff5f0000fe870000
ffec0000ffa60000ff510000ff510000ff510000fec90000ff1c00000000
0000fee90000ff4c0000ff930000ff2a0000ff560000ffce0000fe870000
febb0000fec40000fec40000fed80000fed80000feb30000fec90000fdad
0000fec80000feb30000fec90000fdad0000fe160000fee60000ffa60000
fe870000ff440000feba0000ff230000ff9a0000fdac0000fe8800000000
0000feb00000ff980000fe930000ffa60000fe870000fe1c0000ff660000
ff440000feb00000feb00000feb00000ff030000ff520000fd1f0000ff53
0000ff530000ff530000feb50000feb50000ffc30000feae0000fedc0000
fec70000fec80000fedc0000fe1e0000ff420000ff510000feb70000feb0
02aa00de02aa005902aa00fa049a007004600000062e001407aa0000062e
0014047b004c063f005704cf0044063900630473004405c7007004000050
04e300a8033b008804ff0000043c0032060d000a049d0042072000a406aa
0084056500630473008b056400a40400000a0556006b0556006b04e00005
04c5001905e5005f046e004403b600140347002804cf00440495005b0400
005001c7ffa2063900600389004d03890050055600a205c000a10473004b
047800870ab4006d04fe00100639001404e70014079900bf05b500880558
000104000006072e00bf0590008806a10078057b007a086d00bf06f00088
04d5006603ab001f065f0039058200480639006004730044066d0009050c
001a066d0009050c001a08980063072c004406aa002004e6001c0987006d
06d000500000fe370ab4006d04fe001005c7006604000050040700140000
fea60000febc0000ff980000ff980000fc2b0000fc4c05c000a104780087
05400004042b00140556009e04730087055d00a40464008804d5004e03ab
003204a900040380000005ef002904490028070900a4052f0088091800a0
06f600880606003e042b002305c700660400005004e3003003aa00260767
00310587002605550057042b004506e4000a0554000a06e4000a0554000a
023900bf07630007055afffb055700a1046800860540001204ab001805c7
00a4046b008805c700a4046b008805550057042b004506aa00980580008c
02aa002e0556fffd0473004a0556fffd0473004a08000001071d00440556
00a20473004b060500630473005507630007055afffb04d5004e03ab0032
04d5004e045c004c05c000a10478008705c000a104780087063900630473
0044063900600473004405c0004a0415002b0515000a040000210515000a
040000210515000a0400002105550057042b0045071500a805c0008b0540
004a0473004607bf004a0703004607a6006606860053054d006604130053
07c3001207470018084600a4070700880639006d0478005005f900300553
00260000ff430000fec90000ff770000ffb00000ff470000ff560000ff74
0000fed70000feac000000000000ff520000ff56000000000000feac0000
fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000ff7f
0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae0000
ff8c000001020000fefe0000fefe0000fedf0000fedf0000ff580000ff20
0000fefe0556fffd0473004a055600960473008605560096047300860556
00960473008605c700660400005005c7009e0473004605c7009e04730046
05c7009e0473004605c7009e0473004605c7009e04730046055600a20473
004b055600a20473004b055600a20473004b055600a20473004b055600a2
0473004b04e300a8023900130639006d0473004205c700a40473008705c7
00a40473008705c700a40473008705c700930473006805c700a404730087
0239ffdf01c7ff9202390020023900060556009604000088055600960400
008805560096040000880473009601c7007e0473009601c7ffb904730096
01c7ffa50473009601c7ffa306aa009806aa008706aa009806aa008706aa
009806aa008705c7009c0473008705c7009c0473008705c7009c04730087
05c7009c0473008706390063047300440639006304730044063900630473
004406390063047300440556009e047300870556009e0473008705c700a1
02aa008505c700a102aa008505c700a102aa005e05c700a102aa00260556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
0556005c0400003f04e300300239002404e300300239002404e300300239
ffff04e300300239000e05c700a10473008305c700a10473008305c700a1
0473008305c700a10473008305c700a104730083055600090400001a0556
00090400001a078d001905c70006078d001905c70006055600090400000f
055600090400000f055600060400002104e300290400002804e300290400
002804e3002904000028047300870239000305c70006040000210473004a
01c7008904a0004804a0004804a0004804a0004804a0004804a0004804a0
004804a000480556fffd0556fffd06820013068200130682001306820013
068200560682005603910062039100620391006203910062039100620391
0062061e0000061e0000076c0000076c0000076c0000076c00000473008b
0473008b0473008b0473008b0473008b0473008b0473008b0473008b068f
0000068f0000081f0000081f0000081f0000081f0000081ffff3081ffff3
01c7008101c7008101c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7
ffa20301000003010000049100000491000004910000049100000491fff3
0491fff3047300440473004404730044047300440473004404730044069d
0000069d0000082d0000082d000007c9000007c900000460008804600088
0460008804600088046000880460008804600088046000880682000007ae
00000812000007ae0006063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a000480391006203910062
0473008b0473008b01c7ffe601c700680473004404730044046000880460
0088063f0057063f005704a0004804a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd06820013068200130682
00130682001306820056068200560473008b0473008b0473008b0473008b
0473008b0473008b0473008b0473008b068f0000068f0000081f0000081f
0000081f0000081f0000081ffff3081ffff3063f0057063f0057063f0057
063f0057063f0057063f0057063f0057063f0057065f0000065f000007ef
000007ef0000078b0000078b0000078bffff078bffff04a0004804a00048
04a0004804a0004804a0004804a0004804a000480556fffd0556fffd0556
fffd0556fffd0556fffd02aa00e502aa00fd02aa00e502aa000602aa0006
0473008b0473008b0473008b0473008b0473008b068200000682000006f3
000006f3000005c700a402aa001302aa001302aa000601c7ffbb01c7ffab
01c7ffca01c7ffca01c7ff9301c7ff930239001a0239fff5036500000365
000002aa001302aa001302aa000604600088046000880460008804600088
048d0083048d00830460008804600088055600060556000606e600000718
0000061e000002aaffea02aaffea02aa0059063f0057063f0057063f0057
063f0057063f005707650000069d000007270000065f000005fb006102aa
00de02aa00e50473000d05c7006605c7006606aa008705c70024095000a1
078d00190556001f04e30030080000290400003004c100660000ff530000
ff530000ff530000ff5301c7001901c7ffa2042b00050556001105740046
02cbffa3057a008702f0ffc8057f000a057f000a02aa008402aa008402aa
00c902aa00c902aa00a002aa005902aaffaf02aa003a02aa0006023900b9
02aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a0000
ff730000ffa50000fed80000ff230000ff720000ff720000fee70000ffa5
0000ff530000ff530000ff530556009e0473008703f8001905fb0019071d
00440440001904000050046900870469001903eb008703ab003201c70088
0361004104000088033600100580008c04780087047300440400001304de
004404de004404de000d078d005003a800440473004404730044042b0084
0455001f0455001f03aa00260460008804c6004405de004404c600440400
001a05c700060400002803ab0032036b003f04db001f02eb00880400001a
04550088042b008405b4007a04ab001803a00000054f0000035100320351
ffd103980032034800320348003203f80032036e0032015600690284002d
0366003202d000320415003203710032036f003204180032030f00320359
0032039c003203760031036f003204fb000002fa003202fa003203040032
04cc0032030500640305003202f9003202f90032028c0032028c00320304
00320142006402b6006404950064030f00640305003202d5003203050032
030500320306006401c20032030f00640342003204950064029200000320
00000315006402920000030600320385003202bf00000142006401eb0064
030f0064029200000315006402920000030900320385003202bf000005ed
00460a660046061300460689ffba0541ffba01e9003c045a00110000ff0d
0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e0000
feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039affba
0327ffba05ad0069053d002d05fd009604dc005004e0003c05f6009b053f
00280650002804ac00720000fe3b0000fe660000fe660473fffc02aa0053
02d5ffce01a8ffba01a8ffba01a8ffba01a8ffba0658001509c500470400
000008000000040000000800000002ab0000020000000155000004730000
02390000019a000000ab00000000000005e5000305c7006606aa00980580
008c0744008307180046071800480556fffd05c70066040000140473000a
04e300300400004f0400002804a5001d000001020000ff420000febf0000
ff3a0000ff53048d000a05c7005105c7006605c70051045500a102eb0088
0000ff430000ff040000ffac02d200960000ff37021affba0250001e0000
ff3a0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a
05b5003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3003202b3003202b3
005f02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba
045a002a039a00360435ffba0327ffba045a002a039a00360435ffba0327
ffba045a002a039a00360435ffba0327ffba064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba02b4002302b400230327ffba0327ffba02b4002302b4
00230327ffba0327ffba043500450435004501f4ffba01f4ffba04350045
0435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d
0047040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0473ff93047300460239ffbf06aa
ffd50473ffb70473ff9102aaffa402aaffa40400ffff0239ffb904000028
04730089030b0064047400480649002401c7001901c700190473001e0460
001e048c000a04730086047300460239001305b400420400008801c7fffc
06aa00870473008b0473008702aafffb0400003f0318ffa20400001a0400
000f040000280473004a04730048047300460473004b03ab004903ab0032
0534005501c700880400001301c7ffa204730083045c004c0304006402d5
003202c9003302fc0032028c003201d5003201d500000304003203110064
01420019014200640142006401420019022a000001420064014200090233
00640493006404930064030fffc9030f0064030e00640305003203000032
02b800320142ffca01c20032030f001d031a00320306006402d400640292
000002de003202de003202de003202f4003202ea00320000febc0000febc
0000ff730000fea9023900b902fa003202f900320305003202a0000002f9
00320639006d0556fffd0473000f05c7006602aa004104a0004804a00048
04a0004804a0004804a0004804a0004804a0004804a0004801c7ff9b01c7
ffab01c7ff9b01c7ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb04600088
0460008804600088046000880460008804600088046000880460008801c7
ffab01c7ffab01c7ffbb01c7ffbb04600088046000880460008804600088
045a005304ce004a03a000130556001105c700290558000b055600a20473
004b0400003301c7ffa205e600630473004805c7000002aa000f05560006
0400002104000013040000500400001301c700830455fffd02eb00010556
00090400000f055600090400000f04d5005303ab00490540001204ab0018
0000fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff720000
ff730000fee7078b000a03eb004c040000130473000a01c700150473fff4
0556001105c700a1047300190239ff8b05c700a404730087055600960400
008804e30029040000280400003b049e00a403670088053000480000ff53
0000ffbc0000fefe0000fefe0000fea40000fea401c7008805c900a505c7
009c05c900a50000fecd0000ff480000fec90000fece0000fec50000fed0
0000fed10000feee0000fed60000fedc0000fdd90639005804730048078d
001905c70006059f00a40000feb905dc006304c60009084c001906ba0006
023900b9038000720187005a0187005a0400009904000099023900b00239
00b0023900b002aa001904e30030000000000000002a0000002a0000002a
0000002a000000d60000017e00000320000005a60000074e000009380000
097e000009fe00000aa400000b8400000bec00000c6400000caa00000ce6
00000d5600000f1200000fee00001218000013f2000015520000170c0000
18e20000198e00001c2200001e5600001eb200001f7000001ff200002062
000020e8000021da000023da000025840000271c000028560000299e0000
2a6200002b1800002ca800002dae00002e9200002f7a000031b00000323a
000035640000370e000038420000394800003b3c00003da8000040520000
41000000422400004398000045d6000048e200004a8800004bc800004c32
00004c9c00004d0000004d8800004dbc00004e380000510a000052e80000
549c000056500000580e0000596200005b5200005cf600005dea00005f02
0000619a00006296000064c60000668c0000684e00006a1200006ba80000
6cae000070560000717a0000731800007536000079a000007bc400007e1c
00008004000081020000814e00008250000082f00000833c000083700000
83ac000083ee000084540000849a000084ce000085040000853a0000858a
000085cc0000861e00008656000086a8000086de0000871e000087600000
879e000087e800008828000088560000888e000088de0000891400008954
0000898e000089d200008a1c00008a5800008a8800008acc00008b040000
8b9400008c1a00008e2800008fbc0000916c000091b80000924c00009470
000096c4000098b4000099a000009a2200009a8c00009baa00009d060000
9f4e0000a0b00000a13e0000a1e80000a2ac0000a3f40000a59e0000a68c
0000a7520000a7b60000a8240000a94e0000aa720000ab020000ace40000
af3e0000b2900000b3860000b42c0000b47c0000b5320000b6520000b7f0
0000b88a0000b94e0000ba0e0000ba760000bab20000bb0a0000bb580000
bd700000bfb60000bfee0000c0200000c14a0000c2760000c3240000c3c8
0000c46a0000c53c0000c5900000c5c60000c61e0000c7700000c7e20000
c83c0000c9b40000cb200000cc000000cc320000ccce0000cdf20000d068
0000d0a20000d0e60000d1220000d1840000d1c60000d20c0000d2580000
d28a0000d2de0000d31c0000d34c0000d38a0000d3d00000d4120000d450
0000d4d20000d5400000d6260000d6620000d6e20000d7160000d7b80000
d8400000d8ac0000d90e0000d97a0000da660000db580000db8c0000dbc0
0000dbf00000dc340000dcac0000de260000e0400000e0720000e0ac0000
e1a60000e3340000e36a0000e4ce0000e54a0000e62a0000e7200000e8b0
0000ea1a0000ec080000ed040000ed4a0000ed7e0000edc00000edfa0000
ee4e0000ee960000eee00000ef100000ef400000f1280000f1660000f18e
0000f1be0000f1f20000f2180000f23e0000f2860000f43c0000f5b60000
f5dc0000f6020000f6460000f6760000f6a60000f6fc0000f7da0000f8ec
0000f9300000f9680000f9c20000fa000000fa340000fa640000faa00000
fae00000fb1e0000fb5a0000fb9c0000fbd20000fc0e0000fc4e0000fc74
0000fc980000fce80000fe440000fe9a0000fece0000ff1c0000ff680000
ffaa0000ffe20001001800010060000101020001029e00010466000105e8
000107da0001092c00010ab000010b9200010d2c00010d9600010dbe0001
0e5c000110de0001111e0001115e0001119e000111dc0001123a00011298
000113060001132600011410000114b0000114e6000115340001157e0001
15c8000115e40001160000011620000116400001166000011680000116a6
000116cc000116f200011718000117480001177000011798000117c40001
17f0000118240001184e0001187a000118b0000118da000119060001193c
0001196600011990000119c4000119f400011a2800011a6c00011a9c0001
1ad000011b1200011b4600011b7800011bba00011bee00011c1e00011c60
00011ca400011cea00011d4600011d6200011d7e00011d9a00011db60001
1dd200011f40000121ec0001245c0001247800012492000124ae000124ca
000124e6000125020001255e0001259800012602000126cc0001276c0001
2842000128c20001294a000129ba00012a5000012aae00012af400012b52
00012bb400012c6c00012d2a00012d5600012db200012df600012f620001
3056000130800001309c000130c8000131000001314c0001318c000131c0
000131f0000132200001325000013294000132c4000132f4000133340001
336400013394000133c400013404000134340001346400013494000134ba
000136be000136ee0001371e0001386e00013a2400013a5400013a820001
3ab200013ae000013b1000013b3e00013b6200013b8600013bb600013d26
00013d5e00013d8e00013f2000013f4e00013f7c00013faa00013fd20001
4130000142c800014300000143400001437c000143ac000143da000143f6
000144260001445600014546000146ae000146de00014718000147580001
4788000147b8000147fa000148200001484600014886000148c6000148f6
0001493600014a2000014aa000014b8400014bb400014be400014c140001
4c4400014c8000014cb200014ce400014d1400014d4400014d8a00014dbc
00014dec00014e2200014e9400014ec80001509600015198000153280001
5558000157a80001593a0001599e00015a2800015a3800015ac600015cc4
00015df000015f5c0001604c000161d0000163ea00016616000167080001
671800016728000168400001685000016860000168700001688000016890
000169ae000169be000169ce00016a4200016a5200016b2200016b320001
6c4400016c5400016c6400016c7400016dd200016fb000016ff200017028
0001705e0001708e000170be000171120001713a000172c40001740c0001
7560000176c80001784c000178b000017a4200017b5e00017b6e00017b7e
00017d0400017d1400017e7a00017fd40001810800018266000183d40001
859a000185da00018612000186480001866e0001869e000186c40001883a
0001886a000189a0000189b0000189c000018a0200018a1200018ba60001
8d5200018edc00018f0400018f3400019090000190a0000191d8000191e8
00019282000193e2000193f200019658000197e20001994a0001997a0001
9af000019c2200019c3200019c4200019c5200019d2c00019d3c00019d4c
00019d5c00019e5400019fce00019fde0001a1060001a23a0001a38c0001
a5200001a63e0001a7ca0001a8dc0001a9120001ab480001abe80001abf8
0001ad8e0001af300001afb40001b1360001b1460001b3ae0001b52e0001
b6ae0001b6de0001b87e0001ba040001bbc80001bcf40001bd040001be34
0001be440001be540001bf140001bf240001c10a0001c11a0001c2500001
c35e0001c50a0001c6c00001c8020001c9720001caba0001cb0c0001ccee
0001ce6a0001cea80001d04e0001d0720001d1b20001d1c20001d1d20001
d20a0001d21a0001d3a60001d50e0001d6820001d6a60001d6d60001d844
0001d8f60001d9b40001d9e20001db980001dc900001dd1e0001de440001
def20001dfc60001e0100001e0880001e1480001e1700001e1b40001e20a
0001e2e60001e3300001e3640001e38c0001e3b40001e3e80001e42c0001
e4700001e4ae0001e5ec0001e6a40001e7c40001e83a0001e9080001e95a
0001e9ec0001ea9c0001eb900001ebe40001ec7a0001ed380001ee220001
eed40001eff40001f0460001f0f00001f2260001f2fe0001f3e40001f4ea
0001f5d00001f6b20001f7a60001f8440001f94a0001fa440001fabc0001
fb340001fbaa0001fbe00001fc3c0001fd040001fd900001fdc80001fe0e
0001fe3e0001fea80001ff680001ff9c0001ffcc00020000000200300002
0060000200900002023000020268000202a8000202e000020318000203b4
000204ae000204de00020582000205b0000205f000020640000206700002
06bc00020854000209ba00020b1a00020b6000020bb400020bec00020d5e
00020d9400020e2600020e6400020e9200020ed000021000000210280002
1164000211f40002129e00021320000213dc000214f40002160200021636
000216bc000218180002189a000218e4000219ee00021a3600021b3a0002
1bb600021c0e00021c9200021d7c00021e9200021f8e0002203800022128
000221fa000222e4000223cc0002247c000224fe0002275c000227860002
27b00002286800022892000229d400022ada00022bc400022bee00022c18
00022c4200022c6c00022c9600022e1600022e4000022e6a00022e940002
2ebe00022ee800022f1200022f3c00022f6600022f9a00022fc400022fee
0002301800023192000231a2000232bc000232cc000232f6000233200002
334a000233740002351e0002373a0002386800023878000239f400023a04
00023b4a00023d1600023e1c00023f9c0002413c00024360000244ba0002
469c000247e00002490e000249fc00024a2600024a5000024a7a00024aa4
00024ace00024af800024b2200024b4c00024b7600024ba000024bca0002
4bf400024c1e00024c4800024c7200024eae0002502a0002516e00025356
0002549e000254c8000254f20002552200025552000255a2000255f20002
5632000256a4000256f800025756000257ac000257e2000258240002586a
000258b4000258e40002591c0002594c00025a8400025dca00025df40002
5e1e00025e4800025e7200025e9c00025ec600025ef000025f1a00025f44
00025f6e00025f9800025fc200025fec00026016000260400002606a0002
6094000260be000260e8000261120002613c0002616600026190000261ba
000261e40002620e00026238000262620002630000026316000263400002
6620000266300002674a0002686c000269aa00026aec00026c9200026ca2
00026de400026f3400027124000272f80002741000027420000274a20002
75300002763000027640000276e0000276f0000278060002795800027a88
00027a9800027b6600027b7600027cec00027cfc00027e1000027e200002
7f54000280ea000281a6000281b6000282b40002840e0002849a000284aa
000285d4000287600002881c0002882c000288c8000288d8000289a60002
89b600028a8e00028a9e00028ba600028bb600028d7c00028d8c00028ee4
00028ef40002915e0002916e0002936800029378000294e2000294f20002
95e2000295f20002978a0002979a000298b8000298c800029a0800029a18
00029a2800029a3800029bb000029bc000029bd000029be000029d320002
9e8000029f4e0002a0320002a1b20002a3340002a4340002a5480002a68c
0002a69c0002a78a0002a8640002aa000002aa100002ab2e0002ac340002
ae320002ae420002ae520002ae620002afac0002afbc0002b0740002b084
0002b1920002b1a20002b28e0002b29e0002b3bc0002b3cc0002b46a0002
b47a0002b48a0002b5780002b6ec0002b8180002b9120002b9220002b932
0002b9420002bae00002bc9a0002bd680002bd780002bfd80002c21e0002
c4a40002c7080002c98c0002cbfe0002cdce0002cf840002cfae0002cfd8
0002cfe80002cff80002d0220002d04c0002d0760002d0860002d0960002
d0c00002d0ea0002d0fa0002d10a0002d1340002d15e0002d1880002d198
0002d1a80002d1b80002d1c80002d1d80002d1e80002d2120002d2220002
d2320002d25c0002d2860002d2b00002d2da0002d3040002d32e0002d358
0002d3820002d3ac0002d3d60002d4000002d42a0002d4540002d47e0002
d4a80002d4d20002d4fc0002d5260002d5500002d57a0002d5a40002d5ce
0002d5f80002d6220002d64c0002d6760002d6a00002d6ca0002d6f40002
d71e0002d7480002d7720002d79c0002d7c60002d7f00002d81a0002d844
0002d86e0002d8980002d8c20002d8ec0002d9160002d9400002d96a0002
d9940002d9be0002d9e80002da120002da3c0002da660002da900002daba
0002dae40002db0e0002dbae0002dbf20002dc680002dc920002dcbc0002
dce60002dd100002dd3a0002dd640002dd8e0002ddb80002dde20002de0c
0002de360002de600002de8a0002deb40002dede0002df080002df320002
df5c0002df860002dfb00002dfda0002e0040002e02e0002e0580002e08c
0002e0c00002e0f40002e2860002e4220002e5be0002e74a0002e7900002
e7d60002e8440002e8a00002e8f20002e9620002ea3a0002eb060002ebde
0002ecaa0002ed4a0002ee640002ef180002ef9a0002eff40002f0340002
f1520002f29c0002f4340002f4900002f4ee0002f54a0002f5a60002f65a
0002f7100002f7bc0002f8680002f9140002f9cc0002fa840002fb3c0002
fb4e0002fb600002fb720002fb840002fb960002fc040002fc720002fd2a
0002fd3c0002fd4e0002fd600002fd700002fd820002fd940002fda60002
fdb80002fdca0002fddc0002fe8a0002ff360002ffe40003009000030128
000301620003018c000301b60003020a0003025c000302d8000303220003
039e000303f200030476000304c80003053e00030596000305fc00030652
000306ac0003072a00030776000307d40003083800030886000308d40003
092c000309740003099e000309cc000309f200030a2600030a5600030a86
00030ad800030b4600030b9c00030c1000030c6400030cd800030d1e0003
0d8600030dcc00030e2800030e5800030e9200030eb800030ee800030f0e
00030f3400030f6600030f9600030fe80003104e000310a40003110a0003
115e000311cc0003120e0003126e000312b0000312fc0003133600031372
000313ac000313e80003141c0003144e0003147e000314ae000314d80003
14fe000315280003155600031580000315cc000316100003164600031682
000316b6000316e400031722000317520003178c000317b6000317e40003
180a000318300003185c000318b8000318e8000319180003194800031980
000319b4000319e200031a1200031a4200031a7200031aa200031ad60003
1b2c00031b6000031bc000031bf400031c4c00031c8000031cdc00031d7a
00031e4800031f6800032030000320c000032156000323420003253e0003
26b600032832000329dc00032b8e00032c7600032dac00032ea400032fb6
000330d40003320a00033374000334e200033678000337f4000339040003
391400033a4000033b7c00033cbe00033e4200033f1c00033f9200034048
000340ee0003425e0003429600034310000343d20003448c000344f40003
45fa00034730000347fc0003495a000349d400034a4e00034b1a00034bd4
00034c8800034ce400034d3e00034d8600034df600034e7200034ebc0003
4ef600034f3c00034f8000034fd200035024000350a6000351280003516a
000351aa000351e0000352160003524400035272000352a6000352da0003
531c0003535e0003539a000353d6000354100003544a0003547c000354ae
000354e0000355120003554c00035586000355c80003560a0003564c0003
568e000356dc0003572a0003576c000357ae000357ee0003582e00035868
000358a2000358ee0003593a00035978000359b8000359fe00035a440003
5a8000035ad600035b1200035b4e00035b8e00035bce00035c0a00035c46
00035c8600035cc600035d0a00035d4e00035da200035e3000035e720003
5eb400035f1c00035f8400035fb600035fe80003602000036058000360ee
00036184000361ce000362180003625400036290000362e60003633c0003
6386000363d00003642800036480000364c0000365000003653800036570
000365ba000366040003664200036680000366c200036704000367580003
67ac000367f2000368380003687e000368c40003691a00036970000369c6
00036a1c00036a6800036ab400036b0000036b4c00036bc000036c340003
6ca800036d1c00036d5a00036d9800036dd600036e1400036e5200036e90
00036ed400036f1800036f6400036fb0000370100003705c0003709a0003
70e8000371f80003724800037298000372d0000373080003735e000373b4
000374280003748c000374ce0003751000037566000375b4000376000003
764c0003768c000376cc000377140003775c000377c8000378220003785a
00037892000378d200037912000379e200037ade00037b9e00037c8c0003
7ce200037d3800037d8a00037dde00037e4200037ea600037efc00037f52
00037fc80003803e00038080000380c20003810400038146000381880003
81ca0003822000038276000382c80003831c000383a400038426000384c6
00038568000385a6000385e4000386220003865e0003869c000386da0003
871800038754000388380003892400038a3a00038b5600038c2000038cea
00038de400038ede00038fdc000390da000391f8000393160003943c0003
95620003966400039766000397f80003988a000398c80003990600039960
000399ba000399f200039a2a00039b3a00039b4a00039b9200039bda0003
9c3200039c8a00039cbc00039cee00039d3000039d7200039dac00039de6
00039e2a00039e6e00039ee600039f6000039ff00003a0340003a0740003
a0f60003a1780003a2d00003a2e00003a32e0003a37c0003a3b80003a3f4
0003a43a0003a4800003a4ce0003a51c0003a56c0003a5bc0003a6180003
a6740003a7ea0003a9520003a98a0003a9c40003aa100003aa5c0003aaae
0003ab000003ab520003aba80003abe40003ac200003ac760003acca0003
ae020003aea20003aef00003af300003af6a0003b1000003b3840003b448
0003b5de0003b73c0003b80a0003b9b00003bc040003be3c0003be820003
beb40003bf5e0003c0820003c0a60003c1400003c24c0003c35c0003c46c
0003c57a0003c7000003c7320003c7d40003c7fc0003c85e0003c8c00003
c9220003c9840003c9c20003ca000003ca3a0003ca740003caa00003caec
0003cb260003cb600003ccbc0003ce100003ce200003cede0003d0140003
d0720003d18a0003d3180003d3be0003d5040003d5420003d5800003d5be
0003d6120003d63a0003d6940003d6f80003d7400003d7a20003d8020003
d8740003d8f00003d96c0003d9ee0003da7a0003db060003db900003dc10
0003dc4a0003dc860003ddea0003deb40003dee40003df140003e04c0003
e19c0003e1ac0003e29a0003e36e0003e4660003e55c0003e6de0003e838
0003e8480003e9600003ea0c0003eb4e0003eca40003ed000003ee5e0003
eeec0003f0920003f2040003f3180003f3500003f3b40003f5640003f6ce
0003f7300003f8980003f99e0003fa540003fb000003fc280003fd160003
fdf60003ff36000400620004017c000402ec000404660004047600040556
0004064c000406fc000407f8000408a4000409ae00040a9a00040b620004
0c8600040d8a00040eb800040ff600041162000412980004142c000415d4
000416cc000417e00004191200041a0400041a3c00041a9200041b400004
1b5000041bb200041c0e00041c7400041cc000041d0000041d3800041d64
00041d9200041dcc00041f0200041f3600041fba00042070000420a00004
2124000421540004218c00042324000424b0000424fa000425340004258a
000425d6000425fc0004262200042664000426a6000426e8000427180004
275000042786000427bc000427fe0004282e0004285e0004295400042a58
00042a8c00042ac400042b0a00042b3e00042b6e00042ba600042bda0004
2c0e00042c3e00042c6e00042ca400042cda00042d0a00042d3a00042d6e
00042da200042dd200042e0200042e3c00042e7000042ea200042ed40004
2f0800042f3c00042f6c00042f9c00042fca00042ff80004310600043272
000433a6000434da0004350a00043544000435de00043748000438a40004
396800043a7c00043aac00043ae000043bd800043d8800043de000043e58
00043f9400043fd20004404400044074000440a4000440de000441660004
4196000441c600044356000444a0000445ac000446ba000447e60004493c
00044a9800044bf800044d3200044ea40004500400045014000451ca0004
52f20004538c000455140004552400045620000457a6000458fe000459b0
00045a8000045b8c00045c3600045c8400045cd400045d8400045e2a0004
5ea600045ff6000460ea000461e0000462ec000463c40004649e00046532
00046644000467d4000468f2000469e800046a9200046b3c00046c060004
6cae00046d8400046e0000046e5e00046fc0000470f40004729000047352
000474520004752c0004766a00047716000477e0000478d00004799e0004
7a7a00047b8000047cb800047da800047e4600047f38000480a8000481f2
0004845e00048530000485e4000486b2000487a6000488e4000488f40004
8a2800048b3a00048b4a00048c5600048d8600048dda00048f4e00049076
0004918a0004933c00049550000497e40004999e00049aca00049caa0004
9e6c00049ffe0004a0ca0004a2660004a2dc0004a38a0004a4660004a4f2
0004a5940004a6360004a71a0004a8520004aaae0004abf60004ac060004
ac160004ac780004acd60004ad380004add60004ae6e0004af720004b060
0004b0700004b0800004b11a0004b1b40004b1f00004b26c0004b2e00004
b3360004b36a0004b3f00004b47c0004b4f40004b5520004b5ec0004b67e
0004b6fe0004b7800004b8140004b8480004b8aa0004b95c0004bb220004
bb5a0004bd360004be4a0004be5a0004be900004bed40004bf180004bf5c
0004bf920004bfc40004c0060004c0a20004c0f80004c19e0004c2160004
c29c0004c30c0004c36e0004c3f40004c4540004c4be0004c5320004c5a2
0004c6000004c6a60004c73e0004c7aa0004c83a0004c8980004c9060004
c9ae0004ca5a0004caf00004cb5a0004cbdc0004cc400004ccec0004cda4
0004ce500004cede0004cf3a0004cfa60004cffc0004d07e0004d0fc0004
d1820004d20e0004d2680004d2d40004d3440004d3b40004d4240004d4a8
0004d5380004d59e0004d6180004d6940004d70c0004d7b20004d84e0004
d8de0004d93c0004d9da0004da560004dae80004db8a0004dc340004dccc
0004dd280004dd7e0004dde60004de8c0004df340004dffe0004e0a40004
e1060004e15e0004e1be0004e24c0004e2d20004e3600004e3c00004e424
0004e48e0004e4f60004e55e0004e5dc0004e6640004e6f80004e7640004
e7cc0004e8300004e8d80004e9920004ea400004eace0004eb2c0004eb98
0004ec080004ecae0004ed580004ee1a0004eebc0004ef200004efb00004
f0220004f0b20004f1300004f1ac0004f2180004f2a60004f3020004f360
0004f3e60004f4620004f4ca0004f52e0004f5820004f5f00004f6580004
f6d60004f74c0004f7c60004f8460004f8a20004f9080004f96c0004fa0c
0004faae0004fb640004fc140004fc700004fce80004fd460004fdd00004
fe680004fef80004ff5e0004ffbc0005004a000500bc00050150000501e8
00050258000502c8000503400005039e000503fe00050478000504d20005
05320005058c000505e800050650000506de000507140005074c000507d8
0005080200050844000508d8000509c600050a5600050a8c00050adc0005
0b4e00050bfa00050c8c00050ce400050d3e00050d9600050df000050e74
00050efa00050f9e0005104600051084000510f400051188000512200005
12b60005136000051392000513e2000514360005147c00051520000515aa
0005163000051690000516d400051722000517c200051852000518f20005
199800051a3e00051b0200051b3400051b5e00051be400051c9400051cc6
00051cee00051dbc00051e1a00051eb400051f0200051f68000520100005
207e000520e400052170000521e2000522580005230c00052366000523d6
0005241200052464000524ea0005254a000525ee000526ce000527f60005
2986000529e200052a3800052d5e00052df800052e5400052e9c0005300a
0005315c000531a2000532b0000533480005345600053560000536020005
36ea0005377c000538180005390a00053a0a00053a8600053b0c00053b54
00053c8400053dc000053ea400053ef400053f28000540160005413e0005
42d8000544080005451e000545e2000546fe0005476c0005480000054940
000549f600054b6000054c9000054dc200054eee00054f9a000550600005
51320005528c0005540c0005553c00055658000558120005596400055a50
00055b2c00055bee00055d5800055ea800055eb800055ec800055ed80005
5f900005604600056082000560b8000560f000056126000562ba000564ce
000565b8000566ce00056846000569b400056a6e00056b3000056c140005
6d0c00056eaa00056ffe000571ec000573b20005758e000577260005780e
000578ea00057a3200057bb400057c9c00057db600057df800057e420005
7fa000058116000582880005838000058560000586fc00058780000587b0
000587fc000588c40005899400058b2800058bb000058c1800058c6a0005
8cbc00058e6e0005909e000591d4000593b600059492000595ac00059758
0005996400059a6600059b5200059d4400059f4c0005a0b80005a23c0005
a39c0005a50a0005a5980005a6280005a7420005a84e0005a9f60005ab50
0005ad400005af0a0005af9e0005b03a0005b0d00005b1580005b23e0005
b3160005b4b00005b6420005b7a80005b8cc0005b8dc0005b90c0005b93c
0005bab60005bc580005bd020005bde40005bea40005bf4e0005bfe80005
c0ca0005c1880005c2640005c41a0005c5540005c5e00005c6100005c640
0005c6740005c6a80005c6b80005c6c80005c6f80005c7280005c75c0005
c7900005c7c40005c7f80005c82c0005c8600005c9da0005c9ea0005ca1a
0005ca4a0005ca820005cab60005caea0005cb1e0005cb520005cb860005
cbba0005cbf20005cc280005cc580005cc980005ccd00005cd180005cd5e
0005cd920005cdc60005ce000005ce380005ced80005cee80005d03a0005
d2020005d3a80005d5520005d69e0005d7b40005d8c20005d9d80005dad2
0005dbba0005dcdc0005ddd80005deb00005dfa00005e05c0005e10e0005
e1d80005e24a0005e2f00005e3800005e3e40005e4f20005e5580005e606
0005e6fc0005e7640005e7cc0005e87c0005ea560005eb5a0005ebda0005
ec180005ecc40005ed520005ee3a0005eed20005ef380005f0360005f0f8
0005f1b20005f1f00005f2800005f3820005f4160005f45a0005f5780005
f6a20005f8840005fa460005fb7c0005fcaa0005fdaa0005fdd20005fdfa
0005fe300005fe620005fe8e0005feb60005fede0005ff0c0005ff6a0005
ffd80006001000060048000600780006009e000600d2000601080006012e
0006015400060182000601b0000601dc000602520006027a000602dc0006
0302000603280006034e00060374000603a4000603d4000604040006043e
0006046e000604a4000604d4000605060006052c00060552000605860006
05bc000605ec0006061c00060642000606680006068e000606bc000606f0
00060776000607ba000607f4000608280006086c000608a6000608e00006
0906000609300006097c000609be000609e400060a1200060a3800060a5e
00060a9e00060ad000060b0000060b3000060b5600060b7c00060bac0006
0bdc00060c0200060c2800060c4e00060c7400060c9a00060cc000060ce8
00060d7000060d9a00060e0e00060e3600060eac00060ed400060f360006
0f6800060f9a00060fca0006100200061034000610620006109c000610c4
000611240006116600061196000611c2000611f2000612220006124a0006
12720006129a000612fc0006132400061382000613c60006140a0006143a
0006147000061496000614be000614e40006150c000615320006155a0006
1582000615ac000615d2000615f80006161e0006165000061678000616fe
0006172800061792000617c2000617f2000618180006183e000618960006
18c6000619020006192c0006195c0006198c000619c0000619f400061a24
00061a6400061a9e00061ae600061b0c00061b3200061b5800061b7e0006
1ba400061be400061c2400061c6000061c9000061cc000061cf000061d20
00061d5800061d9000061dd000061e1000061e4a00061e8400061ec00006
1efe00061f4800061f9200061fd80006201e00062060000620a2000620d2
00062102000621360006216a000621a4000621de0006222a000622760006
22ce000623260006237e000623dc0006240c0006243c00062472000624a8
000624de0006251a0006254e00062582000625d60006262a0006267e0006
26d2000627260006277a000627d20006282a0006285800062886000628b8
000628ea0006293000062976000629a8000629da00062a2c00062a840006
2ac800062b0c00062b5000062b9400062be800062c3c00062c6c00062c9c
00062cd200062d0800062d4600062d8c00062de000062e2a00062e7c0006
2ece00062f2e00062f8e00062fbe00062ff00006302a00063064000630b6
0006310a000631540006319c000631de0006324800063296000632e20006
3314000633460006337a000633ae000633e40006341a000634580006348e
000634c0000634fc00063552000635a80006360600063664000636ba0006
37100006374400063774000637b8000637ee0006381e00063862000638a0
000638d8000639100006394600063982000639b2000639ee00063a2e0006
3a7400063abe00063b0a00063b5600063bac00063c0200063c5000063c9e
00063cec00063d3c00063d9800063df400063e4c00063ea400063ef80006
3f4c00063f8e00063fd00006401800064060000640a8000640f60006413a
0006417e000641e40006424a000642b0000643160006437c000643e20006
444c000644b6000644fe000645460006458e000645d6000646220006466e
000646c20006470e00064752000647a00006480800064870000648e00006
4950000649b800064a2000064a6000064a9e00064ae800064b1200064b58
00064b9000064bde00064c0e00064c3e00064c7a00064cae00064cd40006
4d2800064d6600064dba00064ea000064fc80006500a0006503000065086
000650b6000650f8000651400006518e000651d8000652280006524e0006
53360006541a0006556c0006559a000655c80006565c000656e200065710
0006579a000657ca000657fa00065848000658960006597a00065a560006
5b9a00065bca00065bfa00065c9000065d1800065d4800065d7800065da8
00065e3800065e6800065e9800065eea00065f3200065f880006601e0006
60b60006612a0006617c000661a6000661fc000662300006627a000662b2
00066302000663400006638c000663b20006642e00066480000665920006
679c0006695000066ad200066c4400066ee6000671b600067376000674bc
000677160006785800067a6e00067ac000067b1000067b6600067bbc0006
7c1e00067ca600067ef40006808600068292000683ae00068562000686e4
000687a400068886000688ee00068950000689c600068a2e00068ada0006
8b4a00068bda00068cee00068db200068dfe00068e9400068f4000068fe4
0006908e000690d80006911a00069190000691f800069288000693360006
93a0000694040006946a00069524000695ba00069618000696420006966c
0006967c0006968c0006974e0006985200069a5c00069bb200069bc20006
9c7200069d5600069db600069dc600069e2200069e8000069fa00006a08e
0006a09e0006a0ae0006a0be0006a0ce0006a1b40006a2b40006a48c0006
a6480006a74e0006a7c80006a8420006a8f40006a9040006aa120006aa22
0006aa320006aaf40006ac280006ad140006ad240006ad340006ad440006
aeaa0006b0160006b1420006b1520006b1620006b1720006b1820006b264
0006b2740006b3d60006b4e00006b5de0006b7160006b7e80006b8660006
b8e40006ba040006ba800006bacc0006bb580006bc6c0006bcc00006be02
0006bec20006bf8e0006c0840006c18e0006c2400006c3a60006c40c0006
c4d00006c6d20006c8600006c9de0006cb0e0006cdc00006cf020006d030
0006d1a80006d3200006d4a00006d62e0006d7e00006d84e0006d9b20006
daea0006dbee0006dd240006de560006df260006dff60006e1520006e22c
0006e2cc0006e3d00006e4fa0006e5f80006e7780006e8e20006ea200006
eb980006ece40006edc60006ee2e0006eed00006ef700006f06e0006f1d6
0006f3100006f4a40006f5ee0006f6d20006f7300006f8360006f8cc0006
f98e0006fa340006fa740006fc200006fcf20006fdb80006fee000070080
0007018c000701e40007037c0007040a0007041c0007044c0007047c0007
04b4000704ec000705220007055e00070594000705d00007073e00070788
00070822000708ba00070934000709b800070a1e00070aca00070b160007
0c3600070cec00070dc200070dfa00070e3800070eac00070fa6000710c4
000711c6000712080007124a000712b8000712c8000712d8000712e80007
12f800071308000713180007132800071338000713480007135800071368
00071368000714ec000714fc000715bc00071682000717b8000719ae0007
1bb000071dac00071fe2000721e20007224e00072360000724f20007264a
000726fc00072740000727de0007290e0007295e000729f400072b300007
2b4000072cf600072e2a00072e7a00072ed000072f9200072fd600073018
0007309e000730fc000731ee0007327c000732b20007332c000733a40007
33f400073500000735f6000736a0000736ca000736f40007371e00073748
00073788000737c8000738000007383800073882000738cc0007390c0007
394c00073996000739e000073a2000073a6000073aba00073b1400073b4e
00073b8800073bcc00073c1000073c5400073c9800073cec00073d400007
3d8c00073dd800073e1600073e5a00073eaa00073efa00073f5400073fb2
00073fdc00074006000740a00007413a0007417e000741c2000742d80007
42e80007433000074378000743ca0007441c00074486000744da00074526
000745840007460e00074672000746b60007470000074768000747b20007
47f20007483a00074876000748b2000748ee000749280007496a000749ac
000749ec00074a2c00074a7600074ac000074b1600074b6e00074bbc0007
4c0a00074c4c00074c9a00074cdc00074d2600074d6800074dac00074e08
00074e6400074eb000074efc00074f4600074f9000074fce0007500c0007
508a00075108000751420007517c00075216000752b00007538400075458
000754b40007551000075584000755f80007575600075766000758500007
586000075896000758cc00075906000759400007597c000759b8000759fe
00075a4400075baa00075d6000075eac0007606a000761e0000763880007
64b8000765be000767dc0007692000076ab600076c3e00076cbc00076e00
000770080007709c0007713000077284000773ae00077528000776680007
77d4000778c200077a8c00077c2000077ca200077dd400077ebe00078026
00078108000782be000783b0000785120007864e00078742000789060007
8a8e00078c3200078d9600078f32000790f0000792760007931200079486
0007957800079660000797e00007993200079a5200079bea00079dc00007
9f4e00079ff80007a0ae0007a2600007a3040007a3920007a3de0007a42a
0007a4a20007a5800007a5fa0007a69c0007a6f00007a8540007a9800007
aa920007ab940007ac5c0007add00007af100007b1360007b1e00007b30a
0007b40e0007b5ae0007b69a0007b7940007b8920007b9780007ba920007
bc4c0007bdfa0007bf680007bfe00007c0540007c1720007c1f60007c2f8
0007c4840007c5fc0007c7320007c83c0007c9b20007cb5a0007cd4c0007
cf3a0007d1000007d1740007d2240007d2da0007d38a0007d4480007d542
0007d6460007d7400007d84c0007d8d40007d9620007d9ea0007da7e0007
db5a0007dc500007dd340007de2a0007debe0007df7a0007e00e0007e0cc
0007e1bc0007e2c40007e3c20007e4d60007e5f80007e70c0007e84c0007
e9860007eaa80007ebbc0007ed000007ee540007f0680007f21a0007f2ce
0007f3ea0007f4c00007f5de0007f6bc0007f8500007f90a0007f9a60007
fa980007fb800007fc6c0007fcea0007fde40007ff220008004e00080082
000800c6000800d600080176000802180008030e000803fa000804d40008
05ac0008070a0008086a000809080008099e000809dc00080a1c00080a5a
00080a9a00080af400080b4c00080ba600080c0a00080c9600080e920008
0ee20008100e0008109400081114000811ee000812c2000813c6000815b2
000816ca0008173a000817ca0008188c0008195e000819ca00081a480008
1b9c00081be200081c2800081d0c00081d4800081da600081de400081e16
00081e5a00081e9c00081ecc00081fa60008206e00082152000821ce0008
221c000822a60008237c000823f4000824ae00082560000825aa0008267e
000827300008278800082798000827a8000827b8000827c8000828fa0008
290c000829ee00082a9400082b9e00082caa00082cee00082d3200082d66
00082d9a00082dea00082e3a00082e8c00082ede00082f3000082f860008
2fde000100000d5800f2003c009d000700020010002f0056000004ac041d
0005000200>
<0000003a02be0000000300000000006a00000000000300000001000a006a
0000000300000002000e00740000000300000003005e0082000000030000
0004000a006a0000000300000005001800b00000000300000006000e00e0
0000000300000007006200ee00000003000000080030000e000000030000
0009008a0150000000030000000d02aa01da000100000000000000350484
0001000000000001000504b90001000000000002000704be000100000000
0003002f04c50001000000000004000504b90001000000000005000c04dc
0001000000000006000704f40001000000000007003104fb000100000000
00080018048b00010000000000090045052c000100000000000d01550571
0003000104030002000c06c60003000104050002001006d2000300010406
0002000c06e20003000104070002001006ee0003000104080002001006fe
0003000104090000006a00000003000104090001000a006a000300010409
0002000e00740003000104090003005e00820003000104090004000a006a
0003000104090005001800b00003000104090006000e00e0000300010409
0007006200ee00030001040900080030000e0003000104090009008a0150
000300010409000d02aa01da00030001040a0002000c06c600030001040b
00020010070e00030001040c0002000c06c600030001040e0002000c071e
0003000104100002000e072a000300010413000200120738000300010414
0002000c06c600030001041500020010074a0003000104160002000c06c6
0003000104190002000e075a00030001041b00020010076800030001041d
0002000c06c600030001041f0002000c06c60003000104240002000e0778
00030001042a0002000e078600030001042d0002000e079400030001080a
0002000c06c60003000108160002000c06c6000300010c0a0002000c06c6
000300010c0c0002000c06c600a900200032003000310030002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0041
007200690061006c0052006500670075006c00610072004d006f006e006f
0074007900700065003a0041007200690061006c00200052006500670075
006c00610072003a00560065007200730069006f006e00200035002e0030
003600200028004d006900630072006f0073006f00660074002900410072
00690061006c004d00540041007200690061006c00200069007300200061
002000740072006100640065006d00610072006b0020006f006600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002e004d006f006e006f00740079
0070006500200054007900700065002000440072006100770069006e0067
0020004f006600660069006300650020002d00200052006f00620069006e
0020004e006900630068006f006c00610073002c00200050006100740072
00690063006900610020005300610075006e006400650072007300200031
0039003800320059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e00740020006100730020007000650072
006d0069007400740065006400200062007900200074006800650020006c
006900630065006e007300650020007400650072006d007300200066006f
00720020007400680065002000700072006f006400750063007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e007400200069007300200069006e0063006c0075006400650064002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002ea920
3230313020546865204d6f6e6f7479706520436f72706f726174696f6e2e
20416c6c205269676874732052657365727665642e417269616c52656775
6c61724d6f6e6f747970653a417269616c20526567756c61723a56657273
696f6e20352e303620284d6963726f736f667429417269616c4d54417269
616c20697320612074726164656d61726b206f6620546865204d6f6e6f74
79706520436f72706f726174696f6e2e4d6f6e6f74797065205479706520
44726177696e67204f6666696365202d20526f62696e204e6963686f6c61
732c205061747269636961205361756e646572732031393832596f75206d
617920757365207468697320666f6e7420746f20646973706c617920616e
64207072696e7420636f6e74656e74206173207065726d69747465642062
7920746865206c6963656e7365207465726d7320666f7220746865207072
6f6475637420696e207768696368207468697320666f6e7420697320696e
636c756465642e20596f75206d6179206f6e6c792028692920656d626564
207468697320666f6e7420696e20636f6e74656e74206173207065726d69
747465642062792074686520656d62656464696e67207265737472696374
696f6e7320696e636c7564656420696e207468697320666f6e743b20616e
6420286969292074656d706f726172696c7920646f776e6c6f6164207468
697320666f6e7420746f2061207072696e746572206f72206f7468657220
6f75747075742064657669636520746f2068656c70207072696e7420636f
6e74656e742e004e006f0072006d0061006c006f00620079010d0065006a
006e00e9006e006f0072006d0061006c005300740061006e006400610072
0064039a03b103bd03bf03bd03b903ba03ac004e006f0072006d00610061
006c0069004e006f0072006d00e1006c004e006f0072006d0061006c0065
005300740061006e00640061006100720064004e006f0072006d0061006c
006e0079041e0431044b0447043d044b0439004e006f0072006d00e1006c
006e0065004e0061007600610064006e006f0074006801b001a10300006e
00670041007200720075006e00740061b900540328b326181fd0bc032900
e0032900020329b22b1d1fb90327031db23b1f40b80323b31215320f412d
03200001002f0320000100200320006f032000af032000bf03200004005f
031e00010010031e007f031e0080031e00af031e00bf031e00d0031e0006
0000031e0010031e0020031e006f031e009f031e00e0031e0006031d031c
b2201f1041270319007f03190002000f031700ef031700ff03170003001f
0317002f0317004f0317005f0317008f0317009f03170006000f0317005f
0317006f0317007f031700bf031700f00317000600400317b2923340b803
17b28b3340b80317b36a6c3240b80317b2613340b80317b35c5d3240b803
17b357593240b80317b34d513240b80317b344493240b80317b23a3340b8
0317b331343240b80317b32e423240b80317b3272c3240b80317b3122532
80b80317b30a0d32c04116031600d00316000200700316000102c4000f01
01001f00a0031500b0031500020306000f0101001f00400312b32426329f
bf03040001030203010064001fffc00301b20d1132410a02ff02ef001200
1f02ee02ed0064001fffc002edb30e11329f414a02e200af02e200bf02e2
000302e202e202e102e1007f02e00001001002e0003f02e0009f02e000bf
02e000cf02e000ef02e0000602e002e002df02df02de02de000f02dd002f
02dd003f02dd005f02dd009f02dd00bf02dd00ef02dd000702dd02dd0010
02dc0001000002dc0001001002dc003f02dc000202dc02dc001002db0001
02db02db000f02da000102da02daffc002d3b2373932b9ffc002d3b22b2f
32b9ffc002d3b21f2532b9ffc002d3b2171b32b9ffc002d3b2121632b802
d2b2f9291fb90326031cb23b1f40bb0322003e00330322b225311fb80318
b23c691fb802e3b3202b1fa0413002d400b002d40002000002d4001002d4
002002d4005002d4006002d4007002d40006006002d6007002d6008002d6
009002d600a002d600b002d60006000002d6001002d6002002ca002002cc
002002d6003002d6004002d6005002d6000802d0b2202b1fb802cfb22642
1f411602ce02c70017001f02cd02c80017001f02cc02c60017001f02cb02
c50017001f02c902c5001e001f02ca02c6b21e1f00410b02c6000002c700
1002c6001002c7002f02c5000502c1b324121fff411102bf0001001f02bf
002f02bf003f02bf004f02bf005f02bf008f02bf000602bf0222b2641f12
410b02bb00ca0800001f02b200e90800001f02a600a20800406a1f402643
4932402043493240263a3d3240203a3d329f209f26024026969932402096
993240268e923240208e92324026848c324020848c3240267a813240207a
813240266c763240206c76324026646a324020646a3240265a5f3240205a
5f3240264f543240204f5432b8029eb724271f374f6b0120410f02770030
02770040027700500277000402770277027700f90400001f029bb22a2a1f
b8029a402b292a1f80ba0180bc0180520180a201806501807e0180810180
3c01805e01802b01801c01801e0180400180bb0138000100800140b40180
400180bb013800010080013940180180ca0180ad01807301802601802501
8024018020013740b80221b2493340b80221b2453340b80221b341423240
b80221b33d3e320f410f0221003f0221007f0221000300bf022100cf0221
00ff0221000300400221b320223240b80221b3191e3240b80222b32a3f32
40b80221b32e3a326f414802c3007f02c3008f02c300df02c30004002f02
c3006002c300cf02c30003000f02c3003f02c3005f02c300c002c300ef02
c300ff02c3000600df02220001008f02220001000f0222002f0222003f02
22005f0222007f022200ef0222000600bf022100ef02210002006f022100
7f022100af02210003002f0221003f0221004f0221000302c302c3022202
2202210221401d101c102b1048038f1c010f1e014f1eff1e023700161600
000012110811b8010db6f70df8f70d00094109028e028f001d001f029002
8f001d001f028fb2f91d1fb80198b226bb1f41150197001e0401001f0139
00260125001f013800730401001f0135001c0801001f0134001c02ab001f
0132b21c561fb8010fb2262c1fba010e001e0401b61ff91ce41fe91cb802
01b61fe81cbb1fd720b80401b21fd51cb802abb61fd41c891fc92fb80801
b21fbc26b80101b21fba20b80201b61fb91c381fadcab80401b21f8126b8
019ab21f7e26b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e
73b80401400f1f52265a1f481c891f441c621f4073b80801b61f3f1c5e1f
3c26b8019ab21f351cb80401b61f301cbb1f2b1cb80401b61f2a1c561f29
1cb80101b21f231eb80401b21f5537b80168402c07960758074f07360732
072c0721071f071d071b071408120810080e080c080a0808080608040802
08000814b8ffe0402b000001001406100000010006040000010004100000
01001002000001000200000001000002010802004a00b013034b024b5342
014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b5442
b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382bb00288b801
005458b801ffb101018e851bb0124358b900010111858d1bb90001012885
8d5959001816763f183f123e113946443e113946443e113946443e113946
443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb093
53205c58b901f201f04544b901f101f045445958b9033e01f2455258b901
f2033e4459594bb8015653205c58b9002001f14544b9002601f145445958
b9081e0020455258b90020081e4459594bb8019a53205c58b9002501f245
44b9002401f245445958b909090025455258b9002509094459594bb80401
53205c58b173244544b1242445445958b917200073455258b90073172044
59594bb8040153205c58b1ca254544b1252545445958b9168000ca455258
b900ca16804459594bb03e53205c58b11c1c4544b11e1c45445958b9011a
001c455258b9001c011a4459594bb05653205c58b11c1c4544b12f1c4544
5958b90189001c455258b9001c01894459594bb8030153205c58b11c1c45
44b11c1c45445958b90de0001c455258b9001c0de04459592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b65422b2b01b33b59635c456523456023456560234560b08b76
6818b080622020b163594565234520b003266062636820b003266165b059
236544b063234420b13b5c4565234520b003266062636820b003266165b0
5c236544b03b2344b1005c455458b15c406544b23b403b4523614459b347
503437456523456023456560234560b089766818b080622020b134504565
234520b003266062636820b003266165b050236544b034234420b1473745
65234520b003266062636820b003266165b037236544b0472344b1003745
5458b137406544b24740474523614459004b5342014b5058b10800425943
5c58b108004259b3020b0a124358601b2159421610703eb0124358b93b21
187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411b
ba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a8
0400000b2b59b0102342b0112342002b7475737500184569444569444569
447373737374757374752b2b2b2b74752b2b2b2b2b737373737373737373
737373737373737373737373737373732b2b2b45b0406144737400004bb0
2a534bb03f515a58b1070745b040604459004bb03a534bb03f515a58b10b
0b45b8ffc0604459004bb02e534bb03a515a58b1030345b040604459004b
b02e534bb03c515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400
735903b01e4b5402b0124b545ab012435c5a58ba009f0222000100735900
2b7473012b01732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b2b2b2b2b
2b0045694473456944734569447374754569447345694445694445694473
74456944456944732b2b2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b
2b2b2b2b2b737475732b7374757374752b2b2b742b2b000000>
[15785 15901 16277 16265 16245 15965 14085 16161 16321 16209 15953 15469 14369
16281 16349 16097 16057 16313 14945 16169 16329 16261 16213 15869 16253 16133
16337 16305 16157 16201 13221 16201 16161 11719 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 2094 59 <000100090000054905ba001302b540292612011901160b02291229133801
370338083809380d3a0e351237130a12132012213412201221340eb8ffe0
b31221340db8ffe0b312213409b8ffe0b312213408b8ffe0406c12213404
2012213403201221347701770b0226042907280b2a0e261236043a083a0b
3a0e3512480854045d085c0b5a0e5412670165046a086b0b690e65127504
7a08790b7a0d7712771386048a078a0a9504b808b712c604c908d704d808
d90ed612e704e808e80ee6122c06b8ffea40110c11025510160c1102550b
080c11025501b8fff8b30c110255b10602435458400b0c00151410180a11
065506b8ffe8400e0a110655100600020d00080a0202003f3c3f3c111239
392b2b01111239391b405d06070809090106050403030b1010130f0e0d0d
0110100d111213130b010009020d0b030c130a0b0106100213090a131320
00091400000903020d0d200c03140c0c030a090903030202130d0d0c0c00
082f15011517171a200c400c020cb8015fb7200a900ac00a030ab801b8b5
5f029f020202b801b8400a06b440105010cf100310b8015f400a20001914
15c22160a8182b2b4ef41a194dfd5d18e519ed5ded5dfd5d184e456544e6
5d003f3c103c103c3f3c103c103c87054d2e2b877dc4872e182b877dc400
1112393939390f0f870e103c3c08c4870e103c3c08c4870e103c3cc4870e
10c4c4c4592b2b002b2b3130015d005d012b2b2b2b2b2b2b2b435c58b900
0bffde400b1939012219390e181b3912b8ffdeb21b3913b8ffdeb21b3904
b8ffe8b61b3908221b3909b8ffc0b21c390db8ffc0401f1c3913401c3903
401c390d0e16173c131216173d080916173c030416173d0bb8ffde402e12
39012212390b0c1d213d01001d213c0b0a1d213d01021d213c0b0c13173d
010013173c0b0a13173d010213173c2b2b2b2b2b2b2b2b2b2b2b2b2b2b01
2b2b2b2b2b2b2b2b2b2b2b590171015d7133010133011617363701330101
23012627060701090237fe0ce7010a532331430127d3fdfd022bf0fe8f1f
213115fe9002fc02befe88753f50570185fd4dfcf9020b2d35501efe0100
>ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/X 59 def
end
ArialMT /Encoding get
dup 88 /X put
pop
end
%ADOEndSubsetFont
/FPLHWN+ArialMT /ArialMT findfont ct_VMDictPut
/FPLHWN+ArialMT*1 
[88{/.notdef}rp /X 167{/.notdef}rp]
FPLHWN+ArialMT nf
FPLHWN+ArialMT*1 [12.0002 0 0 -12.0002 0 0 ]msf
104.92 39.47 mo
(X)sh
/FPLHWL+CALIBRI*1 uf
/FPLHWL+CALIBRI uf
/YEKBAA+CALIBRI uf
/FPLHWM+CALIBRI,Italic*1 uf
/FPLHWM+CALIBRI,Italic uf
/LLIAAA+CALIBRI,Italic uf
/FPLHWN+ArialMT*1 uf
/FPLHWN+ArialMT uf
/ArialMT uf
1 lw
133.01 50.04 mo
118.73 75.46 li
1 /0 /CSD get_res sepcs
.749 sep
@
116.11 80.11 mo
116.5 72.25 li
117.88 74.3 120.16 75.58 122.63 75.7 cv
116.11 80.11 li
cp
ef
242.26 51.05 mo
293.88 108.97 li
@
297.42 112.94 mo
290.11 110.03 li
292.5 109.38 294.45 107.65 295.37 105.35 cv
297.42 112.94 li
cp
ef
341.36 51.76 mo
313.97 106.76 li
@
311.6 111.53 mo
311.59 103.65 li
313.07 105.63 315.41 106.8 317.89 106.79 cv
311.6 111.53 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LLIAAA+CALIBRI,Italic Initial
ct_T42Dict begin
-0.723 -0.273 1.258 1.012
 256 array 0 1 255 {1 index exch /.notdef put} for  /LLIAAA+CALIBRI,Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e7d8b6000000cc000000606376
7420ba7ecec70000012c000005146670676da1ea42ac0000064000000913
676c796648af68270000749800001e5a68656164e489fed900000f540000
0036686865610da90e9b00000f8c00000024686d74786c0906d400000fb0
000026b06c6f6361386231930000366000001ed26d61787019cb118f0000
5534000000206e616d65c2443dcf0000555400000e40707265705fc3ffe0
0000639400001102676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
0202040a0204e10002ff4000acff00000009000000004d53202000010000
20100600fe0001c4079e02262000019f0000000003bd0511000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
00000000000000000000004a004c00540055005600570059004f004e004f
00500051004d005d005f00610063006400650066006700680069006a006b
006c006d006e006d0066006f007000710072007300740075007600710074
00700071007200740075007600780079007a007d00780079007a007b007c
007d0079007c007a007c007d007e007f00800081007e007f008000810082
007f008000810082007e007f008000810082008300850083008400850086
008700880089008600880089008300840085008600870088008900830084
00850086008700880089008a008b008c008d008e008f008a008b008c008d
008f008a008b008c008d008e008f008a008b008c008d008e008f00900095
00900091009200930094009500980099009a009b009c0090009100930096
0097009b009c009f00a20094009600900091009200930094009500960097
00980099009a009b009c009d009e009f00a000a100a200a300a600a70090
00910092009300940095009600980099009f00bc00bd00c100c600be00bf
00bf00c100c200b900be00c200df00e000e400e700e800e9012b01360147
00f200f400cf00640066006a006c006d0070006c006d0069006c00670073
00740075007600770078007a007b007c007d007e00810084008500860087
00880089008a0076007a007b007c007e007f008000820083008400870088
0089008a0077008500870079008200840085008600870088008a0079007a
007c007d007e0081008300840086008700880089008b008c008d008e008f
00900091009200940095008b008c008d008e008f0093009400950093008b
008c008d008e00900091009200930094008c008d008e008f009000910092
009300940095009700980099009a009b009c0096009700980099009a009b
009c009a009c009600980099009a009b009c00960097009b009c009d009e
009f00a000a100a2009d009e009f00a000a100a200a1009d009e009f00a0
00a100a2009d009e009f00a000a100a200a300a500a300a400a500a600a7
00a300a500a300a400a500a600a700a300a400a500a600a700a800a900a8
00a900aa00ab00ac00a800ab00ac00a800a900aa00ab00ac00a800a900aa
00ab00ac00ad00ae00af00b000b100b300b500b600b700b800af00b000b1
00b300b400b700ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700ba00bb00bc00bd
00bf00c000c100c200c300c400ba00bb00bf00c300b900ba00bb00bc00bf
00c100c200c300ba00bc00bf00c200c700c900cb00cc00cd00c500c600c7
00c600c700cb00ce00cf00d100d200db00dc00de00df00e000e400d600e8
00e90123012b00d000d1042600d8050e010503c000c2024e0078042600d7
02990092000005e4000e40465f5e5d5c5b5a59585554535251504f4e4d4c
4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c282625
2423221f181411100f0d0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045b0
0325456164b050515845441b2121592d2c2045b0004360442d2c01b00643
b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c6423
64615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c
4565b02c234445b02b23442d2c4b525845441b2121592d2c01b005251023
208af500b0016023edec2d2c01b005251023208af500b0016123edec2d2c
01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161011020
3c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b0
8051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c
6423648bb81555621bb200802f2b59b002602d2c0c6423648bb840006260
23212d2c4523456023456023456023766818b08062202d2cb00426b00426
b00425b0042545234520b003266062636820b0032661658a2344442d2c20
45b0005458b040442045b04061441b2121592d2c45b1302f4523456160b0
016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b00325
45695358441b2121591b2121592d2c45b01443b0006063b0016069442d2c
b02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033ff
e0b134201bb3330034005944442d2cb0164358b00326458a586466b01f60
1b64b020606620581b21b04059b001615923586559b02923442310b029e0
1b2121212121592d2cb0164358b004254564b020606620581b21b04059b0
016123586559b0292344b00425b00725082058021b0359b0052510b00425
2046b0042523423cb0072510b006252046b00425b0016023423c2058011b
0059b0052510b00425b029e0b0072510b00625b029e0b00425b007250820
58021b0359b00425b003254348b00625b00325b0016043481b2159212121
212121212d2cb0164358b004254564b020606620581b21b04059b0016123
581b6559b0292344b00525b00825082058021b0359b0042510b005252046
b0042523423cb00425b0072508b0072510b006252046b00425b001602342
3c2058011b0059b0042510b00525b029e0b02920456544b0072510b00625
b029e0b00525b00825082058021b0359b00525b003254348b00425b00725
08b00625b00325b0016043481b2159212121212121212d2c02b004252020
46b004252342b0052508b003254548212121212d2c02b0032520b0042508
b0022543482121212d2c452320451820b00050205823652359236820b040
505821b04059235865598a60442d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d2c
b002435458b0472b1b212121592d2cb002435458b0482b1b21212121592d
2cb002435458b0492b1b212121592d2c208a08234b538a4b515a5823381b
2121592d2c0020b200400325b0062649618b3812342d2c01462346602346
6123201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a
2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b94000020063b80400885458b20240
0243604259595959592d2c451868234b51582320452064b04050587c5968
8a6059442d2cb00016b00225b0022501b001233e00b002233eb10102060c
b00a236542b00b234201b001233f00b002233fb10102060cb006236542b0
072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b004
2510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58b0
092b5920b005254ab0042547b004254760b0062547b0806361b00225b000
5558b00325b00725496359b0082558001b0159b00425b0062549b009255c
b009255a58b0092b59b0072546b0806361b0032520b0005558631b215961
2320b0005558b080631b21b08059b0592bb006255c586959b00425202010
b00048233ab0062658001b0159b0052658b003252f598a12233221212d2c
b00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b007
2559b00225b00225070cb005256323b00625636020b94000040063535821
b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1bb0
0426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b
2eb00525b0052507595920b0005558b00525b0052587b00725b007250bb0
092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b00825
b00b254923b00625b0062587b00a2510b00b25c15920b00051b800522378
b00161b00225b00725b0072507b00a25b00d254961b08062b00525b00525
0bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b006
25b0062507b00925b00c2549b0032554b8ffa72379212121212121212121
2121212d2c23b0005458b9400000001bb900004000598ab0005458b94000
00001bb90000400059b05b2b2d2c08b0005458b9400000001bb900004000
590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b
2b2d2cb00426b00426080db00426b00426080db05b2b2d00000100000005
9eb8b322fbfa5f0f3cf50019080000000000bbeb7ccc00000000c5229870
fa34fdcb0a14081c000200090002000000000000000100000600fe0001c4
0aa0fa34fa0b0a140800019a00000000000000000000000003f0040e0000
000000000000000001cf0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000006d7
0052000000000000000000000000000000000000000000000000053c0072
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000004220052000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0427ffd103e600bf00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000041d0051000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000041d0051000000000000000000000000
03d2004d0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000041d0042000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000001d6003f0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
01eaff3b000000000000000000000000000000000000000001d6003f0000
0000000000000000000000000000000000000654003f041d003f00000000
0000000000000000000000000000000000000000041b004e000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000041dfff8000000000000000002be003f000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002ae007100000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000394001500000000000000000000
000000000000032900050000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000029b00bb00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000002730048000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000274002b0274ffc5000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000033500f70000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000040e004d040e005f
040e00200000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a8015901590159015901590159
015901c701c701c701c701c701c701c701c701c701c701c701c7024f024f
024f024f024f024f024f024f024f024f024f024f024f024f024f024f024f
024f024f024f024f024f024f024f024f024f024f024f024f024f024f024f
024f024f02da035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603560356035603560356035603560356035603560356
035603560356035603f103f103f103f103f103f103f103f103f103f103f1
03f103f103f103f103f103f103f103f103f103f103f103f103f1048e048e
048e048e0525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505ee05ee05ee05ee05ee05ee05ee05ee
05ee05ee05ee05ee05ee0663066306630663066306630663066306630663
0663066306f606f606f606f606f606f6073e073e073e073e073e073e0811
08a408a408a408a408a408a408a409120912091209120912091209120912
091209120912091209b609b609b60a370a370a370a370a370a370a370a37
0a370a370a370a370a370a370adb0adb0adb0adb0adb0adb0adb0adb0adb
0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb
0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb0adb
0adb0adb0adb0adb0adb0adb0b590b590b590b590b590bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd90bd9
0bd90bd90bd90c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e
0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e
0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c3e0c6c0c6c
0c6c0c6c0c6c0c6c0c6c0c6c0c6c0c6c0c6c0c6c0c6c0c6c0cb70d020d02
0d020d020d020d020d020d020d020d020d020d020d020d020d020d020d02
0d020d020d020d020d020d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e0d5e
0df20e7e0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d0f2d
0000000100000f68005c00050000000000020010002f0060000009ed1102
000000000000002d02220000000300000000006400000000000300000001
000e00640000000300000002000c032a0000000300000003003e03040000
000300000004001c031a0000000300000005001803420000000300000006
001c035a000000030000000700fa03760000000300000008002a03ec0000
00030000000900200470000000030000000a02a00064000000030000000b
00560490000000030000000c002a04e6000000030000000d029805100000
00030000000e006c07a80001000000000000003208140001000000000001
000708460001000000000002000609a90001000000000003001f09960001
000000000004000e09a10001000000000005000c09b50001000000000006
000e09c10001000000000007007d09cf000100000000000800150a0a0001
00000000000900100a4c000100000000000a01500846000100000000000b
002b0a5c000100000000000c00150a87000100000000000d014c0a9c0001
00000000000e00360be80003000104090000006400000003000104090001
000e00640003000104090002000c032a0003000104090003003e03040003
000104090004001c031a0003000104090005001803420003000104090006
001c035a000300010409000700fa03760003000104090008002a03ec0003
00010409000900200470000300010409000a02a00064000300010409000b
00560490000300010409000c002a04e6000300010409000d029805100003
00010409000e006c07a800a9002000320030003000380020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e002e00200041006c006c0020005200690067006800740073
002000520065007300650072007600650064002e00430061006c00690062
00720069002000690073002000610020006d006f006400650072006e0020
00730061006e0073002000730065007200690066002000660061006d0069
006c00790020007700690074006800200073007500620074006c00650020
0072006f0075006e00640069006e006700730020006f006e002000730074
0065006d007300200061006e006400200063006f0072006e006500720073
002e00200049007400200066006500610074007500720065007300200072
00650061006c0020006900740061006c006900630073002c00200073006d
0061006c006c00200063006100700073002c00200061006e00640020006d
0075006c007400690070006c00650020006e0075006d006500720061006c
00200073006500740073002e0020004900740073002000700072006f0070
006f007200740069006f006e007300200061006c006c006f007700200068
00690067006800200069006d007000610063007400200069006e00200074
0069006700680074006c007900200073006500740020006c0069006e0065
00730020006f0066002000620069006700200061006e006400200073006d
0061006c006c0020007400650078007400200061006c0069006b0065002e
002000430061006c0069006200720069002700730020006d0061006e0079
002000630075007200760065007300200061006e00640020007400680065
0020006e0065007700200072006100730074006500720069007300650072
0020007400650061006d00200075007000200069006e0020006200690067
006700650072002000730069007a0065007300200074006f002000720065
007600650061006c002000610020007700610072006d00200061006e0064
00200073006f006600740020006300680061007200610063007400650072
002e004d006900630072006f0073006f00660074003a002000430061006c
00690062007200690020004900740061006c00690063003a002000320030
0030003500560065007200730069006f006e00200035002e003600320043
0061006c0069006200720069002d004900740061006c0069006300430061
006c00690062007200690020006900730020006500690074006800650072
002000610020007200650067006900730074006500720065006400200074
0072006100640065006d00610072006b0020006f00720020006100200074
0072006100640065006d00610072006b0020006f00660020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002e004c00750063002800610073002900200064006500200047
0072006f006f00740068007400740070003a002f002f007700770077002e
006d006900630072006f0073006f00660074002e0063006f006d002f0074
00790070006f006700720061007000680079002f006300740066006f006e
007400730068007400740070003a002f002f0066006f006e007400660061
006200720069006b002e0063006f006d0059006f00750020006d00610079
00200075007300650020007400680069007300200066006f006e00740020
006100730020007000650072006d00690074007400650064002000620079
0020007400680065002000450055004c004100200066006f007200200074
00680065002000700072006f006400750063007400200069006e00200077
00680069006300680020007400680069007300200066006f006e00740020
0069007300200069006e0063006c007500640065006400200074006f0020
0064006900730070006c0061007900200061006e00640020007000720069
006e007400200063006f006e00740065006e0074002e00200059006f0075
0020006d006100790020006f006e006c0079002000280069002900200065
006d0062006500640020007400680069007300200066006f006e00740020
0069006e00200063006f006e00740065006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
00200065006d00620065006400640069006e006700200072006500730074
00720069006300740069006f006e007300200069006e0063006c00750064
0065006400200069006e0020007400680069007300200066006f006e0074
003b00200061006e006400200028006900690029002000740065006d0070
006f0072006100720069006c007900200064006f0077006e006c006f0061
00640020007400680069007300200066006f006e007400200074006f0020
00610020007000720069006e0074006500720020006f00720020006f0074
0068006500720020006f0075007400700075007400200064006500760069
0063006500200074006f002000680065006c00700020007000720069006e
007400200063006f006e00740065006e0074002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e00740073002f00640065006600610075006c0074002e
0061007300700078a92032303038204d6963726f736f667420436f72706f
726174696f6e2e20416c6c205269676874732052657365727665642e4361
6c696272692069732061206d6f6465726e2073616e732073657269662066
616d696c79207769746820737562746c6520726f756e64696e6773206f6e
207374656d7320616e6420636f726e6572732e2049742066656174757265
73207265616c206974616c6963732c20736d616c6c20636170732c20616e
64206d756c7469706c65206e756d6572616c20736574732e204974732070
726f706f7274696f6e7320616c6c6f77206869676820696d706163742069
6e2074696768746c7920736574206c696e6573206f662062696720616e64
20736d616c6c207465787420616c696b652e2043616c696272692773206d
616e792063757276657320616e6420746865206e65772072617374657269
736572207465616d20757020696e206269676765722073697a657320746f
2072657665616c2061207761726d20616e6420736f667420636861726163
7465722e4d6963726f736f66743a2043616c69627269204974616c69633a
203230303556657273696f6e20352e363243616c696272692d4974616c69
6343616c6962726920697320656974686572206120726567697374657265
642074726164656d61726b206f7220612074726164656d61726b206f6620
4d6963726f736f667420436f72706f726174696f6e20696e207468652055
6e697465642053746174657320616e642f6f72206f7468657220636f756e
74726965732e4c7563286173292064652047726f6f74687474703a2f2f77
77772e6d6963726f736f66742e636f6d2f7479706f6772617068792f6374
666f6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f7520
6d617920757365207468697320666f6e74206173207065726d6974746564
206279207468652045554c4120666f72207468652070726f647563742069
6e207768696368207468697320666f6e7420697320696e636c7564656420
746f20646973706c617920616e64207072696e7420636f6e74656e742e20
596f75206d6179206f6e6c792028692920656d626564207468697320666f
6e7420696e20636f6e74656e74206173207065726d697474656420627920
74686520656d62656464696e67207265737472696374696f6e7320696e63
6c7564656420696e207468697320666f6e743b20616e6420286969292074
656d706f726172696c7920646f776e6c6f6164207468697320666f6e7420
746f2061207072696e746572206f72206f74686572206f75747075742064
657669636520746f2068656c70207072696e7420636f6e74656e742e6874
74703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f677261
7068792f666f6e74732f64656661756c742e61737078b10903b8027ab21e
3e1fb80279b21e3e1fb80278b21e0b1fb80277b21e0b1fb80276b21e3a1f
b80275b21e3a1fb80274b21e3e1fb80273b21e3b1fb80272b21e3c1fb802
71b21e3c1fb80270b21e3c1fb8026fb21e3d1fb8026eb21e3d1fb8026db2
1e3e1fb8026cb21e3e1fb8026bb21d411fb8026ab21d411fb80269b21d42
1fb80268b21d431fb80267b21d431fb80266b21d431fb80265b21d431fb8
0264b21d431fb80263b21d411fb80262b21d421fb80261b21d421fb80260
b21d431fb8025fb21d431fb8025eb21c451fb8025db21c451fb8025cb21c
451fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c451f
b80257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb802
52b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb2
1c441fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21c45
1fb80249b21c451fb80248b21c451fb80247b21c451fb80246b21c451fb8
0245b21c451fb80244b21b491fb80243b21b4a1fb80242b21b4a1fb80241
b21b4a1fb80240b21b4b1fb8023fb21b4b1fb8023eb21b4c1fb8023db21b
4c1fb8023cb21b4c1fb8023bb21b4c1fb8023ab21b4c1fb80253b21b4c1f
b80239b21b491fb80238b21b491fb80237b21b4a1fb80236b21b4a1fb802
35b21b4a1fb80234b21b4b1fb80233b21b4b1fb80232b21b4c1fb80231b2
1b4c1fb80230b21b4c1fb8022fb21b4c1fb8022eb21b4c1fb8022db21b49
1fb8022cb21b4a1fb8022bb21b4b1fb8022ab21b4c1fb80229b21b4c1fb8
0228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb80224
b21b4a1fb80223b21b4b1fb80222b21b4c1fb80221b21b4c1fb80220b21b
4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21a4e1fb8021cb21a4e1f
b8021bb21a4f1fb8021ab21a4f1fb80219b21a4f1fb80218b21a4e1fb802
17b21a4e1fb80216b21a4f1fb80215b21a4f1fb80214b21a4f1fb80213b2
1a4e1fb80212b21a4e1fb80211b21a4f1fb80210b21a4e1fb8020fb21a4e
1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4f1fb8020bb21a4f1fb8
020ab21a4f1fb80209b219501fb80208b219511fb80207b219511fb80206
b219511fb80205b219511fb80204b219501fb80203b219511fb80202b219
511fb80201b219511fb80200b219511fb801ffb219511fb801feb219511f
b801fdb219501fb801fcb219511fb801fbb219511fb801fab219511fb801
f9b219511fb801f8b219511fb801f7b219511fb801f6b218531fb801f5b2
18531fb801f4b218541fb801f3b218541fb801f2b218541fb801f1b21854
1fb801f0b218531fb801efb218531fb801eeb218541fb801edb218541fb8
01ecb218541fb801ebb218541fb801eab218531fb801e9b218531fb801e8
b218531fb801e7b218541fb801e6b218541fb801e5b218541fb801e4b218
541fb801e3b218531fb801e2b218531fb801e1b218541fb801e0b218541f
b801dfb218541fb801deb218541fb801ddb217561fb801dcb217561fb801
dbb217571fb801dab217571fb801d9b217561fb801d8b217561fb801d7b2
17571fb801d6b217571fb801d5b217571fb801d4b217571fb801d3b21756
1fb801d2b217571fb801d1b217561fb801d0b217561fb801cfb217571fb8
01ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801ca
b217561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b217
571fb801c5b217571fb801c4b2163e1fb801c3b2163f1fb801c2b2163f1f
b801c1b2165b1fb801c0b2165b1fb801bfb2165b1fb801beb2165b1fb801
bdb2165b1fb801bcb2165b1fb801bbb2165b1fb801bab2163f1fb801b9b2
163f1fb801b8b2165b1fb801b7b2165b1fb801b6b2165b1fb801b5b2165b
1fb801b4b2165b1fb801b3b2165b1fb801b2b2165b1fb801b1b2163f1fb8
01b0b2163e1fb801afb2163f1fb801aeb2163f1fb801adb2165b1fb801ac
b2165b1fb801abb2165b1fb801aab2165b1fb801a9b2165b1fb801a8b216
3e1fb801a7b2163f1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1f
b801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb801
9fb2165b1fb8019eb215621fb8019db215621fb8019cb215631fb8019bb2
15641fb8019ab215651fb80199b215661fb80198b215661fb80197b21566
1fb80196b215661fb80195b215661fb80194b215661fb80193b215661fb8
0192b215611fb80191b215621fb80190b215631fb8018fb215641fb8018e
b215641fb8018db215651fb8018cb215661fb8018bb215661fb8018ab215
631fb80189b215641fb80188b215551fb80187b215611fb80186b215621f
b80185b215621fb80184b215631fb80183b215651fb80182b215661fb801
81b215661fb80180b215661fb8017fb215661fb8017eb215661fb8017db2
15661fb8017cb215661fb8017bb215661fb8017ab215451fb80179b21561
1fb80178b215621fb80177b215621fb80176b215631fb80175b215641fb8
0174b215641fb80173b215651fb80172b215661fb80171b215661fb80170
b215661fb8016fb215661fb8016eb215661fb8016db215661fb8016cb215
661fb8016bb215551fb8016ab215451fb80169b215451fb80168b215361f
b80167b215361fb80166b214821fb80165b214561fb80164b2147f1fb801
63b214551fb80162b214561fb80161b214401fb80160b214551fb8015fb2
14561fb8015eb2147e1fb8015db214831fb8015cb214851fb8015bb2133d
1fb8015ab2131e1fb80159b2131e1fb80158b2130a1fb80157b2130a1fb8
0156b2130b1fb80155b2133a1fb80154b2133a1fb80153b2133a1fb80152
b2133b1fb80151b2133c1fb80150b2133c1fb8014fb212451fb8014eb212
461fb8014db212461fb8014cb212451fb8014bb212451fb8014ab212461f
b80149b212461fb80148b212461fb80147b212441fb80146b212451fb801
45b212461fb80144b212461fb80143b211471fb80142b211571fb80141b2
11581fb80140b211591fb8013fb2115a1fb8013eb2115a1fb8013db2115b
1fb8013cb2115b1fb8013bb2115b1fb8013ab2115b1fb80139b2112b1fb8
0138b2112c1fb80137b211391fb80136b211391fb80135b211461fb80134
b211471fb80133b211471fb80132b211551fb80131b211551fb80130b211
561fb8012fb211561fb8012eb211571fb8012db211571fb8012cb211581f
b8012bb211591fb8012ab211591fb80129b2115a1fb80128b2115a1fb801
27b2115b1fb80126b2115b1fb80125b2115b1fb80124b2115b1fb80123b2
11591fb80122b2115a1fb80121b211391fb80120b211471fb8011fb21156
1fb8011eb211561fb8011db211591fb8011cb211591fb8011bb2115b1fb8
011ab2115b1fb80119b2115b1fb80118b211561fb80117b211561fb80116
b211571fb80115b211571fb80114b211581fb80113b2115a1fb80112b211
5a1fb80111b2115b1fb80110b2115b1fb8010fb2115b1fb8010eb2115b1f
b8010db2115a1fb8010cb2115b1fb8010bb2105d1fb8010ab2105e1fb801
09b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105f1fb80105b2
105d1fb80104b2105e1fb80103b2105f1fb80102b2105f1fb80101b2105f
1fb8010040ff105f1fff105d1ffe105f1ffd105f1ffc105f1ffb105f1ffa
105d1ff9105e1ff8105f1ff7105f1ff6105f1ff5105f1ff40f621ff30f62
1ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621feb
0f631fea0f641fe90f641fe80f641fe70f641fe60f621fe50f621fe40f64
1fe30f621fe20f621fe10f631fe00f641fdf0f641fde0f641fdd0f641fdc
0f641fdb0f641fda0e671fd90e681fd80e681fd70e681fd60e681fd50e67
1fd40e681fd30e681fd20e681fd10e671fd00e681fcf0e681fce0e681fcd
0e681fcc0e681fcb0e681fca0e681fc90e681fc80d6b1fc70d6c1fc60d2a
1fc50d6c1fc40d2c1fc30d6b1fc20d6c1fc10d6d1f40ffc00d6a1fbf0d69
1fbe0d681fbd0d6b1fbc0d311fbb0d311fba0d311fb90c711fb80c721fb7
0c731fb60c741fb50c741fb40c741fb30c731fb20c741fb10d311fb00d31
1faf0d311fae0d311fad0d311fac0d311fab0d311faa0d311fa90b7e1fa8
0b7a1fa70b791fa60b7a1fa50b7c1fa40b7d1fa30b7e1fa20b7e1fa10b7e
1fa00b7e1f9f0b7e1f9e0b7e1f9d0b7e1f9c0b7e1f9b0b7e1f9a0b2d1f99
0b2d1f980aa71f970aa51f960aa71f950aa71f940aa71f930aa71f920a68
1f910a821f900a9b1f8f0a9d1f8e0a9f1f8d0aa71f8c0aa71f8503251f84
03381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b7d
4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578ab7755ba02
8900660288403c5576ab755504751475747503f47501ab75014475013075
0102007510752075030c7455725573ab7255007250728072b072043bb072
e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab
6f556e666d556a03251f6938675568ab67556638645565ab645563386255
613860555f385d555eab5d555c385a555bab5a55593858555703251f5638
545555ab54555338515552ab51554f384e554e03251f4d384b554cab4b55
4a38485549ab4855473846554503381f001c101c201c0310b8ffc0404e1c
1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f1a1f1a0229
0f1901434f19016f197f198f19030f18cf18024018292c460f17cf17df17
ef1704134017292e460016101620160315b8ffc0b3164d5446b8ffc0b316
3f4446b8ffc0b316313546b8ffc0404d162326460f15010f151f1502451f
15010011e011f0110315bf10cf10020f0f010f0fff0f02400f3135460f0e
1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d
313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b
2d30460003012001010001100120010308b8ffc0b301151f46b80100b316
010501b80190b154532b2b4bb807ff524bb008505bb00188b02553b00188
b040515ab00688b000555a5b58b101018e59b101024354b0144b515a58b1
01018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0401d594bb0
ff5358b0001db1160042592b5e7375732b2b745e732b2b5e73742b73742b
7374745e7301755e73742b2b2b2b5e732b5e732b7374755e735e735e7375
5e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e7374
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e000000>
[7771 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> LLIAAA+CALIBRI,Italic AddT42Char 
1 690 75 <00020072ffed051205210017002f0057ba027d027e00582bb10102435558
bf00000239001800240253000c001d0127b2135329b80129b3400756282b
183f1a4ded3fed012fedd4ed31301bb9001d0127b2135329b80129b34007
56282b183f1a4ded3fed31305901140e0423222e0235343e0433321e0207
342e0223220e0415141e0233323e0405121c426da0dc8e72ac733a1e456f
a1d88c71ab733ab820467452689d734b2d131f487353679c724c2e13035c
4dbec4b98f583971a66d56c6c5b68d533b73a97a4675542f4d7c9da09637
4773522d4b7a9b9f9600>LLIAAA+CALIBRI,Italic AddT42Char 
1 1182 121 <0001ffd1fffa04870514002f007aba027d027e00582bb10102435558bc00
2302370019000b0235400d0100240c180401190119011725bb0230002f00
0d0231400e40172a52240c121e5212550655282b183f3f3f1239393f012f
1a4deddded1239392f2f12173910ed10ed31301b400c2a52240c121e5212
550655282b183f3f3f1239393f31305901131616060623222e022703010e
032322262636370103263e0233321e021713013e0333321616060702a9f2
07011329231d22130803c4fe78070f18261d21290f0a1001dfdd0801142a
221b21130a04b0016d070e18241d21290f090f0295fdaa161b0f0503080b
090207fdf9090c0703050f1a16025c0236161a0f05030a0f0cfe2701e208
0d0703050f1a1600>LLIAAA+CALIBRI,Italic AddT42Char 
1 1460 122 <000100bffffa04690514002a006fba027d027e00582bb10102435558400a
1b00000c010c0b0b0d20bb0217002a0017022e4010400d25520c001b030b
010612520655282b183f3f12393917393f012f1a4ded2fed12392f333311
33123931301b400e25520c001b030b010612520655282b183f3f12393917
393f31305901030e0323222e023713032626363633321e02171316161733
363637133e0333321616060702505f020b162218192012060160dc060310
25231b2214090467121c0d02244a29f5060f18241e24260b0c0d01f7fe22
070c070505070c0701de02da161a0e05030a0f0dfe9d3e733e3c763c0169
0a0e090307101a12>LLIAAA+CALIBRI,Italic AddT42Char 
1 1708 258 <00020051ffed03e103ca0026003b008dba027f028000582bb10102435558
b3091d081eb801afb42627263b08b801aeb7000f260113032631b8021e40
171300093b271d26060321492af91a4a36f8400e4d034c282b183f3f1a4d
ed3fed3f121739012fedd45f5e5ddded33113310ed11393931301b401600
093b271d26060321492af91a4a36f8400e4d034c282b183f3f1a4ded3fed
3f12173931305925060623222e0237370e0323222e0235343e0433321617
37363633321e020707262623220e0415141e0233323e0237032c04242a14
1a100603210d445d723b50693e17152f4b6a8c59597f3213042628141b10
0401d32f6d44365743311f0f0b1f362b376f604a1219110e04070b09aa20
4c402a385c743d388e948c6f43483f5b100e03080c07ec454533546b726e
2c234539233d6c925800>LLIAAA+CALIBRI,Italic AddT42Char 
1 2018 282 <00020051ffed0439056d002c003f0087ba027f028000582bb10102435558
400a212d3f222c003f092237b8021e401a15222c032746212d3f09080006
0e30f91c4a3af8400e4d034c282b183f3f1a4ded3fed1217393f12393901
2fedc4392f33327d870ec4c431301b4019222c032746212d3f090800060e
30f91c4a3af8400e4d034c282b183f3f1a4ded3fed1217393f1239393130
5925060623222e0237370e0323222e0435343e0433321e0217133e033332
1e020701262623220e0415141633323e0237032d03242a151a100502200d
445d723b3b573b25150716304b6a8b582b4c3e341566010a142019181f12
0502fed62f6d443555443120104249376f604a1219110e04070b09a8214b
3f291f3445494a1f3a90918b6b4213212e1901fe070d070505070d07fd62
454831526a716e2e61673c6a9257>LLIAAA+CALIBRI,Italic AddT42Char 
1 2332 286 <0002004dffed039d03ca002e003c0087ba027f028000582bb10102435558
b62a323706040009b8020e400923110c1e031414232fb8020d4015002306
be37372a1e11110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f11
12392fed012fd4ed12392f173910ed11173931301b401306be37372a1e11
110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f1112392fed3130
5901140e022323060615141633323e0233321615140e02070e0323222e02
35343e0433321e0207342623220e020733323e02039d4088d4946a070563
6f40664b3009090904080d080c3d5464325986592c193656779c6254754b
22a9504a41644d371166698d552302e5456e4e2a213e1b646a1316130d0c
0a1c1d1a090c17130c28537c5441959286663e2a425137333f2d4c65381a
2d3c>LLIAAA+CALIBRI,Italic AddT42Char 
1 2634 336 <00020042fe9303e103ca003c005100b4ba027f028000582bb10102435558
400d33343c3c3d51501d1c3d1c3d47b8021e40260b29001c343c001c0405
37491f513d33042440f9304a2809f51212174cf8244d17e140054f282b18
3f1a4ded3fed12392f00ed2b3fed1217393f121739012f332fc4edc4107d
870ec4c4c411013312393931301b4022343c001c040537491f513d330424
40f9304a2809f51212174cf8244d17e140054f282b183f1a4ded3fed1239
2f00ed2b3fed1217393f121739313059050e0323222627262635343e0433
321e0233323e02373636370e0323222e0235343e04333216173736363332
1e020707262623220e0415141e0233323e0237031d10476e97605389290f
0b0105070b10090c243c5941365741290a11220b10465c6e394b683f1c16
304b6a8b58597f3213042628141b100401d32f6d44365643321f0f0f2135
26376f604a122e50784f2821170a130f06161618130b151a16162c442f5b
7821254b3f27325777453a91938b6d42483f5b100e03080c07ec45453253
6c716f2d2b48331e3d6c9357>LLIAAA+CALIBRI,Italic AddT42Char 
1 3036 349 <0002003ffffa01ef052f00130029006aba027f028000582bb10102435558
b4291f141e00b80262400b0a1f1e1e141f290424190fb80147b605402449
194c282b183f3f1ade4ded11121739012fd6d4ed1133113331301bb71e14
1f290424190fb80147b605402449194c282b183f3f1ade4ded1112173931
3059010e0323222e02373e0333321e02010e0323222e0237133e0333321e
020701e905111c2a1e1d2612020506121b2a1e1d251302fef7020a142118
191f110502b3010a142119181f11050104cc1c26170a0a17261c1c251909
091925fb31080b080404080b080384070c080404080c0700>LLIAAA+CALIBRI,Italic AddT42Char 
1 3270 361 <0002ff3bfe930202052f0013003b007aba027f028000582bb10102435558
b414303b3100b80261400c0a311f3030143d3b31363c0fb8014740090536
492bf840194f282b183f1a4ded3fdeed11123939113333012fc4ddd4ed11
33113331301bb730143d3b31363c0fb8014740090536492bf840194f282b
183f1a4ded3fdeed11123939113333313059010e0323222e02373e033332
1e02010e0323222627262635343e0433321e0233323e0237133e0333321e
020701fc06111b291e1d2514010506101d281e1e261202fee90f304c6c4a
29370704040304060a0c07070a0c130f2134271c0bbf020a152118172011
050104cc1c26170a0a17261c1c251909091925faf64e7b552d0c06050c0a
05131618130c020102132e4a3603bc070c080404080c0700>LLIAAA+CALIBRI,Italic AddT42Char 
1 3564 367 <0001003ffffa01f1057100150047ba027f028000582bb101024355584010
15000b400a000a150b04051046054c282b183f3f121739012f1acd333231
301b400b000a150b04051046054c282b183f3f121739313059370e032322
2e0237013e0333321e0207e6020a142118191f110502010a020915211918
1f11040119080b080404080b080538080c080404080c0800>LLIAAA+CALIBRI,Italic AddT42Char 
1 3708 373 <0001003ffffa05e703ca005b00a7ba027f028000582bb101024355584039
442d2d2e39171622214e225b005b0b000a0113030a38220b534a1128f940
494a382e21170a00162d0b225b4e44390e333e49334c1c4c054c282b183f
3f3f3f1217393f1a4dfdc43f012f2f2fc45f5e5d113332111239c4113332
c63332113331301b4021534a1128f940494a382e21170a00162d0b225b4e
44390e333e49334c1c4c054c282b183f3f3f3f1217393f1a4dfdc43f3130
59250e0323222e023713363635342623220e0207030e0323222e02371336
3635342623220e0207030e0323222e0237133e0333321e0207073e033332
1e02173e0333321e02151406070567010a152118181f1106026f0507313d
326b604a1150020a152118181f1006016f0705323c336a604a1150020a14
2118191f110502b50109131d14151b0f0401220f455c6d393c56371a0314
465c6c38435a3818080719080b080404080b08022c1d341a404c3d6b9356
fe6e080b080404080b08022c1e3a193d493d6b9356fe6e080b080404080b
080385070c080303080c07ac224c402a21394f2f234c3f2a264258342344
2400>LLIAAA+CALIBRI,Italic AddT42Char 
1 4130 374 <0001003ffffa03b003ca003a007bba027f028000582bb101024355584026
311a1a1b26040e03000f0114030f0e2515f940364a251b0e041a0f312608
202b49204c094c282b183f3f3f1217393f1a4ded012fc4c45f5e5d321133
c63332113331301b401615f940364a251b0e041a0f312608202b49204c09
4c282b183f3f3f1217393f1a4ded31305901140607030e0323222e023713
363635342623220e0207030e0323222e0237133e0333321e0207073e0333
321e0203b00807710209152019181f1105016f0705343d356f5f4b115002
0a142118191f110502b50109131d14151b0f0401220f445e713d435a3818
02d6234424fdce080b080404080b08022c1f3a163d4b3d6b9356fe6e080b
080404080b080385070c080303080c07ac224c402a294358>LLIAAA+CALIBRI,Italic AddT42Char 
1 4424 381 <0002004effed03d103ca0017002f0058ba027f028000582bb10102435558
b90000021f4009001810180213031824b8021e400b0c1df5134a29e34007
4d282b183f1a4ded3fed012fedd45f5e5ded31301b400a1df5134a29e340
074d282b183f1a4ded3fed31305901140e0423222e0235343e0433321e02
07342e0223220e0415141e0233323e0403d11c395877975d6089582a1b3a
5777975d6089592aae15314f383c624d39251216314e383d614d39251202
734a9a8f7e5e372e5880514a9a8e7f5e372f58805a3250371e2b49626f75
383250381e2b4a627074>LLIAAA+CALIBRI,Italic AddT42Char 
1 4644 393 <0002fff8fe9403d003ca002a003f0092ba027f028000582bb10102435558
400d2135360c0d350d35180d171800b8021e401c2b170c363521040730f9
264a170d182004121b49124f39f840074d282b183f1a4ded3f3f1217393f
ed121739012fd4ed2f11331133107d870ec4c411013331301b401a0c3635
21040730f9264a170d182004121b49124f39f840074d282b183f1a4ded3f
3f1217393fed12173931305901140e0423222e0227030e0323222e023713
363633321e0207073e0333321e0207342e0223220e020707161633323e04
03d016304b6a8b582d4a3e3416550209142119171f120501fd02242a151a
100401220e435d723b4c67401cad0f2135273670604b11212f6c44355743
31210f02843a91948b6c4112202b1afe50080c080404080c0804ea100e03
070c08ab214b412a3457774f2b48341c3c6c9357a5464532546a7270>LLIAAA+CALIBRI,Italic AddT42Char 
1 4972 396 <0001003ffffa02f203ca0033006cba027f028000582bb10102435558400a
2811111d121c001d1c0cb801184010402d4a121c11281d2706172249174c
282b183f3f1217393f1a4ded012f2fc411331133113331301bb9000c0118
4010402d4a121c11281d2706172249174c282b183f3f1217393f1a4ded31
305901140e0423222e0223220e0207030e0323222e0237133e0333321e02
07073e0333321e02171602f20304080c0d080813171e1422595647114f02
0a142118191f110502b3010a141d14151b0f040121173f4a512711231e17
0606039c04171e201b12070a073b688e53fe6f080b080404080b08038507
0c080303080c07a4294c3922050709060600>LLIAAA+CALIBRI,Italic AddT42Char 
1 5230 410 <00010071ffef02c504ad0045008aba027f028000582bb101024355584029
362c2b372b42080941094137092b2b30371737170030424837413c082ce3
092b2136480ff840214d282b183f1a4ded3f123939ed32cd39393f012fcd
39392f2f123911331133107d87c4c41087c4c431301b4013424837413c08
2ce3092b2136480ff840214d282b183f1a4ded3f123939ed32cd39393f31
305901140e04232303060615141633323e0233321615140e02070e032322
2e0235343e02371323222635343e023333373e0333321e02070733321602
c502060a0b0e09e66504062b301b281d1608080905080c0708202a2f1738
52381b02050503657d0b0c060c130d7e2b010b142118181f1105012be60f
0a039309151616110afe0a153411332f090a090b0f0d1f1e1807070e0b06
18334d360c1d20200e01fa0d130e252016d6070c090404090c07d616>LLIAAA+CALIBRI,Italic AddT42Char 
1 5810 460 <000100050000031303b70031006dba027f028000582bb10102435558bc00
09024b001d0023024a4019051d1827050d270d270d0018000823f62e4822
09f640144b282b183f1a4ded323fed32012f2f1239392f2f113911123910
e110e131301b400c0823f62e482209f640144b282b183f1a4ded323fed32
31305901140e02070606070121321615140e042321222635343e02373e03
370121222635343e0433213216031302040402061916fe03019d0c0c0206
080c0e09fdd313120404050202060c120d0200fe880d0d0305090c0f0902
07130f0395051315150716271afd96121108161617120b15120716171405
080d111810026a111209161717110a12>LLIAAA+CALIBRI,Italic AddT42Char 
1 0 0 <00050000fe7303da050e00030007003b00550056004fb52d162d16083c41
0a01ed00490007016400020020018c000800010164401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103dafc5b03
4ffd06027b1f456e4e24021f1b0e140c050120051f17083d4f2e130f2135
2828402f1f070a060205080608293a4422445e3a1afeb503070b070a2016
161a0e0504070c0809201913190e04fe46050efaf2050efb43046cfb9403
313467523605980a0802040606bc1b17253b4621192b20130f13100c0e05
131612060713120b263d4afd8b08171a17070a0a070c100a091818160809
0a060c10fd38>LLIAAA+CALIBRI,Italic AddT42Char 
LLIAAA+CALIBRI,Italic /CharStrings get begin
/space 3 def
/O 75 def
/X 121 def
/Y 122 def
/a 258 def
/d 282 def
/e 286 def
/g 336 def
/i 349 def
/j 361 def
/l 367 def
/m 373 def
/n 374 def
/o 381 def
/p 393 def
/r 396 def
/t 410 def
/z 460 def
end
LLIAAA+CALIBRI,Italic /Encoding get
dup 32 /space put
dup 79 /O put
dup 88 /X put
dup 89 /Y put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 122 /z put
pop
end
%ADOEndSubsetFont
/FPLHWO+CALIBRI,Italic /LLIAAA+CALIBRI,Italic findfont ct_VMDictPut
/FPLHWO+CALIBRI,Italic*1 
[32{/.notdef}rp /space 46{/.notdef}rp /O 8{/.notdef}rp /X /Y 7{/.notdef}rp 
/a 2{/.notdef}rp /d /e /.notdef /g /.notdef /i 
/j /.notdef /l /m /n /o /p /.notdef 
/r /.notdef /t 5{/.notdef}rp /z 133{/.notdef}rp]
FPLHWO+CALIBRI,Italic nf
FPLHWO+CALIBRI,Italic*1 [18 0 0 -18 0 0 ]msf
82.101 205.188 mo
(O)sh
93.878 205.188 mo
(r)sh
100.048 205.188 mo
(i)sh
104.179 205.188 mo
(g)sh
113.434 205.188 mo
(i)sh
117.565 205.188 mo
(n)sh
126.819 205.188 mo
(a)sh
136.074 205.188 mo
(l)sh
140.205 205.188 mo
( )sh
52.965 226.788 mo
(i)sh
57.0959 226.788 mo
(m)sh
71.3339 226.788 mo
(p)sh
80.5887 226.788 mo
(l)sh
84.7196 226.788 mo
(e)sh
93.315 226.788 mo
(m)sh
107.553 226.788 mo
(e)sh
116.148 226.788 mo
(n)sh
125.403 226.788 mo
(t)sh
131.432 226.788 mo
(a)sh
140.687 226.788 mo
(t)sh
146.717 226.788 mo
(i)sh
150.848 226.788 mo
(o)sh
160.085 226.788 mo
(n)sh
169.34 226.788 mo
( )sh
287.8 203.685 mo
(O)sh
299.577 203.685 mo
(p)sh
308.832 203.685 mo
(t)sh
314.861 203.685 mo
(i)sh
318.992 203.685 mo
(m)sh
333.23 203.685 mo
(i)sh
337.361 203.685 mo
(z)sh
344.471 203.685 mo
(e)sh
353.067 203.685 mo
(d)sh
362.322 203.685 mo
( )sh
266.87 225.285 mo
(i)sh
271.001 225.285 mo
(m)sh
285.239 225.285 mo
(p)sh
294.494 225.285 mo
(l)sh
298.625 225.285 mo
(e)sh
307.22 225.285 mo
(m)sh
321.458 225.285 mo
(e)sh
330.053 225.285 mo
(n)sh
339.308 225.285 mo
(t)sh
345.337 225.285 mo
(a)sh
354.592 225.285 mo
(t)sh
360.622 225.285 mo
(i)sh
364.753 225.285 mo
(o)sh
373.99 225.285 mo
(n)sh
248.94 85.83 mo
(X)sh
FPLHWO+CALIBRI,Italic*1 [11.6986 0 0 -11.6986 0 0 ]msf
258.28 88.34 mo
(j)sh
FPLHWO+CALIBRI,Italic*1 [18 0 0 -18 0 0 ]msf
335.58 92.51 mo
(Y)sh
FPLHWO+CALIBRI,Italic*1 [11.6986 0 0 -11.6986 0 0 ]msf
344.35 95.02 mo
(j)sh
61.689 146.49 mo
54.502 152.058 li
1 /0 /CSD get_res sepcs
.749 sep
@
69.507 171.433 mo
46.948 171.433 li
@
74.836 171.433 mo
67.796 174.953 li
68.904 172.737 68.904 170.128 67.796 167.913 cv
74.836 171.433 li
cp
ef
61.122 169.165 mo
53.936 174.735 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LLIAAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LLIAAA+CALIBRI,Italic gcheck setglobal} if
1 6268 882 <0001004801b40239023d00150017b5000b12e30828ba027f028000582b2b
2fed012fcd313001140e042321222635343e043321321602390106080b11
0afe5d0d0c0205080c0f0b01a30e0b021c06141717140c12120513171813
0b12>LLIAAA+CALIBRI,Italic AddT42Char 
1 7140 1005 <0001005f000003530517002e008dba027d027e00582bb10102435558b900
30ffc040180f024d0030010f032a142b1320141314001a0b2a25081514b8
014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd111239012f
c4cd393911331133113331305f5e5d2b1b400a0030010f032a25081514b8
014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd1112393130
015f5e5d5925140e042321222635343e04332113050606262635343e0237
253e0333321e02070333321603530305080c0f09fd5b0c0f0305090c100a
010ec3fee710140d05050b120e0151050d121911191f110301e2ea0e0b66
06151716130b141105131618120d03ce94080506100c0b21211e08bf0304
040104070b06fb8f1300>LLIAAA+CALIBRI,Italic AddT42Char 
1 7420 1006 <00010020000003ca0521004300a6ba027d027e00582bb10102435558b900
45ffc040090f024d0045010f0340b80230b71212270027000d1ab80264b2
380d2ebb01300024001f012c40091a133f030833531240b80126b3400854
282b183f1a4dfdc13f121739fdd4ed012fd4ed1239392f2f3910ed31305f
5e5d2b1bb50045010f032ebb01300024001f012c40091a133f0308335312
40b80126b3400854282b183f1a4dfdc13f121739fdd4ed3130015f5e5d59
25140e042321222e0235343e0237013e0535342e0223220e022322263534
3e04373e0333321e0215140e04070721321603520306090d100afd350d12
0a05030c1815014d4e714d2e1a080f254434396854390b0a0c030307090b
070b415c703c607e491d0c233f658f63fa0228110e6906161718120c060b
0f0a0a20262712012444776757483b171837302022292314130813161614
13070b2422193652602b29565f6a7b8f54d61900>LLIAAA+CALIBRI,Italic AddT42Char 
1 910 87 <00020052fffa0428050e001f002f0082ba027d027e00582bb10102435558
b900000237400c201328080927092709141328b80103b71417130908080e
27b80104b54017510e55282b183f3f1a4ded12392f39391239ed012fcd33
32107d87c4c4011810d4ed31301bb900280103b71417130908080e27b801
04b54017510e55282b183f3f1a4ded12392f39391239ed31305901140e04
2323030e0323222e023713363633333216171e0307342627262623230333
323e040428193653769968b25d020a1721191720130702ee083221ff324d
2436573c20b63d40183a21a266a347624a33200f03de35746f634c2bfe2d
070c070504070c0804ab282207080c3249604c3e59120704fdf92034464b
4d00>LLIAAA+CALIBRI,Italic AddT42Char 
1 6360 896 <0001002bfec002cd0577002000314014081b091a001b0d1a1b1a1508c01e
4709bf154e28ba027f028000582b2b3fed3fed123939012fcd2fcd113311
33313001140e0423230133321615140e042321222e023701363633333202
cd0304070a0d08a3fed9a30a0a0205070a0d08ff000c140f0605013b082f
18ff14055b06121416110bfa3c0f0d07121515110907101b14062b271f00
>LLIAAA+CALIBRI,Italic AddT42Char 
1 6510 897 <0001ffc5fec00266057700210033401514210700000f21100f00210410c0
1c470fbf044e28ba027f028000582b2b3fed3fed123939012f2f33113310
cd10cd31300506062321222635343e0433330123222635343e043333321e
02070126072f17ff00090b0303080a0d08a20127a20b0a0204070a0d0aff
0c150f0503fa281e0f0e06121415110a05c40e0d06131516100b07111b13
>LLIAAA+CALIBRI,Italic AddT42Char 
LLIAAA+CALIBRI,Italic /CharStrings get begin
/hyphen 882 def
/one 1005 def
/two 1006 def
/P 87 def
/bracketleft 896 def
/bracketright 897 def
end
LLIAAA+CALIBRI,Italic /Encoding get
dup 45 /hyphen put
dup 49 /one put
dup 50 /two put
dup 80 /P put
dup 91 /bracketleft put
dup 93 /bracketright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FPLHWO+CALIBRI,Italic*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 3{/.notdef}rp /one /two 28{/.notdef}rp 
/O /P 7{/.notdef}rp /X /Y /.notdef /bracketleft /.notdef 
/bracketright 3{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g 
/.notdef /i /j /.notdef /l /m /n /o 
/p /.notdef /r /.notdef /t 5{/.notdef}rp /z 133{/.notdef}rp]
FPLHWO+CALIBRI,Italic nf
FPLHWO+CALIBRI,Italic*1 [12.0002 0 0 -12.0002 0 0 ]msf
57.878 143.07 mo
(2)sh
56.815 166.254 mo
(2)sh
FPLHWO+CALIBRI,Italic*1 [18 0 0 -18 0 0 ]msf
232.72 174.445 mo
(P)sh
FPLHWO+CALIBRI,Italic*1 [11.6986 0 0 -11.6986 0 0 ]msf
242.02 176.958 mo
([)sh
245.6 176.958 mo
(j)sh
248.4 176.958 mo
(-)sh
251.98 176.958 mo
(1)sh
257.91 176.958 mo
(])sh
287.38 174.602 mo
264.83 174.602 li
1 /0 /CSD get_res sepcs
.749 sep
@
292.71 174.602 mo
285.67 178.122 li
286.78 175.906 286.78 173.298 285.67 171.082 cv
292.71 174.602 li
cp
ef
279 172.334 mo
271.81 177.904 li
@
1 /0 /CSD get_res sepcs
1 sep
FPLHWO+CALIBRI,Italic*1 [12.0002 0 0 -12.0002 0 0 ]msf
274.69 169.424 mo
(2)sh
287.84 155.436 mo
265.28 155.436 li
1 /0 /CSD get_res sepcs
.749 sep
@
293.17 155.436 mo
286.13 158.956 li
287.24 156.74 287.24 154.132 286.13 151.916 cv
293.17 155.436 li
cp
ef
279.46 153.168 mo
272.27 158.738 li
@
1 /0 /CSD get_res sepcs
1 sep
FPLHWO+CALIBRI,Italic*1 [12.0002 0 0 -12.0002 0 0 ]msf
275.15 150.26 mo
(2)sh
287.38 134.87 mo
264.83 134.87 li
1 /0 /CSD get_res sepcs
.749 sep
@
292.71 134.87 mo
285.67 138.39 li
286.78 136.17 286.78 133.56 285.67 131.35 cv
292.71 134.87 li
cp
ef
279 132.6 mo
271.81 138.17 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LLIAAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LLIAAA+CALIBRI,Italic gcheck setglobal} if
1 6844 1004 <0002004dffed04090521001f00390087ba027d027e00582bb10102435558
b9003bffc040090f024d003b010f0300ba02300020ffe8b40f024d202db8
0230b40f202d0a23b80103b21b5330b80103b3400a56282b183f1a4ded3f
ed123939012fedd42bed31305f5e5d2b1b4009003b010f03202d0a23b801
03b21b5330b80103b3400a56282b183f1a4ded3fed1239393130015f5e5d
5901140e0407060623222e0235343e04373e0333321e0207342623220607
0e05151416333236373e0504090b19283a4f333ba7705e8656280b19283b
4e331f495560365f865527af5f683b5f28283e3020150a60673c5f27273f
30211509039d2c7f939e9688323c483363915d2c7f939d9787331f322112
3463915e7f7a292728768991876f237f7a292727778991867000>LLIAAA+CALIBRI,Italic AddT42Char 
LLIAAA+CALIBRI,Italic /CharStrings get begin
/zero 1004 def
end
LLIAAA+CALIBRI,Italic /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FPLHWO+CALIBRI,Italic*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
28{/.notdef}rp /O /P 7{/.notdef}rp /X /Y /.notdef /bracketleft 
/.notdef /bracketright 3{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef 
/g /.notdef /i /j /.notdef /l /m /n 
/o /p /.notdef /r /.notdef /t 5{/.notdef}rp /z 
133{/.notdef}rp]
FPLHWO+CALIBRI,Italic nf
FPLHWO+CALIBRI,Italic*1 [12.0002 0 0 -12.0002 0 0 ]msf
274.69 129.69 mo
(2)sh
FPLHWO+CALIBRI,Italic*1 [23.9998 0 0 -23.9998 0 0 ]msf
235.64 45.59 mo
(1)sh
247.804 45.59 mo
( )sh
253.23 45.59 mo
(1)sh
265.395 45.59 mo
( )sh
270.82 45.59 mo
(0)sh
282.985 45.59 mo
( )sh
288.411 45.59 mo
(1)sh
334.64 45.36 mo
(1)sh
346.804 45.36 mo
( )sh
352.23 45.36 mo
(0)sh
364.395 45.36 mo
( )sh
369.82 45.36 mo
(1)sh
381.985 45.36 mo
( )sh
387.411 45.36 mo
(1)sh
1.5 lw
[4.5 4.5 ] 0 dsh
332.86 51.76 mo
349.87 51.76 li
349.87 23.42 li
332.86 23.42 li
332.86 51.76 li
1 /0 /CSD get_res sepcs
.749 sep
@
[] 0 dsh
300.83 28.52 mo
291.19 28.52 li
1 /0 /CSD get_res sepcs
1 sep
@
381.61 28.52 mo
371.98 28.52 li
@
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210325d73000000cc000000606376
7420a11cd7eb0000012c000006546670676dcc79599a000007800000066e
676c7966cf0197f400008f5000082fde68656164dd56458f00000df00000
0036686865611233162100000e2800000024686d74785ac2fc0600000e4c
000035606c6f63613726f31a000043ac000035646d61787012b305df0000
7910000000206e616d65e8b3cdc60000793000000a607072657025d64dbf
0000839000000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259b12401885158b92000
0040885458b2020202436042b12401885458b2022002436042004b014b52
58b2020802436042591bb940000080885458b202040243604259b9400000
8063b80100885458b202080243604259b94000010063b80200885458b202
100243604259b94000020063b80400885458b20240024360425959595959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00000001
000000050f5c1289de375f0f3cf5081b080000000000a2e3272a00000000
c891c497faaffd671000080c00000009000100010000000000010000073e
fe4e00431000faaffa7a1000000100000000000000000000000000000d58
06000100000000000239000002390000023900b002d7005e047300150473
0049071d0077055600580187005a02aa007c02aa007c031d004004ac0072
023900aa02aa0041023900ba0239000004730055047300df0473003c0473
00560473001a047300550473004d047300610473005304730055023900b9
023900aa04ac007004ac007204ac00700473005a081f006f0556fffd0556
009605c7006605c7009e055600a204e300a80639006d05c700a4023900bf
04000037055600960473009606aa009805c7009c063900630556009e0639
005805c700a10556005c04e3003005c700a105560009078d001905560009
0556000604e300290239008b023900000239002703c100360473ffe102aa
00590473004a0473008604000050047300460473004b0239001304730042
0473008701c7008801c7ffa20400008801c7008306aa0087047300870473
0044047300870473004802aa00850400003f02390024047300830400001a
05c700060400000f040000210400002802ac0039021400bc02ac002f04ac
00570556fffd0556fffd05c70068055600a205c7009c0639006305c700a1
0473004a0473004a0473004a0473004a0473004a0473004a040000500473
004b0473004b0473004b0473004b023900bd023900230239ffe502390009
047300870473004404730044047300440473004404730044047300830473
0083047300830473008304730049033300800473006b0473001b04730051
02cd006d044c000104e3009905e5000305e50003080000e102aa00de02aa
003d0464004e080000010639005305b4009a0464004e0464004d0464004d
0473fffd049c00a003f4003805b4007a069600a1046400000231000002f6
002f02ec002d0625007f071d004404e3008104e3009e02aa00e804ac0072
046400540473002e0464003304e5001a047300860473008c080000ef0556
fffd0556fffd0639006308000081078d00520473fffc0800000002aa0053
02aa004701c7008001c7006c0464004e03f4002f04000021055600060156
fe390473ffe402aa005c02aa005c040000170400001704730049023900b9
01c7006c02aa0047080000250556fffd055600a20556fffd055600a20556
00a20239008d0239ffe00239000402390015063900630639006306390063
05c700a105c700a105c700a1023900c602aa001902aa000602aa001d02aa
002e02aa00e502aa00a202aa006b02aa003a02aa004b02aa002804730000
01c700030556005c0400003f04e3002904000028021400bc05c7fffd0473
004905560006040000210556009e0473008704ac007204ac00a102aa006b
02aa001902aa002106ac006b06ac006b06ac0021047300000639006d0473
0042023900b10556005c0400003f05c700660400005005c7006604000050
04730046046bffe102aa00ee0556fffd0473004a0556fffd0473004a05c7
009e04eb004705c7fffd055600a20473004b055600a20473004b04730096
01c7004204730096025500880473009a02ac008305c7009c0473008705c7
009c04730087063900630473004405c700a102aa008505c700a102aa003c
0556005c0400003f04e300300239002404e300300300002305c700a10473
008305c700a10473008304e300290400002804e3002904000028046800a4
063900600662005504a00048047400480391006204f000440329002e0530
0048046bffe1040000b002eb005208c000330800004f040000990800004f
040000990800004f040000980400009807d5016a05c0009e04ab007204d5
009d04ac007104d5022204d5010505abffe9050001c905ab027e05abffe9
05ab027e05abffe905ab027e05abffe905abffe905abffe905abffe905ab
ffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905abffe9
05ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab
01c005ab01c005abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d50092
0800000007eb013007eb012007eb013007eb012004d500b204d5008004d5
002a082b0198086b01b807550010060000f40600006f0440003a05400037
04c0003f04150040040000250600005505e100bf038d008904d5ffd90180
008002d50086071500610296000f04d5009202d6008302d6008304d500b2
02d600700556fffd0473004a05c700660400005005c70066040000500556
00a20473004b055600a20473004b055600a20473004b0639006d04730042
0639006d047300420639006d0473004205c700a40473008705c7001f0473
00060239ffce0239ffce0239ffe40239ffe40239fff60239fff50239004b
01c700190400003701c7ffa20556009604000088040000860473009601c7
fffa05c7009c0473008705c900a50473008b063900630473004406390063
0473004405c700a102aa006b0556005c0400003f04e300300239000c05c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
078d001905c70006055600060400002101c700890556fffd0473004a0800
0001071d00440639005304e30081023900b9078d001905c70006078d0019
05c70006078d001905c70006055600060400002101c7008a02aaffe10473
001b04cd005a06ac006b06ac002206ac002206ac004a02aa00e202aa006b
02aa00de02aaffea0557ffff0646ffa706b4ffa80312ffa80632ffa706d8
ffa70605ffa701c7ff780556fffd055600960558fffe055600a204e30029
05c700a4023900bf055600960558000b06aa009805c7009c0533006d0639
006305c700a40556009e04f2009404e30030055600060556000906af007f
05fb0061023900040556000604a00048039100620473008b01c7006b0460
0088049a008c04000019038700480473008b0473005c01c7008904000086
04000018049c00a00400001a0395005c04730044048d008303db00560460
00880433001105b4007a063f005701c7ffc9046000880473004804600088
063f0057055700a206eb0032045500a105c000640556005c023900bf0239
0004040000370875000d081500a406d5003104a900a10515000a05c000a0
0556fffd054000a705560096045500a1056b0000055600a20763000704d5
004e05c000a105c000a104a900a10540001206aa009805c700a406390063
05c000a00556009e05c7006604e300300515000a061500520556000905eb
009f05550057075500a1078000a106550000071500a8054000a505c00055
081500a405c7001a0473004a0495005b0440008802eb008804ab00000473
004b055afffb03ab003204780087047800870380008604ab00180580008c
046b00880473004404550088047300870400005003aa0026040000210695
004b0400000f0495008a042b0045066b008d0695008d0500002805c0008b
042b008404150030060000890455001f0473004b0473000002eb00890415
004b0400003f01c700880239000901c7ffa2074000130680008304730000
0380008604000021046b008803e900a1034a008808000041089500a00585
002d000001010000001e0000003100000031000001010000007e0000007e
0000008c0000008c000001010000001000000101000001210310007d0000
008c023300d20000030b0000ff04023900b9048100690456003203310019
0411002d04d1009601f9009b030f005f04ca009b04b8008c01f9009b0413
002803b0005003b4003c04ca009b04cf005001f9009b02d2003c0498005a
043c00190488006e045f007303b1001903d4000a0466009604130028058e
00640524002803f2009b03f2009b03f2009b01e3005a0356005a0686009b
01f9ffac041300280413002803b4ff5703b4ff570448002d058e0064058e
0064058e0064058e00640481006904810069048100690456003203310019
0411002d04d10096024b0000034a000004b8008c024b00000413002803b0
005003b4003c04cf005002d2003c0498005a0488006e045f007303d4000a
0466009604130028058e00640524002801f9009b0456003203b00050045f
0073049b003c0000ffdc0000ff250000ffdc0000fe51028d00ab028d00a0
02da0043034d007901a8ffba000000460000004600000046000000460000
00480000004600000046000000460435017c0435012e043500b704350081
0435012c043500be043500af043500810435009a043500db04350085028d
00c1043500b3060001000600010002420036060001000435009e04350098
043500cb0600010006000100060001000600010006000100000000460600
010006000100060001000600010006000100060001000600010006000100
051bffba06000100060001000600010005b5003a05b5003a01f4ffba01f4
ffba060001000600010006000100060001000481003604350036043dffba
043dffba03e9004a03e9004a067f0014077600140327ffba041effba067f
0014077600140327ffba041effba051b003204b500240300fff706000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010000000030
0000004600000046000000400000004606000100060001000000ffdc0000
fe510000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ffdc0000ff160000ffdc0000ff200000ffdc0473
004a08000000060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000600010006000100028d
007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a80056
01d60010037500320375003201a8002d01d60013051b003204b5002401f4
ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4ffba
024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba02b3
005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba
06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a0036
0435ffba0327ffba064f0027064f00270224ffba021affba04a7004604a7
00460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d0047
040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba0435
00450435004501f4ffba01f4ffba024200360300fff7039affba0327ffba
0375003203750032051b003204b50024051b003204b5002401f4ffba01f4
ffba045a004004ce0049045a002604ce0039045a005304ce004a045a0053
04ce004a0600010006000100000000460000004606000100060001000600
010000000046000000460600010006000100000000480000004606000100
060001000600010000000046000000460000004600000046000000400000
003006000100000000460000004606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d00ca028d00c7028d
00c606000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000100ffba0800ffba1000ffba06dc0063053f004406d5
00a1055b00830000fddc0000fc2f0000fca60000fe540000fcd70000fd73
0000fe290000fe0d0000fd110000fc670000fd9d0000fbf50000fc720000
fed50000fed50000ff02041b00a006ac006b06ac00190000feb60000fd73
0000fe080000fca60000fe530000fd110000fbc80000faf40000faaf0000
fc720000fbaa0000fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb98
0000fdea0000fe840000fdc20000fcf10000fd5f0000fe760000febc0000
fceb0000fd6c0000fd580000fc900000fd150000fc2c0000fc130000fc12
0000fb960000fb9601c700880556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b0239006301c7001f
023900ba01c7007c06390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406390063
0473004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004406dc0063053f004405c700a10473008305c700a104730083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
008306d500a1055b00830556000604000021055600060400002105560006
040000210556fffd0473004a0239ffe201c7ffb0063900630473004405c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
05c700a1047300830000fefe0000fefe0000fefe0000fefe0455fffd02eb
000c07630007055afffb04a900a10380008604a900a10380008605c700a4
046b00880473fffd040000140473fffd04000014055600090400000f0555
0057042b0045055500a10473008706050063047300550639006004730044
05b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4001001f4
001b01f4001001f4006b01f4fff90227ffce0000000f0000fff502aa00a4
02aa00a40000000e00000056000000560000ffcf01a8000f01d6ffbf01a8
fff501d6ffcd01a8001d01d6fff501a8009301d600130375003203750032
0375003203750032051b003204b5002405b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3003202b3003202b3005f02b3005f
02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f02b3
005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba064f0027064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba04a7004604a7004604a7004604a70046093e0032093e
00320740ffba0740ffba067f0014077600140327ffba041effba04cf002d
04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba040d0047040d004701a8ffba01a8ffba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba043500450435004501f4ffba01f4ffba043500450435
00450435004504350045043500450435004501f4ffba01f4ffba04350045
043500450481003604350036043dffba043dffba024200360300fff7031a
001a031a001a031a001a0375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
0032037500320375003203750032051bffba04b5ffba051b003204b50024
01f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba01f4
ffba051b003204b50024067f0045067f0045067f0045067f004501a80028
0000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e08fc
003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000ff9f
018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff580000
ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba045a002a039a00360435ffba0327ffba034d007902b400230242
003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4006d
067f00140776001401f9009b0000fed902bc000003f2009b045afff504ce
fff5045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a04350071043500ad045a
000f04ce000f0473001406110014054000a7047300860540000a0473000a
05c7005105c700660400005005c7fffd067a00140540004a047300460474
00480556006e04d5005304e3ffc40639006d04fe000f070c008701c70083
0239001f055600960400008801c7001504000018072000a405c7ffb80473
008b0639006006f200630557004406090014047300860556009e0556006b
0400004f04f20094030b00440239002404e300140239002404e3003005fb
006105c700a1062e00100400002104e300290400002804e3002904e30031
045c0044045c003f0473003c0473005503ab003203e50024047300870214
00bc034e00bc04ac0072023900b00aaa009e09c7009e08640046087f0096
06aa0096039c008309c7009c078e009c062b0087047300550556fffd0473
004a0000fefe0556fffd0473004a08000001071d00440639006d0473001a
0639006d0473004205560096040000880639006304730044063900630473
004404e30029045c004c01c7ffa20aaa009e09c7009e086400460639006d
04730042084600a404f2009e05c7009c047300870556fffd0473004a0556
fffd0473004a055600a20473004b055600a20473004b0239ff8a0239ff64
023900040239fff60639006304730044063900630473004405c700a102aa
ffcc05c700a102aa006805c700a10473007605c700a1047300830556005c
0400003f04e3003002390024045c0051037e001305c700a40473008705a6
00a404d6005e0486005e04e30029040000280556fffd0473004a055600a2
0473004b06390063047300440000fefd0639006304730044063900630473
004406390063047300440556000604000021047300570473004804730086
04730086040000130400005004730046047300460473005505e9005503ab
004903ab0032050d0032040f00440239ffb9047300420473004204780050
0402001904ef00190473008b047300870473008701c7001901c7005702d9
0044029e0000026e001401c700830493008306aa008406aa008406aa0087
0473ffa60473008b046c00870473004406530044063f00570466004402aa
ffe402aaffe402aaffe402aa008502aa008502aa008502aaffe40455008a
0455008a0400003f01c7ffa20214ffb901c7ff7202cb00000239000f0239
002404730019048c0054046000880400001a05c700060400001804280019
0400002804540028045c004c045c00790400002404000050040000240400
00500639006304400088040f004904780050046b0088032e000004000008
033b008804730048040000240400005007b7004607400046080b004605b3
0024036f002405c00024061c0013054a0083050f008303e2001e04380063
03110064031100640146ffce01eb006401eb000001eb000002ea006403d9
0000029100000187005a02d7005e01c7008001c7006c01c7008a02aa00fb
02aa00fb02ca003202ca003204ac007004ac007004ac006504ac006502aa
012102aa00de02aa005902aa012102aa001d02aa005902aa00de023900b6
023900b602aa00fb02aa00fb02aa00a602aa00a602aa00a602aa001d02aa
ffe202aafffb029400000142006402b8003202a0000002ca003203100096
0310009603100096031000960310009602aa006202aa006202aa002802aa
001d02aa0047045700960457009604570096045700960457004304570043
045700430457004304570043031000430457002f0457002f0457002f0457
002f0457002f0310002f0457002504570025045700250457002504570025
0310002f0457001a0457001a0457001a0457001a0457001a0310001a0457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
00420457002f0457002f0457002f0457002f0457002f0310002f0457002f
0457002f0457002f0457002f0457002f0310002f04570026045700260457
002604570026045700260310002604570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
004204570042045700420457004203100042045700260457002604570026
045700260457002603100026045700230457002304570023045700230457
0023031000230457002f0457002f0457002f0457002f0457002f0310002f
0457004b0457004b0457004b0457004b0457004b0310004b045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457001a0457001a0457001a0457001a0457001a0310001a0457
002404570024045700240457002404570024031000240457002f0457002f
0457002f0457002f0457002f0310002f0457004e0457004e0457004e0457
004e0457004e0310004e045700960457009604570096045700960000fec1
0000fec60000fdac0000fed80000ff920000fee90000ff4c0000fea00000
fec40000ffce0000ff660000fea00000fed80000fed80000ff970000ff98
0000ff990000fff40000ff420000ff420000ff440000ff5f0000fe870000
ffec0000ffa60000ff510000ff510000ff510000fec90000ff1c00000000
0000fee90000ff4c0000ff930000ff2a0000ff560000ffce0000fe870000
febb0000fec40000fec40000fed80000fed80000feb30000fec90000fdad
0000fec80000feb30000fec90000fdad0000fe160000fee60000ffa60000
fe870000ff440000feba0000ff230000ff9a0000fdac0000fe8800000000
0000feb00000ff980000fe930000ffa60000fe870000fe1c0000ff660000
ff440000feb00000feb00000feb00000ff030000ff520000fd1f0000ff53
0000ff530000ff530000feb50000feb50000ffc30000feae0000fedc0000
fec70000fec80000fedc0000fe1e0000ff420000ff510000feb70000feb0
02aa00de02aa005902aa00fa049a007004600000062e001407aa0000062e
0014047b004c063f005704cf0044063900630473004405c7007004000050
04e300a8033b008804ff0000043c0032060d000a049d0042072000a406aa
0084056500630473008b056400a40400000a0556006b0556006b04e00005
04c5001905e5005f046e004403b600140347002804cf00440495005b0400
005001c7ffa2063900600389004d03890050055600a205c000a10473004b
047800870ab4006d04fe00100639001404e70014079900bf05b500880558
000104000006072e00bf0590008806a10078057b007a086d00bf06f00088
04d5006603ab001f065f0039058200480639006004730044066d0009050c
001a066d0009050c001a08980063072c004406aa002004e6001c0987006d
06d000500000fe370ab4006d04fe001005c7006604000050040700140000
fea60000febc0000ff980000ff980000fc2b0000fc4c05c000a104780087
05400004042b00140556009e04730087055d00a40464008804d5004e03ab
003204a900040380000005ef002904490028070900a4052f0088091800a0
06f600880606003e042b002305c700660400005004e3003003aa00260767
00310587002605550057042b004506e4000a0554000a06e4000a0554000a
023900bf07630007055afffb055700a1046800860540001204ab001805c7
00a4046b008805c700a4046b008805550057042b004506aa00980580008c
02aa002e0556fffd0473004a0556fffd0473004a08000001071d00440556
00a20473004b060500630473005507630007055afffb04d5004e03ab0032
04d5004e045c004c05c000a10478008705c000a104780087063900630473
0044063900600473004405c0004a0415002b0515000a040000210515000a
040000210515000a0400002105550057042b0045071500a805c0008b0540
004a0473004607bf004a0703004607a6006606860053054d006604130053
07c3001207470018084600a4070700880639006d0478005005f900300553
00260000ff430000fec90000ff770000ffb00000ff470000ff560000ff74
0000fed70000feac000000000000ff520000ff56000000000000feac0000
fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000ff7f
0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae0000
ff8c000001020000fefe0000fefe0000fedf0000fedf0000ff580000ff20
0000fefe0556fffd0473004a055600960473008605560096047300860556
00960473008605c700660400005005c7009e0473004605c7009e04730046
05c7009e0473004605c7009e0473004605c7009e04730046055600a20473
004b055600a20473004b055600a20473004b055600a20473004b055600a2
0473004b04e300a8023900130639006d0473004205c700a40473008705c7
00a40473008705c700a40473008705c700930473006805c700a404730087
0239ffdf01c7ff9202390020023900060556009604000088055600960400
008805560096040000880473009601c7007e0473009601c7ffb904730096
01c7ffa50473009601c7ffa306aa009806aa008706aa009806aa008706aa
009806aa008705c7009c0473008705c7009c0473008705c7009c04730087
05c7009c0473008706390063047300440639006304730044063900630473
004406390063047300440556009e047300870556009e0473008705c700a1
02aa008505c700a102aa008505c700a102aa005e05c700a102aa00260556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
0556005c0400003f04e300300239002404e300300239002404e300300239
ffff04e300300239000e05c700a10473008305c700a10473008305c700a1
0473008305c700a10473008305c700a104730083055600090400001a0556
00090400001a078d001905c70006078d001905c70006055600090400000f
055600090400000f055600060400002104e300290400002804e300290400
002804e3002904000028047300870239000305c70006040000210473004a
01c7008904a0004804a0004804a0004804a0004804a0004804a0004804a0
004804a000480556fffd0556fffd06820013068200130682001306820013
068200560682005603910062039100620391006203910062039100620391
0062061e0000061e0000076c0000076c0000076c0000076c00000473008b
0473008b0473008b0473008b0473008b0473008b0473008b0473008b068f
0000068f0000081f0000081f0000081f0000081f0000081ffff3081ffff3
01c7008101c7008101c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7
ffa20301000003010000049100000491000004910000049100000491fff3
0491fff3047300440473004404730044047300440473004404730044069d
0000069d0000082d0000082d000007c9000007c900000460008804600088
0460008804600088046000880460008804600088046000880682000007ae
00000812000007ae0006063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a000480391006203910062
0473008b0473008b01c7ffe601c700680473004404730044046000880460
0088063f0057063f005704a0004804a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd06820013068200130682
00130682001306820056068200560473008b0473008b0473008b0473008b
0473008b0473008b0473008b0473008b068f0000068f0000081f0000081f
0000081f0000081f0000081ffff3081ffff3063f0057063f0057063f0057
063f0057063f0057063f0057063f0057063f0057065f0000065f000007ef
000007ef0000078b0000078b0000078bffff078bffff04a0004804a00048
04a0004804a0004804a0004804a0004804a000480556fffd0556fffd0556
fffd0556fffd0556fffd02aa00e502aa00fd02aa00e502aa000602aa0006
0473008b0473008b0473008b0473008b0473008b068200000682000006f3
000006f3000005c700a402aa001302aa001302aa000601c7ffbb01c7ffab
01c7ffca01c7ffca01c7ff9301c7ff930239001a0239fff5036500000365
000002aa001302aa001302aa000604600088046000880460008804600088
048d0083048d00830460008804600088055600060556000606e600000718
0000061e000002aaffea02aaffea02aa0059063f0057063f0057063f0057
063f0057063f005707650000069d000007270000065f000005fb006102aa
00de02aa00e50473000d05c7006605c7006606aa008705c70024095000a1
078d00190556001f04e30030080000290400003004c100660000ff530000
ff530000ff530000ff5301c7001901c7ffa2042b00050556001105740046
02cbffa3057a008702f0ffc8057f000a057f000a02aa008402aa008402aa
00c902aa00c902aa00a002aa005902aaffaf02aa003a02aa0006023900b9
02aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a0000
ff730000ffa50000fed80000ff230000ff720000ff720000fee70000ffa5
0000ff530000ff530000ff530556009e0473008703f8001905fb0019071d
00440440001904000050046900870469001903eb008703ab003201c70088
0361004104000088033600100580008c04780087047300440400001304de
004404de004404de000d078d005003a800440473004404730044042b0084
0455001f0455001f03aa00260460008804c6004405de004404c600440400
001a05c700060400002803ab0032036b003f04db001f02eb00880400001a
04550088042b008405b4007a04ab001803a00000054f0000035100320351
ffd103980032034800320348003203f80032036e0032015600690284002d
0366003202d000320415003203710032036f003204180032030f00320359
0032039c003203760031036f003204fb000002fa003202fa003203040032
04cc0032030500640305003202f9003202f90032028c0032028c00320304
00320142006402b6006404950064030f00640305003202d5003203050032
030500320306006401c20032030f00640342003204950064029200000320
00000315006402920000030600320385003202bf00000142006401eb0064
030f0064029200000315006402920000030900320385003202bf000005ed
00460a660046061300460689ffba0541ffba01e9003c045a00110000ff0d
0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e0000
feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039affba
0327ffba05ad0069053d002d05fd009604dc005004e0003c05f6009b053f
00280650002804ac00720000fe3b0000fe660000fe660473fffc02aa0053
02d5ffce01a8ffba01a8ffba01a8ffba01a8ffba0658001509c500470400
000008000000040000000800000002ab0000020000000155000004730000
02390000019a000000ab00000000000005e5000305c7006606aa00980580
008c0744008307180046071800480556fffd05c70066040000140473000a
04e300300400004f0400002804a5001d000001020000ff420000febf0000
ff3a0000ff53048d000a05c7005105c7006605c70051045500a102eb0088
0000ff430000ff040000ffac02d200960000ff37021affba0250001e0000
ff3a0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a
05b5003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3003202b3003202b3
005f02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba
045a002a039a00360435ffba0327ffba045a002a039a00360435ffba0327
ffba045a002a039a00360435ffba0327ffba064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba02b4002302b400230327ffba0327ffba02b4002302b4
00230327ffba0327ffba043500450435004501f4ffba01f4ffba04350045
0435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d
0047040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0473ff93047300460239ffbf06aa
ffd50473ffb70473ff9102aaffa402aaffa40400ffff0239ffb904000028
04730089030b0064047400480649002401c7001901c700190473001e0460
001e048c000a04730086047300460239001305b400420400008801c7fffc
06aa00870473008b0473008702aafffb0400003f0318ffa20400001a0400
000f040000280473004a04730048047300460473004b03ab004903ab0032
0534005501c700880400001301c7ffa204730083045c004c0304006402d5
003202c9003302fc0032028c003201d5003201d500000304003203110064
01420019014200640142006401420019022a000001420064014200090233
00640493006404930064030fffc9030f0064030e00640305003203000032
02b800320142ffca01c20032030f001d031a00320306006402d400640292
000002de003202de003202de003202f4003202ea00320000febc0000febc
0000ff730000fea9023900b902fa003202f900320305003202a0000002f9
00320639006d0556fffd0473000f05c7006602aa004104a0004804a00048
04a0004804a0004804a0004804a0004804a0004804a0004801c7ff9b01c7
ffab01c7ff9b01c7ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb04600088
0460008804600088046000880460008804600088046000880460008801c7
ffab01c7ffab01c7ffbb01c7ffbb04600088046000880460008804600088
045a005304ce004a03a000130556001105c700290558000b055600a20473
004b0400003301c7ffa205e600630473004805c7000002aa000f05560006
0400002104000013040000500400001301c700830455fffd02eb00010556
00090400000f055600090400000f04d5005303ab00490540001204ab0018
0000fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff720000
ff730000fee7078b000a03eb004c040000130473000a01c700150473fff4
0556001105c700a1047300190239ff8b05c700a404730087055600960400
008804e30029040000280400003b049e00a403670088053000480000ff53
0000ffbc0000fefe0000fefe0000fea40000fea401c7008805c900a505c7
009c05c900a50000fecd0000ff480000fec90000fece0000fec50000fed0
0000fed10000feee0000fed60000fedc0000fdd90639005804730048078d
001905c70006059f00a40000feb905dc006304c60009084c001906ba0006
023900b9038000720187005a0187005a0400009904000099023900b00239
00b0023900b002aa001904e30030000000000000002a0000002a0000002a
0000002a000000d60000017e00000320000005a60000074e000009380000
097e000009fe00000aa400000b8400000bec00000c6400000caa00000ce6
00000d5600000f1200000fee00001218000013f2000015520000170c0000
18e20000198e00001c2200001e5600001eb200001f7000001ff200002062
000020e8000021da000023da000025840000271c000028560000299e0000
2a6200002b1800002ca800002dae00002e9200002f7a000031b00000323a
000035640000370e000038420000394800003b3c00003da8000040520000
41000000422400004398000045d6000048e200004a8800004bc800004c32
00004c9c00004d0000004d8800004dbc00004e380000510a000052e80000
549c000056500000580e0000596200005b5200005cf600005dea00005f02
0000619a00006296000064c60000668c0000684e00006a1200006ba80000
6cae000070560000717a0000731800007536000079a000007bc400007e1c
00008004000081020000814e00008250000082f00000833c000083700000
83ac000083ee000084540000849a000084ce000085040000853a0000858a
000085cc0000861e00008656000086a8000086de0000871e000087600000
879e000087e800008828000088560000888e000088de0000891400008954
0000898e000089d200008a1c00008a5800008a8800008acc00008b040000
8b9400008c1a00008e2800008fbc0000916c000091b80000924c00009470
000096c4000098b4000099a000009a2200009a8c00009baa00009d060000
9f4e0000a0b00000a13e0000a1e80000a2ac0000a3f40000a59e0000a68c
0000a7520000a7b60000a8240000a94e0000aa720000ab020000ace40000
af3e0000b2900000b3860000b42c0000b47c0000b5320000b6520000b7f0
0000b88a0000b94e0000ba0e0000ba760000bab20000bb0a0000bb580000
bd700000bfb60000bfee0000c0200000c14a0000c2760000c3240000c3c8
0000c46a0000c53c0000c5900000c5c60000c61e0000c7700000c7e20000
c83c0000c9b40000cb200000cc000000cc320000ccce0000cdf20000d068
0000d0a20000d0e60000d1220000d1840000d1c60000d20c0000d2580000
d28a0000d2de0000d31c0000d34c0000d38a0000d3d00000d4120000d450
0000d4d20000d5400000d6260000d6620000d6e20000d7160000d7b80000
d8400000d8ac0000d90e0000d97a0000da660000db580000db8c0000dbc0
0000dbf00000dc340000dcac0000de260000e0400000e0720000e0ac0000
e1a60000e3340000e36a0000e4ce0000e54a0000e62a0000e7200000e8b0
0000ea1a0000ec080000ed040000ed4a0000ed7e0000edc00000edfa0000
ee4e0000ee960000eee00000ef100000ef400000f1280000f1660000f18e
0000f1be0000f1f20000f2180000f23e0000f2860000f43c0000f5b60000
f5dc0000f6020000f6460000f6760000f6a60000f6fc0000f7da0000f8ec
0000f9300000f9680000f9c20000fa000000fa340000fa640000faa00000
fae00000fb1e0000fb5a0000fb9c0000fbd20000fc0e0000fc4e0000fc74
0000fc980000fce80000fe440000fe9a0000fece0000ff1c0000ff680000
ffaa0000ffe20001001800010060000101020001029e00010466000105e8
000107da0001092c00010ab000010b9200010d2c00010d9600010dbe0001
0e5c000110de0001111e0001115e0001119e000111dc0001123a00011298
000113060001132600011410000114b0000114e6000115340001157e0001
15c8000115e40001160000011620000116400001166000011680000116a6
000116cc000116f200011718000117480001177000011798000117c40001
17f0000118240001184e0001187a000118b0000118da000119060001193c
0001196600011990000119c4000119f400011a2800011a6c00011a9c0001
1ad000011b1200011b4600011b7800011bba00011bee00011c1e00011c60
00011ca400011cea00011d4600011d6200011d7e00011d9a00011db60001
1dd200011f40000121ec0001245c0001247800012492000124ae000124ca
000124e6000125020001255e0001259800012602000126cc0001276c0001
2842000128c20001294a000129ba00012a5000012aae00012af400012b52
00012bb400012c6c00012d2a00012d5600012db200012df600012f620001
3056000130800001309c000130c8000131000001314c0001318c000131c0
000131f0000132200001325000013294000132c4000132f4000133340001
336400013394000133c400013404000134340001346400013494000134ba
000136be000136ee0001371e0001386e00013a2400013a5400013a820001
3ab200013ae000013b1000013b3e00013b6200013b8600013bb600013d26
00013d5e00013d8e00013f2000013f4e00013f7c00013faa00013fd20001
4130000142c800014300000143400001437c000143ac000143da000143f6
000144260001445600014546000146ae000146de00014718000147580001
4788000147b8000147fa000148200001484600014886000148c6000148f6
0001493600014a2000014aa000014b8400014bb400014be400014c140001
4c4400014c8000014cb200014ce400014d1400014d4400014d8a00014dbc
00014dec00014e2200014e9400014ec80001509600015198000153280001
5558000157a80001593a0001599e00015a2800015a3800015ac600015cc4
00015df000015f5c0001604c000161d0000163ea00016616000167080001
671800016728000168400001685000016860000168700001688000016890
000169ae000169be000169ce00016a4200016a5200016b2200016b320001
6c4400016c5400016c6400016c7400016dd200016fb000016ff200017028
0001705e0001708e000170be000171120001713a000172c40001740c0001
7560000176c80001784c000178b000017a4200017b5e00017b6e00017b7e
00017d0400017d1400017e7a00017fd40001810800018266000183d40001
859a000185da00018612000186480001866e0001869e000186c40001883a
0001886a000189a0000189b0000189c000018a0200018a1200018ba60001
8d5200018edc00018f0400018f3400019090000190a0000191d8000191e8
00019282000193e2000193f200019658000197e20001994a0001997a0001
9af000019c2200019c3200019c4200019c5200019d2c00019d3c00019d4c
00019d5c00019e5400019fce00019fde0001a1060001a23a0001a38c0001
a5200001a63e0001a7ca0001a8dc0001a9120001ab480001abe80001abf8
0001ad8e0001af300001afb40001b1360001b1460001b3ae0001b52e0001
b6ae0001b6de0001b87e0001ba040001bbc80001bcf40001bd040001be34
0001be440001be540001bf140001bf240001c10a0001c11a0001c2500001
c35e0001c50a0001c6c00001c8020001c9720001caba0001cb0c0001ccee
0001ce6a0001cea80001d04e0001d0720001d1b20001d1c20001d1d20001
d20a0001d21a0001d3a60001d50e0001d6820001d6a60001d6d60001d844
0001d8f60001d9b40001d9e20001db980001dc900001dd1e0001de440001
def20001dfc60001e0100001e0880001e1480001e1700001e1b40001e20a
0001e2e60001e3300001e3640001e38c0001e3b40001e3e80001e42c0001
e4700001e4ae0001e5ec0001e6a40001e7c40001e83a0001e9080001e95a
0001e9ec0001ea9c0001eb900001ebe40001ec7a0001ed380001ee220001
eed40001eff40001f0460001f0f00001f2260001f2fe0001f3e40001f4ea
0001f5d00001f6b20001f7a60001f8440001f94a0001fa440001fabc0001
fb340001fbaa0001fbe00001fc3c0001fd040001fd900001fdc80001fe0e
0001fe3e0001fea80001ff680001ff9c0001ffcc00020000000200300002
0060000200900002023000020268000202a8000202e000020318000203b4
000204ae000204de00020582000205b0000205f000020640000206700002
06bc00020854000209ba00020b1a00020b6000020bb400020bec00020d5e
00020d9400020e2600020e6400020e9200020ed000021000000210280002
1164000211f40002129e00021320000213dc000214f40002160200021636
000216bc000218180002189a000218e4000219ee00021a3600021b3a0002
1bb600021c0e00021c9200021d7c00021e9200021f8e0002203800022128
000221fa000222e4000223cc0002247c000224fe0002275c000227860002
27b00002286800022892000229d400022ada00022bc400022bee00022c18
00022c4200022c6c00022c9600022e1600022e4000022e6a00022e940002
2ebe00022ee800022f1200022f3c00022f6600022f9a00022fc400022fee
0002301800023192000231a2000232bc000232cc000232f6000233200002
334a000233740002351e0002373a0002386800023878000239f400023a04
00023b4a00023d1600023e1c00023f9c0002413c00024360000244ba0002
469c000247e00002490e000249fc00024a2600024a5000024a7a00024aa4
00024ace00024af800024b2200024b4c00024b7600024ba000024bca0002
4bf400024c1e00024c4800024c7200024eae0002502a0002516e00025356
0002549e000254c8000254f20002552200025552000255a2000255f20002
5632000256a4000256f800025756000257ac000257e2000258240002586a
000258b4000258e40002591c0002594c00025a8400025dca00025df40002
5e1e00025e4800025e7200025e9c00025ec600025ef000025f1a00025f44
00025f6e00025f9800025fc200025fec00026016000260400002606a0002
6094000260be000260e8000261120002613c0002616600026190000261ba
000261e40002620e00026238000262620002630000026316000263400002
6620000266300002674a0002686c000269aa00026aec00026c9200026ca2
00026de400026f3400027124000272f80002741000027420000274a20002
75300002763000027640000276e0000276f0000278060002795800027a88
00027a9800027b6600027b7600027cec00027cfc00027e1000027e200002
7f54000280ea000281a6000281b6000282b40002840e0002849a000284aa
000285d4000287600002881c0002882c000288c8000288d8000289a60002
89b600028a8e00028a9e00028ba600028bb600028d7c00028d8c00028ee4
00028ef40002915e0002916e0002936800029378000294e2000294f20002
95e2000295f20002978a0002979a000298b8000298c800029a0800029a18
00029a2800029a3800029bb000029bc000029bd000029be000029d320002
9e8000029f4e0002a0320002a1b20002a3340002a4340002a5480002a68c
0002a69c0002a78a0002a8640002aa000002aa100002ab2e0002ac340002
ae320002ae420002ae520002ae620002afac0002afbc0002b0740002b084
0002b1920002b1a20002b28e0002b29e0002b3bc0002b3cc0002b46a0002
b47a0002b48a0002b5780002b6ec0002b8180002b9120002b9220002b932
0002b9420002bae00002bc9a0002bd680002bd780002bfd80002c21e0002
c4a40002c7080002c98c0002cbfe0002cdce0002cf840002cfae0002cfd8
0002cfe80002cff80002d0220002d04c0002d0760002d0860002d0960002
d0c00002d0ea0002d0fa0002d10a0002d1340002d15e0002d1880002d198
0002d1a80002d1b80002d1c80002d1d80002d1e80002d2120002d2220002
d2320002d25c0002d2860002d2b00002d2da0002d3040002d32e0002d358
0002d3820002d3ac0002d3d60002d4000002d42a0002d4540002d47e0002
d4a80002d4d20002d4fc0002d5260002d5500002d57a0002d5a40002d5ce
0002d5f80002d6220002d64c0002d6760002d6a00002d6ca0002d6f40002
d71e0002d7480002d7720002d79c0002d7c60002d7f00002d81a0002d844
0002d86e0002d8980002d8c20002d8ec0002d9160002d9400002d96a0002
d9940002d9be0002d9e80002da120002da3c0002da660002da900002daba
0002dae40002db0e0002dbae0002dbf20002dc680002dc920002dcbc0002
dce60002dd100002dd3a0002dd640002dd8e0002ddb80002dde20002de0c
0002de360002de600002de8a0002deb40002dede0002df080002df320002
df5c0002df860002dfb00002dfda0002e0040002e02e0002e0580002e08c
0002e0c00002e0f40002e2860002e4220002e5be0002e74a0002e7900002
e7d60002e8440002e8a00002e8f20002e9620002ea3a0002eb060002ebde
0002ecaa0002ed4a0002ee640002ef180002ef9a0002eff40002f0340002
f1520002f29c0002f4340002f4900002f4ee0002f54a0002f5a60002f65a
0002f7100002f7bc0002f8680002f9140002f9cc0002fa840002fb3c0002
fb4e0002fb600002fb720002fb840002fb960002fc040002fc720002fd2a
0002fd3c0002fd4e0002fd600002fd700002fd820002fd940002fda60002
fdb80002fdca0002fddc0002fe8a0002ff360002ffe40003009000030128
000301620003018c000301b60003020a0003025c000302d8000303220003
039e000303f200030476000304c80003053e00030596000305fc00030652
000306ac0003072a00030776000307d40003083800030886000308d40003
092c000309740003099e000309cc000309f200030a2600030a5600030a86
00030ad800030b4600030b9c00030c1000030c6400030cd800030d1e0003
0d8600030dcc00030e2800030e5800030e9200030eb800030ee800030f0e
00030f3400030f6600030f9600030fe80003104e000310a40003110a0003
115e000311cc0003120e0003126e000312b0000312fc0003133600031372
000313ac000313e80003141c0003144e0003147e000314ae000314d80003
14fe000315280003155600031580000315cc000316100003164600031682
000316b6000316e400031722000317520003178c000317b6000317e40003
180a000318300003185c000318b8000318e8000319180003194800031980
000319b4000319e200031a1200031a4200031a7200031aa200031ad60003
1b2c00031b6000031bc000031bf400031c4c00031c8000031cdc00031d7a
00031e4800031f6800032030000320c000032156000323420003253e0003
26b600032832000329dc00032b8e00032c7600032dac00032ea400032fb6
000330d40003320a00033374000334e200033678000337f4000339040003
391400033a4000033b7c00033cbe00033e4200033f1c00033f9200034048
000340ee0003425e0003429600034310000343d20003448c000344f40003
45fa00034730000347fc0003495a000349d400034a4e00034b1a00034bd4
00034c8800034ce400034d3e00034d8600034df600034e7200034ebc0003
4ef600034f3c00034f8000034fd200035024000350a6000351280003516a
000351aa000351e0000352160003524400035272000352a6000352da0003
531c0003535e0003539a000353d6000354100003544a0003547c000354ae
000354e0000355120003554c00035586000355c80003560a0003564c0003
568e000356dc0003572a0003576c000357ae000357ee0003582e00035868
000358a2000358ee0003593a00035978000359b8000359fe00035a440003
5a8000035ad600035b1200035b4e00035b8e00035bce00035c0a00035c46
00035c8600035cc600035d0a00035d4e00035da200035e3000035e720003
5eb400035f1c00035f8400035fb600035fe80003602000036058000360ee
00036184000361ce000362180003625400036290000362e60003633c0003
6386000363d00003642800036480000364c0000365000003653800036570
000365ba000366040003664200036680000366c200036704000367580003
67ac000367f2000368380003687e000368c40003691a00036970000369c6
00036a1c00036a6800036ab400036b0000036b4c00036bc000036c340003
6ca800036d1c00036d5a00036d9800036dd600036e1400036e5200036e90
00036ed400036f1800036f6400036fb0000370100003705c0003709a0003
70e8000371f80003724800037298000372d0000373080003735e000373b4
000374280003748c000374ce0003751000037566000375b4000376000003
764c0003768c000376cc000377140003775c000377c8000378220003785a
00037892000378d200037912000379e200037ade00037b9e00037c8c0003
7ce200037d3800037d8a00037dde00037e4200037ea600037efc00037f52
00037fc80003803e00038080000380c20003810400038146000381880003
81ca0003822000038276000382c80003831c000383a400038426000384c6
00038568000385a6000385e4000386220003865e0003869c000386da0003
871800038754000388380003892400038a3a00038b5600038c2000038cea
00038de400038ede00038fdc000390da000391f8000393160003943c0003
95620003966400039766000397f80003988a000398c80003990600039960
000399ba000399f200039a2a00039b3a00039b4a00039b9200039bda0003
9c3200039c8a00039cbc00039cee00039d3000039d7200039dac00039de6
00039e2a00039e6e00039ee600039f6000039ff00003a0340003a0740003
a0f60003a1780003a2d00003a2e00003a32e0003a37c0003a3b80003a3f4
0003a43a0003a4800003a4ce0003a51c0003a56c0003a5bc0003a6180003
a6740003a7ea0003a9520003a98a0003a9c40003aa100003aa5c0003aaae
0003ab000003ab520003aba80003abe40003ac200003ac760003acca0003
ae020003aea20003aef00003af300003af6a0003b1000003b3840003b448
0003b5de0003b73c0003b80a0003b9b00003bc040003be3c0003be820003
beb40003bf5e0003c0820003c0a60003c1400003c24c0003c35c0003c46c
0003c57a0003c7000003c7320003c7d40003c7fc0003c85e0003c8c00003
c9220003c9840003c9c20003ca000003ca3a0003ca740003caa00003caec
0003cb260003cb600003ccbc0003ce100003ce200003cede0003d0140003
d0720003d18a0003d3180003d3be0003d5040003d5420003d5800003d5be
0003d6120003d63a0003d6940003d6f80003d7400003d7a20003d8020003
d8740003d8f00003d96c0003d9ee0003da7a0003db060003db900003dc10
0003dc4a0003dc860003ddea0003deb40003dee40003df140003e04c0003
e19c0003e1ac0003e29a0003e36e0003e4660003e55c0003e6de0003e838
0003e8480003e9600003ea0c0003eb4e0003eca40003ed000003ee5e0003
eeec0003f0920003f2040003f3180003f3500003f3b40003f5640003f6ce
0003f7300003f8980003f99e0003fa540003fb000003fc280003fd160003
fdf60003ff36000400620004017c000402ec000404660004047600040556
0004064c000406fc000407f8000408a4000409ae00040a9a00040b620004
0c8600040d8a00040eb800040ff600041162000412980004142c000415d4
000416cc000417e00004191200041a0400041a3c00041a9200041b400004
1b5000041bb200041c0e00041c7400041cc000041d0000041d3800041d64
00041d9200041dcc00041f0200041f3600041fba00042070000420a00004
2124000421540004218c00042324000424b0000424fa000425340004258a
000425d6000425fc0004262200042664000426a6000426e8000427180004
275000042786000427bc000427fe0004282e0004285e0004295400042a58
00042a8c00042ac400042b0a00042b3e00042b6e00042ba600042bda0004
2c0e00042c3e00042c6e00042ca400042cda00042d0a00042d3a00042d6e
00042da200042dd200042e0200042e3c00042e7000042ea200042ed40004
2f0800042f3c00042f6c00042f9c00042fca00042ff80004310600043272
000433a6000434da0004350a00043544000435de00043748000438a40004
396800043a7c00043aac00043ae000043bd800043d8800043de000043e58
00043f9400043fd20004404400044074000440a4000440de000441660004
4196000441c600044356000444a0000445ac000446ba000447e60004493c
00044a9800044bf800044d3200044ea40004500400045014000451ca0004
52f20004538c000455140004552400045620000457a6000458fe000459b0
00045a8000045b8c00045c3600045c8400045cd400045d8400045e2a0004
5ea600045ff6000460ea000461e0000462ec000463c40004649e00046532
00046644000467d4000468f2000469e800046a9200046b3c00046c060004
6cae00046d8400046e0000046e5e00046fc0000470f40004729000047352
000474520004752c0004766a00047716000477e0000478d00004799e0004
7a7a00047b8000047cb800047da800047e4600047f38000480a8000481f2
0004845e00048530000485e4000486b2000487a6000488e4000488f40004
8a2800048b3a00048b4a00048c5600048d8600048dda00048f4e00049076
0004918a0004933c00049550000497e40004999e00049aca00049caa0004
9e6c00049ffe0004a0ca0004a2660004a2dc0004a38a0004a4660004a4f2
0004a5940004a6360004a71a0004a8520004aaae0004abf60004ac060004
ac160004ac780004acd60004ad380004add60004ae6e0004af720004b060
0004b0700004b0800004b11a0004b1b40004b1f00004b26c0004b2e00004
b3360004b36a0004b3f00004b47c0004b4f40004b5520004b5ec0004b67e
0004b6fe0004b7800004b8140004b8480004b8aa0004b95c0004bb220004
bb5a0004bd360004be4a0004be5a0004be900004bed40004bf180004bf5c
0004bf920004bfc40004c0060004c0a20004c0f80004c19e0004c2160004
c29c0004c30c0004c36e0004c3f40004c4540004c4be0004c5320004c5a2
0004c6000004c6a60004c73e0004c7aa0004c83a0004c8980004c9060004
c9ae0004ca5a0004caf00004cb5a0004cbdc0004cc400004ccec0004cda4
0004ce500004cede0004cf3a0004cfa60004cffc0004d07e0004d0fc0004
d1820004d20e0004d2680004d2d40004d3440004d3b40004d4240004d4a8
0004d5380004d59e0004d6180004d6940004d70c0004d7b20004d84e0004
d8de0004d93c0004d9da0004da560004dae80004db8a0004dc340004dccc
0004dd280004dd7e0004dde60004de8c0004df340004dffe0004e0a40004
e1060004e15e0004e1be0004e24c0004e2d20004e3600004e3c00004e424
0004e48e0004e4f60004e55e0004e5dc0004e6640004e6f80004e7640004
e7cc0004e8300004e8d80004e9920004ea400004eace0004eb2c0004eb98
0004ec080004ecae0004ed580004ee1a0004eebc0004ef200004efb00004
f0220004f0b20004f1300004f1ac0004f2180004f2a60004f3020004f360
0004f3e60004f4620004f4ca0004f52e0004f5820004f5f00004f6580004
f6d60004f74c0004f7c60004f8460004f8a20004f9080004f96c0004fa0c
0004faae0004fb640004fc140004fc700004fce80004fd460004fdd00004
fe680004fef80004ff5e0004ffbc0005004a000500bc00050150000501e8
00050258000502c8000503400005039e000503fe00050478000504d20005
05320005058c000505e800050650000506de000507140005074c000507d8
0005080200050844000508d8000509c600050a5600050a8c00050adc0005
0b4e00050bfa00050c8c00050ce400050d3e00050d9600050df000050e74
00050efa00050f9e0005104600051084000510f400051188000512200005
12b60005136000051392000513e2000514360005147c00051520000515aa
0005163000051690000516d400051722000517c200051852000518f20005
199800051a3e00051b0200051b3400051b5e00051be400051c9400051cc6
00051cee00051dbc00051e1a00051eb400051f0200051f68000520100005
207e000520e400052170000521e2000522580005230c00052366000523d6
0005241200052464000524ea0005254a000525ee000526ce000527f60005
2986000529e200052a3800052d5e00052df800052e5400052e9c0005300a
0005315c000531a2000532b0000533480005345600053560000536020005
36ea0005377c000538180005390a00053a0a00053a8600053b0c00053b54
00053c8400053dc000053ea400053ef400053f28000540160005413e0005
42d8000544080005451e000545e2000546fe0005476c0005480000054940
000549f600054b6000054c9000054dc200054eee00054f9a000550600005
51320005528c0005540c0005553c00055658000558120005596400055a50
00055b2c00055bee00055d5800055ea800055eb800055ec800055ed80005
5f900005604600056082000560b8000560f000056126000562ba000564ce
000565b8000566ce00056846000569b400056a6e00056b3000056c140005
6d0c00056eaa00056ffe000571ec000573b20005758e000577260005780e
000578ea00057a3200057bb400057c9c00057db600057df800057e420005
7fa000058116000582880005838000058560000586fc00058780000587b0
000587fc000588c40005899400058b2800058bb000058c1800058c6a0005
8cbc00058e6e0005909e000591d4000593b600059492000595ac00059758
0005996400059a6600059b5200059d4400059f4c0005a0b80005a23c0005
a39c0005a50a0005a5980005a6280005a7420005a84e0005a9f60005ab50
0005ad400005af0a0005af9e0005b03a0005b0d00005b1580005b23e0005
b3160005b4b00005b6420005b7a80005b8cc0005b8dc0005b90c0005b93c
0005bab60005bc580005bd020005bde40005bea40005bf4e0005bfe80005
c0ca0005c1880005c2640005c41a0005c5540005c5e00005c6100005c640
0005c6740005c6a80005c6b80005c6c80005c6f80005c7280005c75c0005
c7900005c7c40005c7f80005c82c0005c8600005c9da0005c9ea0005ca1a
0005ca4a0005ca820005cab60005caea0005cb1e0005cb520005cb860005
cbba0005cbf20005cc280005cc580005cc980005ccd00005cd180005cd5e
0005cd920005cdc60005ce000005ce380005ced80005cee80005d03a0005
d2020005d3a80005d5520005d69e0005d7b40005d8c20005d9d80005dad2
0005dbba0005dcdc0005ddd80005deb00005dfa00005e05c0005e10e0005
e1d80005e24a0005e2f00005e3800005e3e40005e4f20005e5580005e606
0005e6fc0005e7640005e7cc0005e87c0005ea560005eb5a0005ebda0005
ec180005ecc40005ed520005ee3a0005eed20005ef380005f0360005f0f8
0005f1b20005f1f00005f2800005f3820005f4160005f45a0005f5780005
f6a20005f8840005fa460005fb7c0005fcaa0005fdaa0005fdd20005fdfa
0005fe300005fe620005fe8e0005feb60005fede0005ff0c0005ff6a0005
ffd80006001000060048000600780006009e000600d2000601080006012e
0006015400060182000601b0000601dc000602520006027a000602dc0006
0302000603280006034e00060374000603a4000603d4000604040006043e
0006046e000604a4000604d4000605060006052c00060552000605860006
05bc000605ec0006061c00060642000606680006068e000606bc000606f0
00060776000607ba000607f4000608280006086c000608a6000608e00006
0906000609300006097c000609be000609e400060a1200060a3800060a5e
00060a9e00060ad000060b0000060b3000060b5600060b7c00060bac0006
0bdc00060c0200060c2800060c4e00060c7400060c9a00060cc000060ce8
00060d7000060d9a00060e0e00060e3600060eac00060ed400060f360006
0f6800060f9a00060fca0006100200061034000610620006109c000610c4
000611240006116600061196000611c2000611f2000612220006124a0006
12720006129a000612fc0006132400061382000613c60006140a0006143a
0006147000061496000614be000614e40006150c000615320006155a0006
1582000615ac000615d2000615f80006161e0006165000061678000616fe
0006172800061792000617c2000617f2000618180006183e000618960006
18c6000619020006192c0006195c0006198c000619c0000619f400061a24
00061a6400061a9e00061ae600061b0c00061b3200061b5800061b7e0006
1ba400061be400061c2400061c6000061c9000061cc000061cf000061d20
00061d5800061d9000061dd000061e1000061e4a00061e8400061ec00006
1efe00061f4800061f9200061fd80006201e00062060000620a2000620d2
00062102000621360006216a000621a4000621de0006222a000622760006
22ce000623260006237e000623dc0006240c0006243c00062472000624a8
000624de0006251a0006254e00062582000625d60006262a0006267e0006
26d2000627260006277a000627d20006282a0006285800062886000628b8
000628ea0006293000062976000629a8000629da00062a2c00062a840006
2ac800062b0c00062b5000062b9400062be800062c3c00062c6c00062c9c
00062cd200062d0800062d4600062d8c00062de000062e2a00062e7c0006
2ece00062f2e00062f8e00062fbe00062ff00006302a00063064000630b6
0006310a000631540006319c000631de0006324800063296000632e20006
3314000633460006337a000633ae000633e40006341a000634580006348e
000634c0000634fc00063552000635a80006360600063664000636ba0006
37100006374400063774000637b8000637ee0006381e00063862000638a0
000638d8000639100006394600063982000639b2000639ee00063a2e0006
3a7400063abe00063b0a00063b5600063bac00063c0200063c5000063c9e
00063cec00063d3c00063d9800063df400063e4c00063ea400063ef80006
3f4c00063f8e00063fd00006401800064060000640a8000640f60006413a
0006417e000641e40006424a000642b0000643160006437c000643e20006
444c000644b6000644fe000645460006458e000645d6000646220006466e
000646c20006470e00064752000647a00006480800064870000648e00006
4950000649b800064a2000064a6000064a9e00064ae800064b1200064b58
00064b9000064bde00064c0e00064c3e00064c7a00064cae00064cd40006
4d2800064d6600064dba00064ea000064fc80006500a0006503000065086
000650b6000650f8000651400006518e000651d8000652280006524e0006
53360006541a0006556c0006559a000655c80006565c000656e200065710
0006579a000657ca000657fa00065848000658960006597a00065a560006
5b9a00065bca00065bfa00065c9000065d1800065d4800065d7800065da8
00065e3800065e6800065e9800065eea00065f3200065f880006601e0006
60b60006612a0006617c000661a6000661fc000662300006627a000662b2
00066302000663400006638c000663b20006642e00066480000665920006
679c0006695000066ad200066c4400066ee6000671b600067376000674bc
000677160006785800067a6e00067ac000067b1000067b6600067bbc0006
7c1e00067ca600067ef40006808600068292000683ae00068562000686e4
000687a400068886000688ee00068950000689c600068a2e00068ada0006
8b4a00068bda00068cee00068db200068dfe00068e9400068f4000068fe4
0006908e000690d80006911a00069190000691f800069288000693360006
93a0000694040006946a00069524000695ba00069618000696420006966c
0006967c0006968c0006974e0006985200069a5c00069bb200069bc20006
9c7200069d5600069db600069dc600069e2200069e8000069fa00006a08e
0006a09e0006a0ae0006a0be0006a0ce0006a1b40006a2b40006a48c0006
a6480006a74e0006a7c80006a8420006a8f40006a9040006aa120006aa22
0006aa320006aaf40006ac280006ad140006ad240006ad340006ad440006
aeaa0006b0160006b1420006b1520006b1620006b1720006b1820006b264
0006b2740006b3d60006b4e00006b5de0006b7160006b7e80006b8660006
b8e40006ba040006ba800006bacc0006bb580006bc6c0006bcc00006be02
0006bec20006bf8e0006c0840006c18e0006c2400006c3a60006c40c0006
c4d00006c6d20006c8600006c9de0006cb0e0006cdc00006cf020006d030
0006d1a80006d3200006d4a00006d62e0006d7e00006d84e0006d9b20006
daea0006dbee0006dd240006de560006df260006dff60006e1520006e22c
0006e2cc0006e3d00006e4fa0006e5f80006e7780006e8e20006ea200006
eb980006ece40006edc60006ee2e0006eed00006ef700006f06e0006f1d6
0006f3100006f4a40006f5ee0006f6d20006f7300006f8360006f8cc0006
f98e0006fa340006fa740006fc200006fcf20006fdb80006fee000070080
0007018c000701e40007037c0007040a0007041c0007044c0007047c0007
04b4000704ec000705220007055e00070594000705d00007073e00070788
00070822000708ba00070934000709b800070a1e00070aca00070b160007
0c3600070cec00070dc200070dfa00070e3800070eac00070fa6000710c4
000711c6000712080007124a000712b8000712c8000712d8000712e80007
12f800071308000713180007132800071338000713480007135800071368
00071368000714ec000714fc000715bc00071682000717b8000719ae0007
1bb000071dac00071fe2000721e20007224e00072360000724f20007264a
000726fc00072740000727de0007290e0007295e000729f400072b300007
2b4000072cf600072e2a00072e7a00072ed000072f9200072fd600073018
0007309e000730fc000731ee0007327c000732b20007332c000733a40007
33f400073500000735f6000736a0000736ca000736f40007371e00073748
00073788000737c8000738000007383800073882000738cc0007390c0007
394c00073996000739e000073a2000073a6000073aba00073b1400073b4e
00073b8800073bcc00073c1000073c5400073c9800073cec00073d400007
3d8c00073dd800073e1600073e5a00073eaa00073efa00073f5400073fb2
00073fdc00074006000740a00007413a0007417e000741c2000742d80007
42e80007433000074378000743ca0007441c00074486000744da00074526
000745840007460e00074672000746b60007470000074768000747b20007
47f20007483a00074876000748b2000748ee000749280007496a000749ac
000749ec00074a2c00074a7600074ac000074b1600074b6e00074bbc0007
4c0a00074c4c00074c9a00074cdc00074d2600074d6800074dac00074e08
00074e6400074eb000074efc00074f4600074f9000074fce0007500c0007
508a00075108000751420007517c00075216000752b00007538400075458
000754b40007551000075584000755f80007575600075766000758500007
586000075896000758cc00075906000759400007597c000759b8000759fe
00075a4400075baa00075d6000075eac0007606a000761e0000763880007
64b8000765be000767dc0007692000076ab600076c3e00076cbc00076e00
000770080007709c0007713000077284000773ae00077528000776680007
77d4000778c200077a8c00077c2000077ca200077dd400077ebe00078026
00078108000782be000783b0000785120007864e00078742000789060007
8a8e00078c3200078d9600078f32000790f0000792760007931200079486
0007957800079660000797e00007993200079a5200079bea00079dc00007
9f4e00079ff80007a0ae0007a2600007a3040007a3920007a3de0007a42a
0007a4a20007a5800007a5fa0007a69c0007a6f00007a8540007a9800007
aa920007ab940007ac5c0007add00007af100007b1360007b1e00007b30a
0007b40e0007b5ae0007b69a0007b7940007b8920007b9780007ba920007
bc4c0007bdfa0007bf680007bfe00007c0540007c1720007c1f60007c2f8
0007c4840007c5fc0007c7320007c83c0007c9b20007cb5a0007cd4c0007
cf3a0007d1000007d1740007d2240007d2da0007d38a0007d4480007d542
0007d6460007d7400007d84c0007d8d40007d9620007d9ea0007da7e0007
db5a0007dc500007dd340007de2a0007debe0007df7a0007e00e0007e0cc
0007e1bc0007e2c40007e3c20007e4d60007e5f80007e70c0007e84c0007
e9860007eaa80007ebbc0007ed000007ee540007f0680007f21a0007f2ce
0007f3ea0007f4c00007f5de0007f6bc0007f8500007f90a0007f9a60007
fa980007fb800007fc6c0007fcea0007fde40007ff220008004e00080082
000800c6000800d600080176000802180008030e000803fa000804d40008
05ac0008070a0008086a000809080008099e000809dc00080a1c00080a5a
00080a9a00080af400080b4c00080ba600080c0a00080c9600080e920008
0ee20008100e0008109400081114000811ee000812c2000813c6000815b2
000816ca0008173a000817ca0008188c0008195e000819ca00081a480008
1b9c00081be200081c2800081d0c00081d4800081da600081de400081e16
00081e5a00081e9c00081ecc00081fa60008206e00082152000821ce0008
221c000822a60008237c000823f4000824ae00082560000825aa0008267e
000827300008278800082798000827a8000827b8000827c8000828fa0008
290c000829ee00082a9400082b9e00082caa00082cee00082d3200082d66
00082d9a00082dea00082e3a00082e8c00082ede00082f3000082f860008
2fde000100000d5800f2003c009d000700020010002f0056000004ac041d
0005000200>
<0000003a02be0000000300000000006a00000000000300000001000a006a
0000000300000002000e00740000000300000003005e0082000000030000
0004000a006a0000000300000005001800b00000000300000006000e00e0
0000000300000007006200ee00000003000000080030000e000000030000
0009008a0150000000030000000d02aa01da000100000000000000350484
0001000000000001000504b90001000000000002000704be000100000000
0003002f04c50001000000000004000504b90001000000000005000c04dc
0001000000000006000704f40001000000000007003104fb000100000000
00080018048b00010000000000090045052c000100000000000d01550571
0003000104030002000c06c60003000104050002001006d2000300010406
0002000c06e20003000104070002001006ee0003000104080002001006fe
0003000104090000006a00000003000104090001000a006a000300010409
0002000e00740003000104090003005e00820003000104090004000a006a
0003000104090005001800b00003000104090006000e00e0000300010409
0007006200ee00030001040900080030000e0003000104090009008a0150
000300010409000d02aa01da00030001040a0002000c06c600030001040b
00020010070e00030001040c0002000c06c600030001040e0002000c071e
0003000104100002000e072a000300010413000200120738000300010414
0002000c06c600030001041500020010074a0003000104160002000c06c6
0003000104190002000e075a00030001041b00020010076800030001041d
0002000c06c600030001041f0002000c06c60003000104240002000e0778
00030001042a0002000e078600030001042d0002000e079400030001080a
0002000c06c60003000108160002000c06c6000300010c0a0002000c06c6
000300010c0c0002000c06c600a900200032003000310030002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0041
007200690061006c0052006500670075006c00610072004d006f006e006f
0074007900700065003a0041007200690061006c00200052006500670075
006c00610072003a00560065007200730069006f006e00200035002e0030
003600200028004d006900630072006f0073006f00660074002900410072
00690061006c004d00540041007200690061006c00200069007300200061
002000740072006100640065006d00610072006b0020006f006600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002e004d006f006e006f00740079
0070006500200054007900700065002000440072006100770069006e0067
0020004f006600660069006300650020002d00200052006f00620069006e
0020004e006900630068006f006c00610073002c00200050006100740072
00690063006900610020005300610075006e006400650072007300200031
0039003800320059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e00740020006100730020007000650072
006d0069007400740065006400200062007900200074006800650020006c
006900630065006e007300650020007400650072006d007300200066006f
00720020007400680065002000700072006f006400750063007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e007400200069007300200069006e0063006c0075006400650064002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002ea920
3230313020546865204d6f6e6f7479706520436f72706f726174696f6e2e
20416c6c205269676874732052657365727665642e417269616c52656775
6c61724d6f6e6f747970653a417269616c20526567756c61723a56657273
696f6e20352e303620284d6963726f736f667429417269616c4d54417269
616c20697320612074726164656d61726b206f6620546865204d6f6e6f74
79706520436f72706f726174696f6e2e4d6f6e6f74797065205479706520
44726177696e67204f6666696365202d20526f62696e204e6963686f6c61
732c205061747269636961205361756e646572732031393832596f75206d
617920757365207468697320666f6e7420746f20646973706c617920616e
64207072696e7420636f6e74656e74206173207065726d69747465642062
7920746865206c6963656e7365207465726d7320666f7220746865207072
6f6475637420696e207768696368207468697320666f6e7420697320696e
636c756465642e20596f75206d6179206f6e6c792028692920656d626564
207468697320666f6e7420696e20636f6e74656e74206173207065726d69
747465642062792074686520656d62656464696e67207265737472696374
696f6e7320696e636c7564656420696e207468697320666f6e743b20616e
6420286969292074656d706f726172696c7920646f776e6c6f6164207468
697320666f6e7420746f2061207072696e746572206f72206f7468657220
6f75747075742064657669636520746f2068656c70207072696e7420636f
6e74656e742e004e006f0072006d0061006c006f00620079010d0065006a
006e00e9006e006f0072006d0061006c005300740061006e006400610072
0064039a03b103bd03bf03bd03b903ba03ac004e006f0072006d00610061
006c0069004e006f0072006d00e1006c004e006f0072006d0061006c0065
005300740061006e00640061006100720064004e006f0072006d0061006c
006e0079041e0431044b0447043d044b0439004e006f0072006d00e1006c
006e0065004e0061007600610064006e006f0074006801b001a10300006e
00670041007200720075006e00740061b900540328b326181fd0bc032900
e0032900020329b22b1d1fb90327031db23b1f40b80323b31215320f412d
03200001002f0320000100200320006f032000af032000bf03200004005f
031e00010010031e007f031e0080031e00af031e00bf031e00d0031e0006
0000031e0010031e0020031e006f031e009f031e00e0031e0006031d031c
b2201f1041270319007f03190002000f031700ef031700ff03170003001f
0317002f0317004f0317005f0317008f0317009f03170006000f0317005f
0317006f0317007f031700bf031700f00317000600400317b2923340b803
17b28b3340b80317b36a6c3240b80317b2613340b80317b35c5d3240b803
17b357593240b80317b34d513240b80317b344493240b80317b23a3340b8
0317b331343240b80317b32e423240b80317b3272c3240b80317b3122532
80b80317b30a0d32c04116031600d00316000200700316000102c4000f01
01001f00a0031500b0031500020306000f0101001f00400312b32426329f
bf03040001030203010064001fffc00301b20d1132410a02ff02ef001200
1f02ee02ed0064001fffc002edb30e11329f414a02e200af02e200bf02e2
000302e202e202e102e1007f02e00001001002e0003f02e0009f02e000bf
02e000cf02e000ef02e0000602e002e002df02df02de02de000f02dd002f
02dd003f02dd005f02dd009f02dd00bf02dd00ef02dd000702dd02dd0010
02dc0001000002dc0001001002dc003f02dc000202dc02dc001002db0001
02db02db000f02da000102da02daffc002d3b2373932b9ffc002d3b22b2f
32b9ffc002d3b21f2532b9ffc002d3b2171b32b9ffc002d3b2121632b802
d2b2f9291fb90326031cb23b1f40bb0322003e00330322b225311fb80318
b23c691fb802e3b3202b1fa0413002d400b002d40002000002d4001002d4
002002d4005002d4006002d4007002d40006006002d6007002d6008002d6
009002d600a002d600b002d60006000002d6001002d6002002ca002002cc
002002d6003002d6004002d6005002d6000802d0b2202b1fb802cfb22642
1f411602ce02c70017001f02cd02c80017001f02cc02c60017001f02cb02
c50017001f02c902c5001e001f02ca02c6b21e1f00410b02c6000002c700
1002c6001002c7002f02c5000502c1b324121fff411102bf0001001f02bf
002f02bf003f02bf004f02bf005f02bf008f02bf000602bf0222b2641f12
410b02bb00ca0800001f02b200e90800001f02a600a20800406a1f402643
4932402043493240263a3d3240203a3d329f209f26024026969932402096
993240268e923240208e92324026848c324020848c3240267a813240207a
813240266c763240206c76324026646a324020646a3240265a5f3240205a
5f3240264f543240204f5432b8029eb724271f374f6b0120410f02770030
02770040027700500277000402770277027700f90400001f029bb22a2a1f
b8029a402b292a1f80ba0180bc0180520180a201806501807e0180810180
3c01805e01802b01801c01801e0180400180bb0138000100800140b40180
400180bb013800010080013940180180ca0180ad01807301802601802501
8024018020013740b80221b2493340b80221b2453340b80221b341423240
b80221b33d3e320f410f0221003f0221007f0221000300bf022100cf0221
00ff0221000300400221b320223240b80221b3191e3240b80222b32a3f32
40b80221b32e3a326f414802c3007f02c3008f02c300df02c30004002f02
c3006002c300cf02c30003000f02c3003f02c3005f02c300c002c300ef02
c300ff02c3000600df02220001008f02220001000f0222002f0222003f02
22005f0222007f022200ef0222000600bf022100ef02210002006f022100
7f022100af02210003002f0221003f0221004f0221000302c302c3022202
2202210221401d101c102b1048038f1c010f1e014f1eff1e023700161600
000012110811b8010db6f70df8f70d00094109028e028f001d001f029002
8f001d001f028fb2f91d1fb80198b226bb1f41150197001e0401001f0139
00260125001f013800730401001f0135001c0801001f0134001c02ab001f
0132b21c561fb8010fb2262c1fba010e001e0401b61ff91ce41fe91cb802
01b61fe81cbb1fd720b80401b21fd51cb802abb61fd41c891fc92fb80801
b21fbc26b80101b21fba20b80201b61fb91c381fadcab80401b21f8126b8
019ab21f7e26b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e
73b80401400f1f52265a1f481c891f441c621f4073b80801b61f3f1c5e1f
3c26b8019ab21f351cb80401b61f301cbb1f2b1cb80401b61f2a1c561f29
1cb80101b21f231eb80401b21f5537b80168402c07960758074f07360732
072c0721071f071d071b071408120810080e080c080a0808080608040802
08000814b8ffe0402b000001001406100000010006040000010004100000
01001002000001000200000001000002010802004a00b013034b024b5342
014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b5442
b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382bb00288b801
005458b801ffb101018e851bb0124358b900010111858d1bb90001012885
8d5959001816763f183f123e113946443e113946443e113946443e113946
443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb093
53205c58b901f201f04544b901f101f045445958b9033e01f2455258b901
f2033e4459594bb8015653205c58b9002001f14544b9002601f145445958
b9081e0020455258b90020081e4459594bb8019a53205c58b9002501f245
44b9002401f245445958b909090025455258b9002509094459594bb80401
53205c58b173244544b1242445445958b917200073455258b90073172044
59594bb8040153205c58b1ca254544b1252545445958b9168000ca455258
b900ca16804459594bb03e53205c58b11c1c4544b11e1c45445958b9011a
001c455258b9001c011a4459594bb05653205c58b11c1c4544b12f1c4544
5958b90189001c455258b9001c01894459594bb8030153205c58b11c1c45
44b11c1c45445958b90de0001c455258b9001c0de04459592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b65422b2b01b33b59635c456523456023456560234560b08b76
6818b080622020b163594565234520b003266062636820b003266165b059
236544b063234420b13b5c4565234520b003266062636820b003266165b0
5c236544b03b2344b1005c455458b15c406544b23b403b4523614459b347
503437456523456023456560234560b089766818b080622020b134504565
234520b003266062636820b003266165b050236544b034234420b1473745
65234520b003266062636820b003266165b037236544b0472344b1003745
5458b137406544b24740474523614459004b5342014b5058b10800425943
5c58b108004259b3020b0a124358601b2159421610703eb0124358b93b21
187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411b
ba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a8
0400000b2b59b0102342b0112342002b7475737500184569444569444569
447373737374757374752b2b2b2b74752b2b2b2b2b737373737373737373
737373737373737373737373737373732b2b2b45b0406144737400004bb0
2a534bb03f515a58b1070745b040604459004bb03a534bb03f515a58b10b
0b45b8ffc0604459004bb02e534bb03a515a58b1030345b040604459004b
b02e534bb03c515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400
735903b01e4b5402b0124b545ab012435c5a58ba009f0222000100735900
2b7473012b01732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b2b2b2b2b
2b0045694473456944734569447374754569447345694445694445694473
74456944456944732b2b2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b
2b2b2b2b2b737475732b7374757374752b2b2b742b2b000000>
[15785 15901 16277 16265 16245 15965 14085 16161 16321 16209 15953 15469 14369
16281 16349 16097 16057 16313 14945 16169 16329 16261 16213 15869 16253 16133
16337 16305 16157 16201 13221 16201 16161 11719 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 2094 59 <000100090000054905ba001302b540292612011901160b02291229133801
370338083809380d3a0e351237130a12132012213412201221340eb8ffe0
b31221340db8ffe0b312213409b8ffe0b312213408b8ffe0406c12213404
2012213403201221347701770b0226042907280b2a0e261236043a083a0b
3a0e3512480854045d085c0b5a0e5412670165046a086b0b690e65127504
7a08790b7a0d7712771386048a078a0a9504b808b712c604c908d704d808
d90ed612e704e808e80ee6122c06b8ffea40110c11025510160c1102550b
080c11025501b8fff8b30c110255b10602435458400b0c00151410180a11
065506b8ffe8400e0a110655100600020d00080a0202003f3c3f3c111239
392b2b01111239391b405d06070809090106050403030b1010130f0e0d0d
0110100d111213130b010009020d0b030c130a0b0106100213090a131320
00091400000903020d0d200c03140c0c030a090903030202130d0d0c0c00
082f15011517171a200c400c020cb8015fb7200a900ac00a030ab801b8b5
5f029f020202b801b8400a06b440105010cf100310b8015f400a20001914
15c22160a8182b2b4ef41a194dfd5d18e519ed5ded5dfd5d184e456544e6
5d003f3c103c103c3f3c103c103c87054d2e2b877dc4872e182b877dc400
1112393939390f0f870e103c3c08c4870e103c3c08c4870e103c3cc4870e
10c4c4c4592b2b002b2b3130015d005d012b2b2b2b2b2b2b2b435c58b900
0bffde400b1939012219390e181b3912b8ffdeb21b3913b8ffdeb21b3904
b8ffe8b61b3908221b3909b8ffc0b21c390db8ffc0401f1c3913401c3903
401c390d0e16173c131216173d080916173c030416173d0bb8ffde402e12
39012212390b0c1d213d01001d213c0b0a1d213d01021d213c0b0c13173d
010013173c0b0a13173d010213173c2b2b2b2b2b2b2b2b2b2b2b2b2b2b01
2b2b2b2b2b2b2b2b2b2b2b590171015d7133010133011617363701330101
23012627060701090237fe0ce7010a532331430127d3fdfd022bf0fe8f1f
213115fe9002fc02befe88753f50570185fd4dfcf9020b2d35501efe0100
>ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/X 59 def
end
ArialMT /Encoding get
dup 88 /X put
pop
end
%ADOEndSubsetFont
/FPLHWP+ArialMT /ArialMT findfont ct_VMDictPut
/FPLHWP+ArialMT*1 
[88{/.notdef}rp /X 167{/.notdef}rp]
FPLHWP+ArialMT nf
FPLHWP+ArialMT*1 [12.0002 0 0 -12.0002 0 0 ]msf
313.26 41.19 mo
(X)sh
/FPLHWO+CALIBRI,Italic*1 uf
/FPLHWO+CALIBRI,Italic uf
/LLIAAA+CALIBRI,Italic uf
/FPLHWP+ArialMT*1 uf
/FPLHWP+ArialMT uf
/ArialMT uf
[4.5 4.5 ] 0 dsh
233.75 51.05 mo
250.76 51.05 li
250.76 24.12 li
233.75 24.12 li
233.75 51.05 li
1 /0 /CSD get_res sepcs
.749 sep
@
1 lw
[] 0 dsh
212.21 17.35 mo
212.6 231.763 li
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
